<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>&lt;AutoPaly&gt; 0-分析设计</title>
    <link href="/2024/10/13/AutoPaly-0-Summary/"/>
    <url>/2024/10/13/AutoPaly-0-Summary/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>某天看到有个自动化测试的软件，想着借助这个开发一个自动挂机刷手游日常的程序，实验了一下，发现确实可行，但是挂机过程中，不能操作电脑，程序本身执行会代替发出鼠标点击和键盘键入事件。然后了解一下相关技术，发现这一块大部分是用C++和python实现的多，这也是他们本身的一些优势，然后我就继续找了找.NET是否能实现，后来渐渐的知道了ADB，OCR，OpenCV等技术。ADB是可以实现使用命令控制安卓设备或模拟器，实现屏幕点击和截图等功能，OCR就是文字识别，OpenCV就是图像识别。<br>核心就是利用ADB截图，利用OCR和OpenCV识别定位要点击的坐标位置，使用ADB实现一次屏幕点击。</p>          </div><h2 id="1-启发和尝试"><a href="#1-启发和尝试" class="headerlink" title="1.启发和尝试"></a>1.启发和尝试</h2><p>最早是在网上发现一些自动化测试的类库，可以实现定位屏幕指定图片的坐标，并实现点击。了解到的类库是这个【SuperPatrick】，提供了一些方法，可以实现传一个截图，可以在屏幕上识别并实现点击，从此就开始构想一套挂机程序。但是在实践过程中遇到一些阻碍，差点就放弃了。<br>具体的困难是，一些手游的电脑版，这个类库是没办法识别出游戏的窗体的，导致没办法实现，然后发现使用安卓模拟器可以正常识别，所以改用这个游戏的手机版本进行试验，然后找到一个封装更便利的桌面自动化类库【NetAutoGUI】，并且用这个写出一个勉强可以跑的挂机程序。<br>实现的效果勉强能使用，但是缺陷很大，就是这个类库本质是模拟发出电脑鼠标点击事件和键盘输入事件，在程序执行时，自己不能操作电脑，否则就会干扰，此时我也想过搞一个定时任务，然后设置在晚上11点自动启动模拟器，自动打开登录游戏，自动挂机，完成后自动关机，如果电脑支持设置电脑自动开机的话，那整个流程确实是完全自动化的。但还有一个很大的问题，就是完全靠截图的识别，有的时候成功率不高，识别不出来，一定要截图的分辨率，图片的背景颜色等，要完全一样才能识别，稍微差别一点点就没法识别成功，这个是硬伤。</p><p>（电脑设置任务自动启动：Win+R 输入 shell:startup 回车后打开启动文件夹，将快捷方式放进来即可）</p><h2 id="2-深入了解"><a href="#2-深入了解" class="headerlink" title="2.深入了解"></a>2.深入了解</h2><p>后来在网上找了相关的技术资料学习，发现了ADB，全称是Android Debug Bridge（安卓调试桥），连接 Android 与 PC 的桥梁，可以在电脑上使用命令控制安卓设备或模拟器，然后发现提供了操作安卓端很多的非常有效的命令，诸如：启动app、指定坐标实现点击、屏幕截图，刚刚好符合挂机所需要的命令，剩下的就是识别坐标，网上普遍的技术，一个就是文字识别，一个就是图像识别。文字识别我用下来识别率很高，除了一些特殊符号，基本都正常识别到，图像识别的成功率受分辨率的影响很大，后面我会持续学习关注一下有哪些跟高效的识别方法。简单写了一个程序跑了一下，可以成功实现，相比最早期的桌面自动化，这种可以不受当前用户操作影响，可以边执行挂机，边做其他事，并且引入文字识别，成功率高了一大截。</p><h2 id="3-技术类库"><a href="#3-技术类库" class="headerlink" title="3.技术类库"></a>3.技术类库</h2><h3 id="3-1-桌面自动化类库"><a href="#3-1-桌面自动化类库" class="headerlink" title="3.1.桌面自动化类库"></a>3.1.桌面自动化类库</h3><p>【NetAutoGUI】类库，在window上，可以实现应用程序操作，鼠标操作，键盘操作，自带识别图片在桌面的位置，不过这里主要使用他的启动应用程序的功能，和操作设置应用程序窗体最大化等功能，其他功能就不用了</p><h3 id="3-2-ADB操作类库"><a href="#3-2-ADB操作类库" class="headerlink" title="3.2.ADB操作类库"></a>3.2.ADB操作类库</h3><p>【AdvancedSharpAdbClient】类库，该类库包含了基本的操作ADB的功能，ADB本身还是需要我们自己额外去下载的</p><h3 id="3-3-文字识别类库"><a href="#3-3-文字识别类库" class="headerlink" title="3.3.文字识别类库"></a>3.3.文字识别类库</h3><p>【PaddleOCRJson.NET】类库，可以离线调用【PaddleOCR-json】，提供了.Net的相关实现</p><h3 id="3-4-图像识别类库"><a href="#3-4-图像识别类库" class="headerlink" title="3.4.图像识别类库"></a>3.4.图像识别类库</h3><p>【OpenCvSharp4】类库，OpenCV是一款常用的图像处理库，但是官方支持C++和Python。OpenCvSharp是一款使得OpenCV支持C#开发的一个库。</p><h3 id="3-5-定时任务类库"><a href="#3-5-定时任务类库" class="headerlink" title="3.5.定时任务类库"></a>3.5.定时任务类库</h3><p>【Quartz.NET】框架，Quartz是一个强大的开源作业调度框架，来源于Java，而Quartz.NET提供了.NET版本下的实现</p><h3 id="3-6-日志类库"><a href="#3-6-日志类库" class="headerlink" title="3.6.日志类库"></a>3.6.日志类库</h3><p>【log4net】类库</p><h3 id="3-7-后续待引入"><a href="#3-7-后续待引入" class="headerlink" title="3.7.后续待引入"></a>3.7.后续待引入</h3><p>后续可能会弄一个邮件通知功能，引入邮件通知相关的技术框架</p><h2 id="4-开发设计"><a href="#4-开发设计" class="headerlink" title="4.开发设计"></a>4.开发设计</h2><h3 id="4-1-功能设计"><a href="#4-1-功能设计" class="headerlink" title="4.1.功能设计"></a>4.1.功能设计</h3><p>设计之初，是打算开发一个可动态配置命令的挂机程序，不针对具体游戏，只要是安卓平台能运行的游戏都可以。<br>提供以下功能：<br>（1）可以随时配置定时任务，创建定时多个定时任务，设置定时任务启动时间，每个定时任务执行各自的挂机命令<br>（2）可以随时配置挂机命令，提供一个组别，每个组可以配置多条命令，每个命令可以包含多个子命令。例如：建立了一个游戏A刷日常刷金币的组别，这组包含的命令：首先识别登录游戏，识别关卡，识别开始作战，循环作战，直到“体力”用完为止。<br>（3）以上配置的信息以json的形式，存储到该程序本地，该程序以客户端的形式开发，但是由于本人对window端仅仅winform会用一点，但是不熟，一直是web端开发人员，所以打算套壳的方式，套一个web端作为前端。winform使用WebView2作为网页访问控件</p><h3 id="4-2-详细设计"><a href="#4-2-详细设计" class="headerlink" title="4.2.详细设计"></a>4.2.详细设计</h3><h4 id="4-2-1-客户端设计"><a href="#4-2-1-客户端设计" class="headerlink" title="4.2.1.客户端设计"></a>4.2.1.客户端设计</h4><p>有两种方案，一种是使用WebView2的自带的前后端通讯模式，不过官方只支持字符串和json的格式通讯，全局出入口只有这一个地方；另一种方法就是引入web端类库，搭建一套web端的完整请求流程<br>第一种方案安全，但是接口一多就比较麻烦，全部要自己手工分配，第二种方案符合web端开发习惯，前后端甚至可以分离开发，接口编写容易，但是会暂用本地一个端口，可能会暴露接口。</p><h4 id="4-2-2-json的存取"><a href="#4-2-2-json的存取" class="headerlink" title="4.2.2.json的存取"></a>4.2.2.json的存取</h4><p>json对象设计：</p><table><thead><tr><th>类型</th><th>属性名</th><th>意义</th></tr></thead><tbody><tr><td>字符串</td><td>Id</td><td>【唯一Id】可以用GUID，对应定时任务</td></tr><tr><td>字符串</td><td>Name</td><td>【命名】用户自定义</td></tr><tr><td>字符串</td><td>Remark</td><td>【备注】</td></tr><tr><td>对象集合</td><td>Commands</td><td>【命令脚本】</td></tr></tbody></table><p>Command对象</p><table><thead><tr><th>类型</th><th>属性名</th><th>意义</th></tr></thead><tbody><tr><td>可空数字</td><td>ParentIndex</td><td>上一级序号，有子集合的时候使用</td></tr><tr><td>数字</td><td>Index</td><td>【序号】命令必须按序号从小到大依次执行</td></tr><tr><td>字符串</td><td>Name</td><td>【命名】用户自定义</td></tr><tr><td>枚举类</td><td>Type</td><td>【类型】图片地址的方式或文字识别的方式，Text&#x2F;Image，默认Text</td></tr><tr><td>数字</td><td>Interval</td><td>【时间间隔】单位秒，如果含有子命令就是循环的间隔，如果没有子命令就是每次识别的间隔，默认3</td></tr><tr><td>数字</td><td>Timeout</td><td>【超时时间】单位秒，如果这个命令到超时了直接结束并提示，默认10</td></tr><tr><td>枚举类</td><td>Operate</td><td>【操作指令】WaitToClick&#x2F;Sleep&#x2F;Loop_Break&#x2F;Loop_Continue，默认WaitToClick</td></tr><tr><td>字符串</td><td>Content</td><td>【内容】图片相对地址、需要识别的文字内容、休眠等待的时间</td></tr><tr><td>数字</td><td>Count</td><td>【执行次数】至少1次，至多不限，该条命令执行指定次数，默认1</td></tr><tr><td>布尔</td><td>IsThrowExceptionIfNoFind</td><td>【是否抛出异常如果找不到内容时】不抛异常表示当前命令内容找不到就超时后就跳过了，不会中途结束，默认true</td></tr><tr><td>数字</td><td>GetIndex</td><td>【取值序号】文字识别，如果存在多个时，标记取哪个，顺序从左上到右下，默认0</td></tr><tr><td>对象集合</td><td>Points</td><td>坐标历史记录</td></tr><tr><td>对象集合</td><td>Commands</td><td>【命令脚本】可能这一个命令下面包含多个子命令，需要按【特殊指令】进行循环执行</td></tr></tbody></table><p>操作指令：<br>aitToClick等待直到能识别点击到为止，执行一次点击<br>Sleep休眠等待【内容】按毫秒为单位<br>Loop_Break重复循环执行子命令集合，直到有【内容】出现就跳出循环<br>Loop_Continue满足【内容】出现，一直重复循环执行子命令集合，直到【内容】不出现</p><h4 id="4-2-3-定时任务设计"><a href="#4-2-3-定时任务设计" class="headerlink" title="4.2.3.定时任务设计"></a>4.2.3.定时任务设计</h4><h4 id="4-2-4-前后端分离"><a href="#4-2-4-前后端分离" class="headerlink" title="4.2.4.前后端分离"></a>4.2.4.前后端分离</h4><h4 id="4-2-5-执行命令的详细流程"><a href="#4-2-5-执行命令的详细流程" class="headerlink" title="4.2.5.执行命令的详细流程"></a>4.2.5.执行命令的详细流程</h4><h3 id="4-3-页面设计"><a href="#4-3-页面设计" class="headerlink" title="4.3.页面设计"></a>4.3.页面设计</h3><h3 id="4-4-优化空间以及后续功能展望"><a href="#4-4-优化空间以及后续功能展望" class="headerlink" title="4.4.优化空间以及后续功能展望"></a>4.4.优化空间以及后续功能展望</h3><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>SuperPatrick技术文档 <a href="http://www.autotestops.com/index/xq/cid/28/id/41.html">http://www.autotestops.com/index/xq/cid/28/id/41.html</a><br>AdvancedSharpAdbClient <a href="https://github.com/SharpAdb/AdvancedSharpAdbClient">https://github.com/SharpAdb/AdvancedSharpAdbClient</a><br>PaddleOCR-json <a href="https://github.com/hiroi-sora/PaddleOCR-json">https://github.com/hiroi-sora/PaddleOCR-json</a><br>opencvsharp <a href="https://github.com/shimat/opencvsharp">https://github.com/shimat/opencvsharp</a><br>NetAutoGUI <a href="https://github.com/yangzhongke/NetAutoGUI">https://github.com/yangzhongke/NetAutoGUI</a><br>WebView2功能和API概述 <a href="https://learn.microsoft.com/zh-cn/microsoft-edge/webview2/concepts/overview-features-apis?tabs=dotnetcsharp">https://learn.microsoft.com/zh-cn/microsoft-edge/webview2/concepts/overview-features-apis?tabs=dotnetcsharp</a></p>]]></content>
    
    
    <categories>
      
      <category>研究学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>.NET</tag>
      
      <tag>自动化测试</tag>
      
      <tag>NetAutoGUI</tag>
      
      <tag>AdvancedSharpAdbClient</tag>
      
      <tag>PaddleOCRJson.NET</tag>
      
      <tag>OpenCvSharp4</tag>
      
      <tag>Quartz</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《2》经验总结-属性相等比较</title>
    <link href="/2024/01/20/SummaryPropertyEqualityComparer/"/>
    <url>/2024/01/20/SummaryPropertyEqualityComparer/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>汇总平时经常使用的公共帮助类，总结关于对象属性比较的方法</p><p>Github代码-MyHeplerProject（ConsoleApp.CompareTest.Compare） <a href="https://github.com/YuMan-LJP/demo">https://github.com/YuMan-LJP/demo</a></p>          </div><h2 id="样例对比数据"><a href="#样例对比数据" class="headerlink" title="样例对比数据"></a>样例对比数据</h2><p>旧数据</p><table><thead><tr><th>Id</th><th>UserName</th><th>EmailAddress</th><th>Surname</th><th>Name</th><th>Age</th><th>DefaultLanuage</th><th>Address</th><th>PhoneNumber</th></tr></thead><tbody><tr><td>1</td><td>Tom</td><td><a href="mailto:&#116;&#111;&#x6d;&#64;&#x74;&#x6f;&#x6d;&#46;&#x63;&#111;&#109;">&#116;&#111;&#x6d;&#64;&#x74;&#x6f;&#x6d;&#46;&#x63;&#111;&#109;</a></td><td>Smith</td><td>Tom</td><td>18</td><td>en</td><td>USA</td><td>123456</td></tr><tr><td>2</td><td>Jack</td><td><a href="mailto:&#x6a;&#97;&#99;&#107;&#x40;&#x6a;&#97;&#x63;&#x6b;&#x2e;&#99;&#111;&#x6d;">&#x6a;&#97;&#99;&#107;&#x40;&#x6a;&#97;&#x63;&#x6b;&#x2e;&#99;&#111;&#x6d;</a></td><td>Johnson</td><td>Jack</td><td>18</td><td>en</td><td>USA</td><td>132456</td></tr><tr><td>3</td><td>Peter</td><td><a href="mailto:&#112;&#101;&#116;&#101;&#114;&#x40;&#x70;&#x65;&#x74;&#101;&#x72;&#46;&#x63;&#x6f;&#x6d;">&#112;&#101;&#116;&#101;&#114;&#x40;&#x70;&#x65;&#x74;&#101;&#x72;&#46;&#x63;&#x6f;&#x6d;</a></td><td>Williams</td><td>Peter</td><td>18</td><td>en</td><td>USA</td><td>145623</td></tr><tr><td>4</td><td>Angela</td><td><a href="mailto:&#x61;&#110;&#x67;&#x65;&#x6c;&#97;&#64;&#97;&#x6e;&#x67;&#x65;&#x6c;&#97;&#46;&#99;&#x6f;&#x6d;">&#x61;&#110;&#x67;&#x65;&#x6c;&#97;&#64;&#97;&#x6e;&#x67;&#x65;&#x6c;&#97;&#46;&#99;&#x6f;&#x6d;</a></td><td>Taylor</td><td>Angela</td><td>18</td><td>en</td><td>USA</td><td>156342</td></tr></tbody></table><p>新数据</p><table><thead><tr><th>Id</th><th>UserName</th><th>EmailAddress</th><th>Surname</th><th>Name</th><th>Age</th><th>DefaultLanuage</th><th>Address</th><th>PhoneNumber</th></tr></thead><tbody><tr><td>11</td><td>Tom</td><td><a href="mailto:&#x74;&#111;&#x6d;&#64;&#x74;&#x6f;&#109;&#46;&#99;&#111;&#109;">&#x74;&#111;&#x6d;&#64;&#x74;&#x6f;&#109;&#46;&#99;&#111;&#109;</a></td><td>Smith</td><td>Tom</td><td>18</td><td>en</td><td>USA</td><td>123456</td></tr><tr><td>2</td><td>Jack</td><td><a href="mailto:&#x6a;&#x61;&#x63;&#x6b;&#64;&#x6a;&#x61;&#99;&#x6b;&#46;&#x63;&#x6f;&#109;">&#x6a;&#x61;&#x63;&#x6b;&#64;&#x6a;&#x61;&#99;&#x6b;&#46;&#x63;&#x6f;&#109;</a></td><td>Johnson</td><td>Jack</td><td>16</td><td>en</td><td>USA</td><td>132456</td></tr><tr><td>5</td><td>Liz</td><td><a href="mailto:&#108;&#105;&#122;&#x40;&#108;&#105;&#122;&#46;&#99;&#x6f;&#x6d;">&#108;&#105;&#122;&#x40;&#108;&#105;&#122;&#46;&#99;&#x6f;&#x6d;</a></td><td>Williams</td><td>Liz</td><td>18</td><td>en</td><td>USA</td><td>145623</td></tr><tr><td>6</td><td>Sam</td><td><a href="mailto:&#x73;&#97;&#x6d;&#x40;&#115;&#97;&#x6d;&#x2e;&#99;&#x6f;&#x6d;">&#x73;&#97;&#x6d;&#x40;&#115;&#97;&#x6d;&#x2e;&#99;&#x6f;&#x6d;</a></td><td>Taylor</td><td>Sam</td><td>18</td><td>en</td><td>USA</td><td>156342</td></tr></tbody></table><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">UserModel</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> UserName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> EmailAddress &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Surname &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Age &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> DefaultLanuage &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Address &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PhoneNumber &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="三种比较方式"><a href="#三种比较方式" class="headerlink" title="三种比较方式"></a>三种比较方式</h2><h3 id="（1）最笨的方法，一个一个字段的比"><a href="#（1）最笨的方法，一个一个字段的比" class="headerlink" title="（1）最笨的方法，一个一个字段的比"></a>（1）最笨的方法，一个一个字段的比</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> dbDatas = GetTestData1();<span class="hljs-comment">//旧数据（上述表格展示的数据），返回类型List&lt;UserModel&gt;</span><br><span class="hljs-keyword">var</span> newDatas = GetTestData2();<span class="hljs-comment">//新数据（上述表格展示的数据），返回类型List&lt;UserModel&gt;</span><br><br><span class="hljs-comment">//新增数据</span><br><span class="hljs-keyword">var</span> createDatas = newDatas.Where(w =&gt; !dbDatas.Any(a =&gt; a.UserName == w.UserName &amp;&amp; a.EmailAddress == w.EmailAddress)).ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;新增：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, createDatas.Select(s =&gt; s.Id))&#125;</span>&quot;</span>);<br><br><span class="hljs-comment">//删除数据</span><br><span class="hljs-keyword">var</span> deleteDatas = dbDatas.Where(w =&gt; !newDatas.Any(a =&gt; a.UserName == w.UserName &amp;&amp; a.EmailAddress == w.EmailAddress)).ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;删除：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, deleteDatas.Select(s =&gt; s.Id))&#125;</span>&quot;</span>);<br><br><span class="hljs-comment">//修改数据</span><br><span class="hljs-keyword">var</span> sameDatas = dbDatas.Join(newDatas,<br>    a =&gt; <span class="hljs-keyword">new</span> &#123; a.UserName, a.EmailAddress &#125;,<br>    b =&gt; <span class="hljs-keyword">new</span> &#123; b.UserName, b.EmailAddress &#125;,<br>    (r1, r2) =&gt; <span class="hljs-keyword">new</span> &#123; DbItem = r1, NewItem = r2 &#125;).ToList();<br><span class="hljs-keyword">var</span> updateDatas = <span class="hljs-keyword">new</span> List&lt;UserModel&gt;();<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> sameDatas)<br>&#123;<br>    <span class="hljs-keyword">var</span> isChange = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">if</span> (item.DbItem.Surname != item.NewItem.Surname)<br>    &#123;<br>        item.DbItem.Surname = item.NewItem.Surname;<br>        isChange = <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (item.DbItem.Name != item.NewItem.Name)<br>    &#123;<br>        item.DbItem.Name = item.NewItem.Name;<br>        isChange = <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (item.DbItem.Age != item.NewItem.Age)<br>    &#123;<br>        item.DbItem.Age = item.NewItem.Age;<br>        isChange = <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (item.DbItem.DefaultLanuage != item.NewItem.DefaultLanuage)<br>    &#123;<br>        item.DbItem.DefaultLanuage = item.NewItem.DefaultLanuage;<br>        isChange = <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (item.DbItem.Address != item.NewItem.Address)<br>    &#123;<br>        item.DbItem.Address = item.NewItem.Address;<br>        isChange = <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (item.DbItem.PhoneNumber != item.NewItem.PhoneNumber)<br>    &#123;<br>        item.DbItem.PhoneNumber = item.NewItem.PhoneNumber;<br>        isChange = <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (isChange)<br>    &#123;<br>        updateDatas.Add(item.DbItem);<br>    &#125;<br>&#125;<br>Console.WriteLine(<span class="hljs-string">$&quot;数据有变化：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, updateDatas.Select(s =&gt; s.Id))&#125;</span>&quot;</span>);<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">新增：5,6<br>删除：3,4<br>数据有变化：2<br></code></pre></td></tr></table></figure><h3 id="（2）使用签名判断数据是否变化"><a href="#（2）使用签名判断数据是否变化" class="headerlink" title="（2）使用签名判断数据是否变化"></a>（2）使用签名判断数据是否变化</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> dbDatas = GetTestData1();<span class="hljs-comment">//旧数据（上述表格展示的数据），返回类型List&lt;UserModel&gt;</span><br><span class="hljs-keyword">var</span> newDatas = GetTestData2();<span class="hljs-comment">//新数据（上述表格展示的数据），返回类型List&lt;UserModel&gt;</span><br><br><span class="hljs-comment">//新增数据</span><br><span class="hljs-keyword">var</span> createDatas = newDatas.Where(w =&gt; !dbDatas.Any(a =&gt; a.UserName == w.UserName &amp;&amp; a.EmailAddress == w.EmailAddress)).ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;新增：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, createDatas.Select(s =&gt; s.Id))&#125;</span>&quot;</span>);<br><br><span class="hljs-comment">//删除数据</span><br><span class="hljs-keyword">var</span> deleteDatas = dbDatas.Where(w =&gt; !newDatas.Any(a =&gt; a.UserName == w.UserName &amp;&amp; a.EmailAddress == w.EmailAddress)).ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;删除：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, deleteDatas.Select(s =&gt; s.Id))&#125;</span>&quot;</span>);<br><br><span class="hljs-comment">//修改数据</span><br><span class="hljs-keyword">var</span> updateDatas = dbDatas.Join(newDatas,<br>    a =&gt; <span class="hljs-keyword">new</span> &#123; a.UserName, a.EmailAddress &#125;,<br>    b =&gt; <span class="hljs-keyword">new</span> &#123; b.UserName, b.EmailAddress &#125;,<br>    (r1, r2) =&gt; <span class="hljs-keyword">new</span> &#123; DbItem = r1, NewItem = r2 &#125;)<br>    .Where(w =&gt; w.DbItem.CreateMD5() != w.NewItem.CreateMD5()).ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;数据有变化：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, updateDatas.Select(s =&gt; s.DbItem.Id))&#125;</span>&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">UserModel</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> UserName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> EmailAddress &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Surname &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Age &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> DefaultLanuage &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Address &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PhoneNumber &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment">//实体里面增加一个签名方法</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">CreateMD5</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> siginObj = <span class="hljs-keyword">new</span><br>        &#123;<br>            Surname,<br>            Name,<br>            Age,<br>            DefaultLanuage,<br>            Address,<br>            PhoneNumber<br>        &#125;;<br>        <span class="hljs-keyword">return</span> SecurityHelper.MD5EncryptByUTF8(JsonConvert.SerializeObject(siginObj));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">新增：5,6<br>删除：3,4<br>数据有变化：2<br></code></pre></td></tr></table></figure><p>签名方法代码</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">SecurityHelper</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">MD5EncryptByUTF8</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> inputString</span>)</span><br>    &#123;<br>        MD5CryptoServiceProvider md5 = <span class="hljs-keyword">new</span> MD5CryptoServiceProvider();<br>        <span class="hljs-built_in">byte</span>[] encryptedBytes = md5.ComputeHash(Encoding.UTF8.GetBytes(inputString));<br>        StringBuilder sb = <span class="hljs-keyword">new</span> StringBuilder();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; encryptedBytes.Length; i++)<br>        &#123;<br>            sb.AppendFormat(<span class="hljs-string">&quot;&#123;0:x2&#125;&quot;</span>, encryptedBytes[i]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> sb.ToString();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="（3）封装一套比较器来进行比较"><a href="#（3）封装一套比较器来进行比较" class="headerlink" title="（3）封装一套比较器来进行比较"></a>（3）封装一套比较器来进行比较</h3><p>封装的具体代码如下，核心是使用Emit技术替代反射</p><details><summary>Show Code</summary><p>（1）PropertyEmit类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PropertyEmit</span>&lt;<span class="hljs-title">TObj</span>&gt;<br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">readonly</span> ConcurrentDictionary&lt;Type, Dictionary&lt;<span class="hljs-built_in">string</span>, PropertyEmit&lt;TObj&gt;&gt;&gt; securityCache = <span class="hljs-keyword">new</span> ConcurrentDictionary&lt;Type, Dictionary&lt;<span class="hljs-built_in">string</span>, PropertyEmit&lt;TObj&gt;&gt;&gt;();<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> PropertySetterEmit&lt;TObj&gt; setter;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> PropertyGetterEmit&lt;TObj&gt; getter;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PropertyName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">private</span> <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> PropertyInfo Info &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">private</span> <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PropertyEmit</span>(<span class="hljs-params">PropertyInfo propertyInfo</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (propertyInfo == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(propertyInfo));<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (propertyInfo.CanWrite)<br>        &#123;<br>            setter = <span class="hljs-keyword">new</span> PropertySetterEmit&lt;TObj&gt;(propertyInfo);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (propertyInfo.CanRead)<br>        &#123;<br>            getter = <span class="hljs-keyword">new</span> PropertyGetterEmit&lt;TObj&gt;(propertyInfo);<br>        &#125;<br><br>        <span class="hljs-keyword">this</span>.PropertyName = propertyInfo.Name;<br>        <span class="hljs-keyword">this</span>.Info = propertyInfo;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 属性赋值操作（Emit技术）</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;instance&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;value&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SetValue</span>(<span class="hljs-params">TObj instance, <span class="hljs-built_in">object</span> <span class="hljs-keyword">value</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.setter?.Invoke(instance, <span class="hljs-keyword">value</span>);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 属性取值操作(Emit技术)</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;instance&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">object</span> <span class="hljs-title">GetValue</span>(<span class="hljs-params">TObj instance</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.getter?.Invoke(instance);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取对象所有属性</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> Key：属性名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> Value：属性PropertyEmit实例</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Dictionary&lt;<span class="hljs-built_in">string</span>, PropertyEmit&lt;TObj&gt;&gt; GetPropertyEmits()<br>    &#123;<br>        <span class="hljs-keyword">return</span> securityCache.GetOrAdd(<span class="hljs-keyword">typeof</span>(TObj), t =&gt; t.GetProperties().Select(p =&gt; <span class="hljs-keyword">new</span> PropertyEmit&lt;TObj&gt;(p)).ToDictionary(k =&gt; k.PropertyName));<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取对象指定属性</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;propertyName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> PropertyEmit&lt;TObj&gt; <span class="hljs-title">GetPropertyEmit</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> propertyName</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> propertyEmits = GetPropertyEmits();<br>        <span class="hljs-keyword">if</span> (!propertyEmits.ContainsKey(propertyName))<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentException(<span class="hljs-string">$&quot;类型“<span class="hljs-subst">&#123;<span class="hljs-keyword">typeof</span>(TObj).FullName&#125;</span>”不含属性“<span class="hljs-subst">&#123;propertyName&#125;</span>”&quot;</span>, <span class="hljs-keyword">nameof</span>(propertyName));<br>        &#125;<br>        <span class="hljs-keyword">return</span> propertyEmits[propertyName];<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 创建属性值MD5签名</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;instance&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;propertyNames&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">CreatePropertyValueMd5Sign</span>(<span class="hljs-params">TObj instance, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] propertyNames</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (instance <span class="hljs-keyword">is</span> <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (propertyNames <span class="hljs-keyword">is</span> <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(propertyNames));<br>        &#125;<br>        <span class="hljs-keyword">var</span> properties = GetPropertyEmits();<br>        Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">object</span>&gt; propertyValues = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">object</span>&gt;();<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> propertyName <span class="hljs-keyword">in</span> propertyNames)<br>        &#123;<br>            propertyValues.Add(propertyName, properties[propertyName].GetValue(instance));<br>        &#125;<br><br>        MD5CryptoServiceProvider md5 = <span class="hljs-keyword">new</span> MD5CryptoServiceProvider();<br>        <span class="hljs-built_in">byte</span>[] encryptedBytes = md5.ComputeHash(Encoding.ASCII.GetBytes(JsonConvert.SerializeObject(propertyValues).ToUpper()));<br>        StringBuilder sb = <span class="hljs-keyword">new</span> StringBuilder();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; encryptedBytes.Length; i++)<br>        &#123;<br>            sb.AppendFormat(<span class="hljs-string">&quot;&#123;0:x2&#125;&quot;</span>, encryptedBytes[i]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> sb.ToString();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>（2）PropertyGetterEmit类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> Emit 动态构造 Get方法</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PropertyGetterEmit</span>&lt;<span class="hljs-title">TObj</span>&gt;<br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Func&lt;TObj, <span class="hljs-built_in">object</span>&gt; getter;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PropertyGetterEmit</span>(<span class="hljs-params">PropertyInfo propertyInfo</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//Objcet value = Obj.GetValue(object instance);</span><br>        <span class="hljs-keyword">if</span> (propertyInfo == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(propertyInfo));<br>        &#125;<br>        <span class="hljs-keyword">this</span>.getter = CreateGetterEmit(propertyInfo);<br><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">object</span> <span class="hljs-title">Invoke</span>(<span class="hljs-params">TObj instance</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> getter?.Invoke(instance);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> Func&lt;TObj, <span class="hljs-built_in">object</span>&gt; <span class="hljs-title">CreateGetterEmit</span>(<span class="hljs-params">PropertyInfo property</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (property == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(property));<br>        &#125;<br><br>        MethodInfo getMethod = property.GetGetMethod(<span class="hljs-literal">true</span>);<br><br>        DynamicMethod dm = <span class="hljs-keyword">new</span> DynamicMethod(<span class="hljs-string">&quot;PropertyGetter&quot;</span>, <span class="hljs-keyword">typeof</span>(<span class="hljs-built_in">object</span>), <span class="hljs-keyword">new</span> Type[] &#123; <span class="hljs-keyword">typeof</span>(<span class="hljs-built_in">object</span>) &#125;, property.DeclaringType, <span class="hljs-literal">true</span>);<br><br>        ILGenerator il = dm.GetILGenerator();<br><br>        <span class="hljs-keyword">if</span> (!getMethod.IsStatic)<br>        &#123;<br>            il.Emit(OpCodes.Ldarg_0);<br>            il.EmitCall(OpCodes.Callvirt, getMethod, <span class="hljs-literal">null</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>            il.EmitCall(OpCodes.Call, getMethod, <span class="hljs-literal">null</span>);<br><br>        <span class="hljs-keyword">if</span> (property.PropertyType.IsValueType)<br>        &#123;<br>            il.Emit(OpCodes.Box, property.PropertyType);<br>        &#125;<br>        il.Emit(OpCodes.Ret);<br><br>        <span class="hljs-keyword">return</span> (Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;)dm.CreateDelegate(<span class="hljs-keyword">typeof</span>(Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>（3）PropertySetterEmit类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> Emit动态构造Set方法</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PropertySetterEmit</span>&lt;<span class="hljs-title">TObj</span>&gt;<br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Action&lt;TObj, <span class="hljs-built_in">object</span>&gt; setFunc;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PropertySetterEmit</span>(<span class="hljs-params">PropertyInfo propertyInfo</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//Obj.Set(Object instance,Object value)</span><br>        <span class="hljs-keyword">if</span> (propertyInfo == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(propertyInfo));<br>        &#125;<br>        <span class="hljs-keyword">this</span>.setFunc = CreatePropertySetter(propertyInfo);<br><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> Action&lt;TObj, <span class="hljs-built_in">object</span>&gt; <span class="hljs-title">CreatePropertySetter</span>(<span class="hljs-params">PropertyInfo property</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (property == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(property));<br>        &#125;<br><br>        MethodInfo setMethod = property.GetSetMethod(<span class="hljs-literal">true</span>);<br><br>        DynamicMethod dm = <span class="hljs-keyword">new</span> DynamicMethod(<span class="hljs-string">&quot;PropertySetter&quot;</span>, <span class="hljs-literal">null</span>, <span class="hljs-keyword">new</span> Type[] &#123; <span class="hljs-keyword">typeof</span>(<span class="hljs-built_in">object</span>), <span class="hljs-keyword">typeof</span>(<span class="hljs-built_in">object</span>) &#125;, property.DeclaringType, <span class="hljs-literal">true</span>);<br><br>        ILGenerator il = dm.GetILGenerator();<br><br>        <span class="hljs-keyword">if</span> (!setMethod.IsStatic)<br>        &#123;<br>            il.Emit(OpCodes.Ldarg_0);<br>        &#125;<br>        il.Emit(OpCodes.Ldarg_1);<br><br>        EmitCastToReference(il, property.PropertyType);<br>        <span class="hljs-keyword">if</span> (!setMethod.IsStatic &amp;&amp; !property.DeclaringType.IsValueType)<br>        &#123;<br>            il.EmitCall(OpCodes.Callvirt, setMethod, <span class="hljs-literal">null</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            il.EmitCall(OpCodes.Call, setMethod, <span class="hljs-literal">null</span>);<br>        &#125;<br><br>        il.Emit(OpCodes.Ret);<br>        <span class="hljs-keyword">return</span> (Action&lt;TObj, <span class="hljs-built_in">object</span>&gt;)dm.CreateDelegate(<span class="hljs-keyword">typeof</span>(Action&lt;TObj, <span class="hljs-built_in">object</span>&gt;));<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">EmitCastToReference</span>(<span class="hljs-params">ILGenerator il, Type type</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (type.IsValueType)<br>        &#123;<br>            il.Emit(OpCodes.Unbox_Any, type);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            il.Emit(OpCodes.Castclass, type);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Invoke</span>(<span class="hljs-params">TObj instance, <span class="hljs-built_in">object</span> <span class="hljs-keyword">value</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.setFunc?.Invoke(instance, <span class="hljs-keyword">value</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>（4）PropertyEmitExtensions类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PropertyEmitExtensions</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取对象所有属性</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> Key：属性名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> Value：属性PropertyEmit实例</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">Dictionary</span>&lt;<span class="hljs-title">string</span>, <span class="hljs-title">PropertyEmit</span>&lt;<span class="hljs-title">TObj</span>&gt;&gt; <span class="hljs-title">GetPropertyEmits</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> TObj _</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> PropertyEmit&lt;TObj&gt;.GetPropertyEmits();<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 获取对象指定属性</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;propertyName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">PropertyEmit</span>&lt;<span class="hljs-title">TObj</span>&gt; <span class="hljs-title">GetPropertyEmit</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> TObj _, <span class="hljs-built_in">string</span> propertyName</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> PropertyEmit&lt;TObj&gt;.GetPropertyEmit(propertyName);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 创建属性值MD5签名</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;instance&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;propertyNames&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">CreatePropertyValueMd5Sign</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> TObj instance, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] propertyNames</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> PropertyEmit&lt;TObj&gt;.CreatePropertyValueMd5Sign(instance, propertyNames);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据表达式获取属性名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;_&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;expression&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span>[] <span class="hljs-title">GetPropertyNameByExpression</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> TObj _, Expression&lt;Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;&gt; expression</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> GetPropertyNameByExpression(expression);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据表达式获取属性名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;expression&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span>[] <span class="hljs-title">GetPropertyNameByExpression</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;&gt; expression</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (expression <span class="hljs-keyword">is</span> <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(expression));<br>        &#125;<br>        <span class="hljs-keyword">switch</span> (expression.Body.NodeType)<br>        &#123;<br>            <span class="hljs-keyword">case</span> ExpressionType.New:<br>                <span class="hljs-keyword">var</span> newExpression = ((NewExpression)expression.Body);<br>                <span class="hljs-keyword">var</span> members = newExpression.Members.Select(s =&gt; s.Name).ToArray();<br>                <span class="hljs-keyword">var</span> arguments = newExpression.Arguments.Select(s =&gt; ((MemberExpression)s).Member.Name).ToArray();<br>                <span class="hljs-keyword">if</span> (members.Except(arguments).Any() || arguments.Except(members).Any())<br>                &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>                &#125;<br>                <span class="hljs-keyword">return</span> members;<br>            <span class="hljs-keyword">case</span> ExpressionType.Convert:<br>                <span class="hljs-keyword">var</span> operand = ((UnaryExpression)expression.Body).Operand;<br>                <span class="hljs-keyword">if</span> (operand.NodeType != ExpressionType.MemberAccess)<br>                &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>                &#125;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>[] &#123; ((MemberExpression)operand).Member.Name &#125;;<br>            <span class="hljs-keyword">case</span> ExpressionType.MemberAccess:<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>[] &#123; ((MemberExpression)expression.Body).Member.Name &#125;;<br>            <span class="hljs-literal">default</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 比较两个对象指定的属性是否相等（注意：使用前请仔细阅读<span class="hljs-doctag">&lt;see cref=&quot;ObjectPropertyEqualityComparerOptions&quot;/&gt;</span>查看默认的比较行为）</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj1&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj2&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;comparer&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> TObj obj1, TObj obj2, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] compareProperties</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(compareProperties).Equals(obj1, obj2);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 比较两个对象指定的属性是否相等</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj1&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj2&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;configureOptions&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;compareProperties&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> TObj obj1, TObj obj2, Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] compareProperties</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(configureOptions, compareProperties).Equals(obj1, obj2);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 比较两个对象指定的属性是否相等（注意：使用前请仔细阅读<span class="hljs-doctag">&lt;see cref=&quot;ObjectPropertyEqualityComparerOptions&quot;/&gt;</span>查看默认的比较行为）</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj1&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj2&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;comparePropertiesSelector&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> TObj obj1, TObj obj2, Expression&lt;Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;&gt; comparePropertiesSelector</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(comparePropertiesSelector).Equals(obj1, obj2);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 比较两个对象指定的属性是否相等</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj1&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj2&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;configureOptions&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;comparePropertiesSelector&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> TObj obj1, TObj obj2, Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions, Expression&lt;Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;&gt; comparePropertiesSelector</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(configureOptions, comparePropertiesSelector).Equals(obj1, obj2);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据指定属性对集合去重（注意：使用前请仔细阅读<span class="hljs-doctag">&lt;see cref=&quot;ObjectPropertyEqualityComparerOptions&quot;/&gt;</span>查看默认的比较行为）</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;source&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;compareProperties&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">IEnumerable</span>&lt;<span class="hljs-title">TObj</span>&gt; <span class="hljs-title">Distinct</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> IEnumerable&lt;TObj&gt; source, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] compareProperties</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> source.Distinct(<span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(compareProperties));<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据指定属性对集合去重</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;source&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;configureOptions&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;compareProperties&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">IEnumerable</span>&lt;<span class="hljs-title">TObj</span>&gt; <span class="hljs-title">Distinct</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> IEnumerable&lt;TObj&gt; source, Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] compareProperties</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> source.Distinct(<span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(configureOptions, compareProperties));<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据指定属性对集合去重（注意：使用前请仔细阅读<span class="hljs-doctag">&lt;see cref=&quot;ObjectPropertyEqualityComparerOptions&quot;/&gt;</span>查看默认的比较行为）</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;source&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;comparePropertiesSelector&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">IEnumerable</span>&lt;<span class="hljs-title">TObj</span>&gt; <span class="hljs-title">Distinct</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> IEnumerable&lt;TObj&gt; source, Expression&lt;Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;&gt; comparePropertiesSelector</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> source.Distinct(<span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(comparePropertiesSelector));<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 根据指定属性对集合去重</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;source&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;configureOptions&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;comparePropertiesSelector&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title">IEnumerable</span>&lt;<span class="hljs-title">TObj</span>&gt; <span class="hljs-title">Distinct</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> IEnumerable&lt;TObj&gt; source, Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions, Expression&lt;Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;&gt; comparePropertiesSelector</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> source.Distinct(<span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(configureOptions, comparePropertiesSelector));<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 比较两个对象指定的属性是否相等，如果不想等则将source的属性值更新成与target的一样（注意：使用前请仔细阅读<span class="hljs-doctag">&lt;see cref=&quot;ObjectPropertyEqualityComparerOptions&quot;/&gt;</span>查看默认的比较行为）</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;source&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;target&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;compareProperties&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">TryUpdatePropertyValueIfNotEquals</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params">[DisallowNull] <span class="hljs-keyword">this</span> TObj source, [DisallowNull] TObj target, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] compareProperties</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(compareProperties).TryUpdatePropertyValueIfNotEquals(source, target);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 比较两个对象指定的属性是否相等，如果不想等则将source的属性值更新成与target的一样</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;source&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;target&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;configureOptions&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;compareProperties&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">TryUpdatePropertyValueIfNotEquals</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params">[DisallowNull] <span class="hljs-keyword">this</span> TObj source, [DisallowNull] TObj target, Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] compareProperties</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(configureOptions, compareProperties).TryUpdatePropertyValueIfNotEquals(source, target);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 比较两个对象指定的属性是否相等，如果不想等则将source的属性值更新成与target的一样（注意：使用前请仔细阅读<span class="hljs-doctag">&lt;see cref=&quot;ObjectPropertyEqualityComparerOptions&quot;/&gt;</span>查看默认的比较行为）</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;source&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;target&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;comparePropertiesSelector&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">TryUpdatePropertyValueIfNotEquals</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params">[DisallowNull] <span class="hljs-keyword">this</span> TObj source, [DisallowNull] TObj target, Expression&lt;Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;&gt; comparePropertiesSelector</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(comparePropertiesSelector).TryUpdatePropertyValueIfNotEquals(source, target);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 比较两个对象指定的属性是否相等，如果不想等则将source的属性值更新成与target的一样</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;TObj&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;source&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;target&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;configureOptions&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;comparePropertiesSelector&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">TryUpdatePropertyValueIfNotEquals</span>&lt;<span class="hljs-title">TObj</span>&gt;(<span class="hljs-params">[DisallowNull] <span class="hljs-keyword">this</span> TObj source, [DisallowNull] TObj target, Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions, Expression&lt;Func&lt;TObj, <span class="hljs-built_in">object</span>&gt;&gt; comparePropertiesSelector</span>) <span class="hljs-keyword">where</span> TObj : <span class="hljs-keyword">class</span></span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;TObj&gt;(configureOptions, comparePropertiesSelector).TryUpdatePropertyValueIfNotEquals(source, target);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>（5）ObjectPropertyEqualityComparerOptions类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 对象属性值相等比较配置选项</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ObjectPropertyEqualityComparerOptions</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 字符串忽略大小写比较</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> StringPropertyAutoIgnoreCase &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-literal">true</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 字符串自动去除前后空格</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> StringPropertyAutoTrimWhitespace &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-literal">true</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 字符串自动将null转换为string.Empty</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> StringPropertyAutoConvertNullToEmpty &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>（6）ObjectPropertyEqualityComparer类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 对象属性值相等比较</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ObjectPropertyEqualityComparer</span>&lt;<span class="hljs-title">T</span>&gt; : <span class="hljs-title">IEqualityComparer</span>&lt;<span class="hljs-title">T</span>&gt;<br>    <span class="hljs-keyword">where</span> <span class="hljs-title">T</span> : <span class="hljs-keyword">class</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">string</span>[] _compareProperties;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ObjectPropertyEqualityComparerOptions _options = <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparerOptions();<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Dictionary&lt;<span class="hljs-built_in">string</span>, PropertyEmit&lt;T&gt;&gt; _propertyEmitDic = PropertyEmit&lt;T&gt;.GetPropertyEmits();<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectPropertyEqualityComparer</span>(<span class="hljs-params"><span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] compareProperties</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (compareProperties <span class="hljs-keyword">is</span> <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(compareProperties));<br>        &#125;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> property <span class="hljs-keyword">in</span> compareProperties)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (!_propertyEmitDic.ContainsKey(property) || !_propertyEmitDic[property].Info.CanRead)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentException(<span class="hljs-string">$&quot;类型“<span class="hljs-subst">&#123;<span class="hljs-keyword">typeof</span>(T).FullName&#125;</span>”不含可读属性“<span class="hljs-subst">&#123;property&#125;</span>”&quot;</span>, <span class="hljs-keyword">nameof</span>(compareProperties));<br>            &#125;<br>        &#125;<br>        _compareProperties = compareProperties;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectPropertyEqualityComparer</span>(<span class="hljs-params">Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] compareProperties</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">this</span>(<span class="hljs-params">compareProperties</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (configureOptions <span class="hljs-keyword">is</span> <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(configureOptions));<br>        &#125;<br>        configureOptions(_options);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectPropertyEqualityComparer</span>(<span class="hljs-params">Expression&lt;Func&lt;T, <span class="hljs-built_in">object</span>&gt;&gt; comparePropertiesSelector</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> compareProperties = PropertyEmitExtensions.GetPropertyNameByExpression(comparePropertiesSelector);<br>        <span class="hljs-keyword">if</span> (compareProperties <span class="hljs-keyword">is</span> <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(compareProperties));<br>        &#125;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> property <span class="hljs-keyword">in</span> compareProperties)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (!_propertyEmitDic.ContainsKey(property) || !_propertyEmitDic[property].Info.CanRead)<br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentException(<span class="hljs-string">$&quot;类型“<span class="hljs-subst">&#123;<span class="hljs-keyword">typeof</span>(T).FullName&#125;</span>”不含可读属性“<span class="hljs-subst">&#123;property&#125;</span>”&quot;</span>, <span class="hljs-keyword">nameof</span>(compareProperties));<br>            &#125;<br>        &#125;<br>        _compareProperties = compareProperties;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectPropertyEqualityComparer</span>(<span class="hljs-params">Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions, Expression&lt;Func&lt;T, <span class="hljs-built_in">object</span>&gt;&gt; comparePropertiesSelector</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">this</span>(<span class="hljs-params">comparePropertiesSelector</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (configureOptions <span class="hljs-keyword">is</span> <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentNullException(<span class="hljs-keyword">nameof</span>(configureOptions));<br>        &#125;<br>        configureOptions(_options);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params">[AllowNull] T x, [AllowNull] T y</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (x == <span class="hljs-literal">null</span> || y == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> x == y;<br>        &#125;<br><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> property <span class="hljs-keyword">in</span> _compareProperties)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (!IsEqualsOfProperty(x, y, property))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">virtual</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">TryUpdatePropertyValueIfNotEquals</span>(<span class="hljs-params">[DisallowNull] T source, [DisallowNull] T target</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> isUpdated = <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> property <span class="hljs-keyword">in</span> _compareProperties)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (!IsEqualsOfProperty(source, target, property))<br>            &#123;<br>                _propertyEmitDic[property].SetValue(source, _propertyEmitDic[property].GetValue(target));<br>                isUpdated = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> isUpdated;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> <span class="hljs-title">GetHashCode</span>(<span class="hljs-params">[DisallowNull] T obj</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> hashCode = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> property <span class="hljs-keyword">in</span> _compareProperties)<br>        &#123;<br>            <span class="hljs-keyword">var</span> <span class="hljs-keyword">value</span> = GetPropertyValue(obj, property);<br>            hashCode ^= <span class="hljs-keyword">value</span>?.GetHashCode() ?? <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> hashCode;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">virtual</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">IsEqualsOfProperty</span>(<span class="hljs-params">T x, T y, <span class="hljs-built_in">string</span> property</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> value1 = GetPropertyValue(x, property);<br>        <span class="hljs-keyword">var</span> value2 = GetPropertyValue(y, property);<br><br>        <span class="hljs-keyword">if</span> (value1 == <span class="hljs-literal">null</span> || value2 == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> value1 == value2;<br>        &#125;<br>        <span class="hljs-keyword">return</span> value1.Equals(value2);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-built_in">object</span> <span class="hljs-title">GetPropertyValue</span>(<span class="hljs-params">T obj, <span class="hljs-built_in">string</span> property</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> <span class="hljs-keyword">value</span> = obj == <span class="hljs-literal">null</span> ? <span class="hljs-literal">null</span> : _propertyEmitDic[property].GetValue(obj);<br>        <span class="hljs-keyword">if</span> (_propertyEmitDic[property].Info.PropertyType == <span class="hljs-keyword">typeof</span>(<span class="hljs-built_in">string</span>))<br>        &#123;<br>            <span class="hljs-keyword">var</span> str = (<span class="hljs-built_in">string</span>)<span class="hljs-keyword">value</span>;<br>            <span class="hljs-keyword">if</span> (_options.StringPropertyAutoConvertNullToEmpty)<br>            &#123;<br>                str ??= <span class="hljs-built_in">string</span>.Empty;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (_options.StringPropertyAutoTrimWhitespace)<br>            &#123;<br>                str = str?.Trim();<br>            &#125;<br>            <span class="hljs-keyword">if</span> (_options.StringPropertyAutoIgnoreCase)<br>            &#123;<br>                str = str?.ToUpper();<br>            &#125;<br>            <span class="hljs-keyword">return</span> str;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">value</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>以下展示调用实例</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> dbDatas = GetTestData1();<span class="hljs-comment">//旧数据（上述表格展示的数据），返回类型List&lt;UserModel&gt;</span><br><span class="hljs-keyword">var</span> newDatas = GetTestData2();<span class="hljs-comment">//新数据（上述表格展示的数据），返回类型List&lt;UserModel&gt;</span><br><br><span class="hljs-keyword">var</span> itemKeyProperties = <span class="hljs-keyword">new</span> UserModel().GetPropertyNameByExpression(g =&gt; <span class="hljs-keyword">new</span> &#123; g.UserName, g.EmailAddress &#125;);<br><span class="hljs-keyword">var</span> itemKeyComparer = <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;UserModel&gt;(itemKeyProperties);<br><span class="hljs-keyword">var</span> itemValueProperties = <span class="hljs-keyword">new</span> UserModel().GetPropertyNameByExpression(g =&gt; <span class="hljs-keyword">new</span> &#123; g.Surname, g.Name, g.Age, g.DefaultLanuage, g.Address, g.PhoneNumber &#125;);<br><span class="hljs-keyword">var</span> itemValueComparer = <span class="hljs-keyword">new</span> ObjectPropertyEqualityComparer&lt;UserModel&gt;(itemValueProperties);<br><br><span class="hljs-comment">//新增数据</span><br><span class="hljs-keyword">var</span> createDatas = newDatas.Except(dbDatas, itemKeyComparer).ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;新增：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, createDatas.Select(s =&gt; s.Id))&#125;</span>&quot;</span>);<br><br><span class="hljs-comment">//删除数据</span><br><span class="hljs-keyword">var</span> deleteDatas = dbDatas.Except(newDatas, itemKeyComparer).ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;删除：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, deleteDatas.Select(s =&gt; s.Id))&#125;</span>&quot;</span>);<br><br><span class="hljs-comment">//修改数据</span><br><span class="hljs-keyword">var</span> updateDatas = dbDatas.Join(newDatas, o =&gt; o, i =&gt; i, (r1, r2) =&gt; <span class="hljs-keyword">new</span> &#123; DbItem = r1, NewItem = r2 &#125;, itemKeyComparer)<br>    .Where(w =&gt; itemValueComparer.TryUpdatePropertyValueIfNotEquals(w.DbItem, w.NewItem))<br>    .ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;数据有变化：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, updateDatas.Select(s =&gt; s.DbItem.Id))&#125;</span>&quot;</span>);<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">新增：5,6<br>删除：3,4<br>数据有变化：2<br></code></pre></td></tr></table></figure><h3 id="（4）比较器封装成特性来使用"><a href="#（4）比较器封装成特性来使用" class="headerlink" title="（4）比较器封装成特性来使用"></a>（4）比较器封装成特性来使用</h3><p>封装的具体代码如下：</p><details><summary>Show Code</summary><p>（1）ObjectKeyPropertyAttribute类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 对象Key属性特性标记</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>[<span class="hljs-meta">AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = true)</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ObjectKeyPropertyAttribute</span> : <span class="hljs-title">Attribute</span><br>&#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>（2）ObjectValuePropertyIgnoreAttribute类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 对象忽略作为value属性特性标记</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>[<span class="hljs-meta">AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = true)</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ObjectValuePropertyIgnoreAttribute</span> : <span class="hljs-title">Attribute</span><br>&#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>（3）ObjectKeyPropertyEqualityComparer类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 对象Key属性值相等比较</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ObjectKeyPropertyEqualityComparer</span>&lt;<span class="hljs-title">T</span>&gt; : <span class="hljs-title">ObjectPropertyEqualityComparer</span>&lt;<span class="hljs-title">T</span>&gt;<br>    <span class="hljs-keyword">where</span> <span class="hljs-title">T</span> : <span class="hljs-keyword">class</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span>[] KeyProperties &#123; <span class="hljs-keyword">get</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-title">ObjectKeyPropertyEqualityComparer</span>()</span><br>    &#123;<br>        KeyProperties = PropertyEmit&lt;T&gt;.GetPropertyEmits().Where(w =&gt; w.Value.Info.IsDefined(<span class="hljs-keyword">typeof</span>(ObjectKeyPropertyAttribute), <span class="hljs-literal">true</span>)).Select(s =&gt; s.Key).ToArray();<br>        <span class="hljs-keyword">if</span> (KeyProperties == <span class="hljs-literal">null</span> || KeyProperties.Length == <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">$&quot;类型“<span class="hljs-subst">&#123;<span class="hljs-keyword">typeof</span>(T).FullName&#125;</span>”缺少用ObjectKeyPropertyAttribute特性标记的属性&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectKeyPropertyEqualityComparer</span>() :</span><br><span class="hljs-function">        <span class="hljs-title">base</span>(<span class="hljs-params">KeyProperties</span>)</span><br>    &#123;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectKeyPropertyEqualityComparer</span>(<span class="hljs-params">Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">base</span>(<span class="hljs-params">configureOptions, KeyProperties</span>)</span><br>    &#123;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>（4）ObjectValuePropertyEqualityComparer类：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 对象value属性值相等比较</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ObjectValuePropertyEqualityComparer</span>&lt;<span class="hljs-title">T</span>&gt; : <span class="hljs-title">ObjectPropertyEqualityComparer</span>&lt;<span class="hljs-title">T</span>&gt;<br>    <span class="hljs-keyword">where</span> <span class="hljs-title">T</span> : <span class="hljs-keyword">class</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span>[] ValueProperties &#123; <span class="hljs-keyword">get</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-title">ObjectValuePropertyEqualityComparer</span>()</span><br>    &#123;<br>        ValueProperties = PropertyEmit&lt;T&gt;.GetPropertyEmits()<br>            .Where(w =&gt; !w.Value.Info.IsDefined(<span class="hljs-keyword">typeof</span>(ObjectKeyPropertyAttribute), <span class="hljs-literal">true</span>) &amp;&amp; !w.Value.Info.IsDefined(<span class="hljs-keyword">typeof</span>(ObjectValuePropertyIgnoreAttribute), <span class="hljs-literal">true</span>))<br>            .Select(s =&gt; s.Key)<br>            .ToArray();<br>        <span class="hljs-keyword">if</span> (ValueProperties == <span class="hljs-literal">null</span> || ValueProperties.Length == <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">$&quot;类型“<span class="hljs-subst">&#123;<span class="hljs-keyword">typeof</span>(T).FullName&#125;</span>”缺少可作为Value的属性&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectValuePropertyEqualityComparer</span>() :</span><br><span class="hljs-function">        <span class="hljs-title">base</span>(<span class="hljs-params">ValueProperties</span>)</span><br>    &#123;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ObjectValuePropertyEqualityComparer</span>(<span class="hljs-params">Action&lt;ObjectPropertyEqualityComparerOptions&gt; configureOptions</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">base</span>(<span class="hljs-params">configureOptions, ValueProperties</span>)</span><br>    &#123;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>以下展示调用实例</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> dbDatas = GetTestData1();<span class="hljs-comment">//旧数据（上述表格展示的数据），返回类型List&lt;UserModel&gt;</span><br><span class="hljs-keyword">var</span> newDatas = GetTestData2();<span class="hljs-comment">//新数据（上述表格展示的数据），返回类型List&lt;UserModel&gt;</span><br><br><span class="hljs-comment">//获取标记为[ObjectKeyProperty]特性的属性</span><br><span class="hljs-keyword">var</span> keyPropertyComparer = <span class="hljs-keyword">new</span> ObjectKeyPropertyEqualityComparer&lt;UserModel&gt;();<br><span class="hljs-comment">//获取排除了[ObjectKeyProperty]特性的属性，同时也排除了[ObjectValuePropertyIgnore]特性的属性</span><br><span class="hljs-keyword">var</span> valuePropertyComparer = <span class="hljs-keyword">new</span> ObjectValuePropertyEqualityComparer&lt;UserModel&gt;();<br><br><span class="hljs-comment">//新增数据</span><br><span class="hljs-keyword">var</span> createDatas = newDatas.Except(dbDatas, keyPropertyComparer).ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;新增：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, createDatas.Select(s =&gt; s.Id))&#125;</span>&quot;</span>);<br><br><span class="hljs-comment">//删除数据</span><br><span class="hljs-keyword">var</span> deleteDatas = dbDatas.Except(newDatas, keyPropertyComparer).ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;删除：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, deleteDatas.Select(s =&gt; s.Id))&#125;</span>&quot;</span>);<br><br><span class="hljs-comment">//修改数据</span><br><span class="hljs-keyword">var</span> updateDatas = dbDatas.Join(newDatas, o =&gt; o, i =&gt; i, (r1, r2) =&gt; <span class="hljs-keyword">new</span> &#123; DbItem = r1, NewItem = r2 &#125;, keyPropertyComparer)<br>    .Where(w =&gt; valuePropertyComparer.TryUpdatePropertyValueIfNotEquals(w.DbItem, w.NewItem))<br>    .ToList();<br>Console.WriteLine(<span class="hljs-string">$&quot;数据有变化：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, updateDatas.Select(s =&gt; s.DbItem.Id))&#125;</span>&quot;</span>);<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">新增：5,6<br>删除：3,4<br>数据有变化：2<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>经验总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>对象属性比较</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《1》经验总结-Excel导入导出</title>
    <link href="/2024/01/20/SummaryExcel/"/>
    <url>/2024/01/20/SummaryExcel/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>汇总平时经常使用的公共帮助类，总结关于Excel的导入导出相关操作</p><p>Github代码-MyHeplerProject <a href="https://github.com/YuMan-LJP/demo">https://github.com/YuMan-LJP/demo</a></p>          </div><h1 id="Excel导入"><a href="#Excel导入" class="headerlink" title="Excel导入"></a>Excel导入</h1><h2 id="核心代码展示"><a href="#核心代码展示" class="headerlink" title="核心代码展示"></a>核心代码展示</h2><p>NuGet包引入NPOI（注意版本兼容），3个核心方法如下：<br>（1）ReadExcelToDataTable，识别文件后缀，循环读取sheet页</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> DataTable <span class="hljs-title">ReadExcelToDataTable</span>(<span class="hljs-params">Stream stream, <span class="hljs-built_in">string</span> fileExtension, <span class="hljs-built_in">int</span> sheetIndex = <span class="hljs-number">0</span>, <span class="hljs-built_in">int</span> headerRowNum = <span class="hljs-number">0</span>, <span class="hljs-built_in">bool</span> isReadHiddenSheet = <span class="hljs-literal">false</span>, <span class="hljs-built_in">bool</span> isReadNumWithFormat = <span class="hljs-literal">false</span></span>)</span><br>&#123;<br>    <span class="hljs-function">DataTable <span class="hljs-title">getTable</span>()</span><br>    &#123;<br><br>        IWorkbook workbook;<br>        <span class="hljs-keyword">switch</span> (fileExtension.ToStringEx().ToLower())<br>        &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;.xls&quot;</span>:<br>                workbook = <span class="hljs-keyword">new</span> HSSFWorkbook(stream);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;.xlsx&quot;</span>:<br>                workbook = <span class="hljs-keyword">new</span> XSSFWorkbook(stream);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;.xlsm&quot;</span>:<br>                workbook = <span class="hljs-keyword">new</span> XSSFWorkbook(stream);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-literal">default</span>:<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-built_in">string</span>.Format(<span class="hljs-string">&quot;不支持读取&#123;0&#125;格式！&quot;</span>, fileExtension));<br>        &#125;<br><br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> 取有效的页序号</span><br>        <span class="hljs-keyword">var</span> visibleSheetIndexs = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">int</span>&gt;();<span class="hljs-comment">//当前可见的sheet页序号</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; workbook.NumberOfSheets; i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (workbook.IsSheetHidden(i) &amp;&amp; !isReadHiddenSheet)<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<span class="hljs-comment">//当前sheet是隐藏的，但是不读隐藏的，跳过当前sheet</span><br>            &#125;<br>            visibleSheetIndexs.Add(i);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (visibleSheetIndexs.Count &lt; sheetIndex + <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">$&quot;读取的Excel没有第<span class="hljs-subst">&#123;sheetIndex + <span class="hljs-number">1</span>&#125;</span>页&quot;</span>);<br>        &#125;<br>        sheetIndex = visibleSheetIndexs[sheetIndex];<span class="hljs-comment">//如果Excel隐藏了一页，可见页只有一页，sheetIndex传0，实际读取的是Excel的sheetIndex=1页</span><br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>        ISheet sheet = workbook.GetSheetAt(sheetIndex);<br><br>        <span class="hljs-keyword">return</span> ReadSheetToDataTable(sheet, headerRowNum, isReadNumWithFormat);<br><br>    &#125;<br>    DataTable table = getTable();<br>    GC.Collect();<br>    <span class="hljs-keyword">return</span> table;<br>&#125;<br></code></pre></td></tr></table></figure></details><p>（2）ReadSheetToDataTable，单个Sheet页中循环行，一行一行读取内容</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> DataTable <span class="hljs-title">ReadSheetToDataTable</span>(<span class="hljs-params">ISheet sheet, <span class="hljs-built_in">int</span> headerRowNum, <span class="hljs-built_in">bool</span> isReadNumWithFormat = <span class="hljs-literal">false</span></span>)</span><br>&#123;<br>    DataTable table = <span class="hljs-keyword">new</span> DataTable(sheet.SheetName);<br>    Dictionary&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>&gt; columnCellIndexMapperDic = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>&gt;();<br>    IEnumerator rows = sheet.GetRowEnumerator();<br>    <span class="hljs-keyword">while</span> (rows.MoveNext())<br>    &#123;<br>        IRow row = (IRow)rows.Current;<br><br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> 创建列</span><br>        <span class="hljs-keyword">if</span> (headerRowNum &lt; <span class="hljs-number">0</span> &amp;&amp; table.Columns.Count == <span class="hljs-number">0</span>) <span class="hljs-comment">//不使用Excel数据作为表头</span><br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; row.LastCellNum; j++)<br>            &#123;<br>                table.Columns.Add(ToLetters(j), <span class="hljs-keyword">typeof</span>(<span class="hljs-built_in">string</span>));<br>                columnCellIndexMapperDic.Add(table.Columns.Count - <span class="hljs-number">1</span>, j);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (row.RowNum &lt; headerRowNum)<span class="hljs-comment">//当前行位置小于指定作为表头的行位置，直接跳过忽略</span><br>        &#123;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (row.RowNum == headerRowNum)<span class="hljs-comment">//当前行位置等于指定作为表头的行位置，创建DataTable列</span><br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; row.LastCellNum; j++)<br>            &#123;<br>                ICell cell = row.GetCell(j);<br>                <span class="hljs-keyword">if</span> (cell != <span class="hljs-literal">null</span> &amp;&amp; !<span class="hljs-built_in">string</span>.IsNullOrWhiteSpace(cell.ToString()) &amp;&amp; cell.ToString().Trim() != <span class="hljs-string">&quot;\u001d&quot;</span>)<br>                &#123;<br>                    table.Columns.Add(cell.ToString().Trim(), <span class="hljs-keyword">typeof</span>(<span class="hljs-built_in">string</span>));<br>                    columnCellIndexMapperDic.Add(table.Columns.Count - <span class="hljs-number">1</span>, j);<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>        <span class="hljs-meta">#<span class="hljs-keyword">region</span> 新增行</span><br>        DataRow dr = table.NewRow();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; table.Columns.Count; j++)<br>        &#123;<br>            <span class="hljs-keyword">var</span> cellIndex = columnCellIndexMapperDic[j];<br>            ICell cell = row.GetCell(cellIndex);<br>            <span class="hljs-keyword">if</span> (cell == <span class="hljs-literal">null</span>)<br>            &#123;<br>                dr[j] = <span class="hljs-literal">null</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                dr[j] = GetCellValue(cell, isReadNumWithFormat);<br>            &#125;<br>        &#125;<br>        table.Rows.Add(dr);<br>        <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br>    &#125;<br>    <span class="hljs-keyword">return</span> table;<br>&#125;<br><br></code></pre></td></tr></table></figure></details><p>（3）GetCellValue，每个单元格数据取值，判断特殊格式处理</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetCellValue</span>(<span class="hljs-params">ICell cell, <span class="hljs-built_in">bool</span> isReadNumWithFormat = <span class="hljs-literal">false</span></span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (cell == <span class="hljs-literal">null</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<br>    <span class="hljs-keyword">switch</span> (cell.CellType)<br>    &#123;<br>        <span class="hljs-keyword">case</span> CellType.Blank: <span class="hljs-comment">//空数据类型 这里类型注意一下，不同版本NPOI大小写可能不一样,有的版本是Blank（首字母大写)</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.Empty;<br>        <span class="hljs-keyword">case</span> CellType.Boolean: <span class="hljs-comment">//bool类型</span><br>            <span class="hljs-keyword">return</span> cell.BooleanCellValue.ToString();<br>        <span class="hljs-keyword">case</span> CellType.Error:<br>            <span class="hljs-keyword">return</span> cell.ErrorCellValue.ToString();<br>        <span class="hljs-keyword">case</span> CellType.Numeric: <span class="hljs-comment">//数字类型</span><br>            <span class="hljs-keyword">if</span> (DateUtil.IsCellDateFormatted(cell))<span class="hljs-comment">//日期类型</span><br>            &#123;<br>                <span class="hljs-built_in">string</span> formatString = cell.CellStyle.GetDataFormatString();<br>                <span class="hljs-built_in">short</span> dataFormat = cell.CellStyle.DataFormat;<br>                <span class="hljs-keyword">switch</span> (dataFormat)<br>                &#123;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-number">14</span>:<br>                    <span class="hljs-keyword">case</span> <span class="hljs-number">31</span>:<br>                    <span class="hljs-keyword">case</span> <span class="hljs-number">57</span>:<br>                    <span class="hljs-keyword">case</span> <span class="hljs-number">58</span>:<br>                        <span class="hljs-keyword">return</span> cell.DateCellValue.ToString();<br>                    <span class="hljs-comment">//case 177:</span><br>                    <span class="hljs-comment">//case 179:</span><br>                    <span class="hljs-comment">//    return cell.DateCellValue.ToString(&quot;yyyy年M月d日&quot;);</span><br>                    <span class="hljs-comment">//case 178:</span><br>                    <span class="hljs-comment">//    return cell.DateCellValue.ToString(&quot;yyyy年M月&quot;);</span><br>                    <span class="hljs-literal">default</span>:<br>                        <span class="hljs-keyword">var</span> dataTime = DateUtil.GetJavaDate(cell.NumericCellValue);<br>                        <span class="hljs-keyword">if</span> (formatString == <span class="hljs-string">&quot;m/d/yyyy\\ h:mm:ss&quot;</span>)<br>                        &#123;<br>                            <span class="hljs-comment">//注意Excel文件的m/d/yyyy\\ h:mm:ss格式要对应C#的M/d/yyyy\\ H:mm:ss，m和h的大小写在C#与Excel中的含义不一样</span><br>                            <span class="hljs-keyword">return</span> dataTime.ToString(<span class="hljs-string">&quot;M/d/yyyy\\ H:mm:ss&quot;</span>, System.Globalization.CultureInfo.InvariantCulture);<br>                        &#125;<br>                        <span class="hljs-comment">//if (formatString == &quot;m\\/d\\/yyyy&quot;)</span><br>                        <span class="hljs-comment">//&#123;</span><br>                        <span class="hljs-comment">//    return dataTime.ToString(&quot;M/d/yyyy&quot;);</span><br>                        <span class="hljs-comment">//&#125;</span><br>                        <span class="hljs-comment">//return dataTime.ToString(formatString);</span><br>                        formatString = formatString.Replace(<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;M&quot;</span>).Replace(<span class="hljs-string">&quot;;@&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<span class="hljs-comment">//C#的月份用M表示</span><br>                        <span class="hljs-keyword">return</span> dataTime.ToString(formatString, System.Globalization.CultureInfo.InvariantCulture);<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (isReadNumWithFormat)<br>            &#123;<br>                <span class="hljs-built_in">string</span> formatString = cell.CellStyle.GetDataFormatString();<br>                <span class="hljs-built_in">short</span> dataFormat = cell.CellStyle.DataFormat;<br>                <span class="hljs-keyword">switch</span> (dataFormat)<br>                &#123;<br>                    <span class="hljs-literal">default</span>:<br>                        <span class="hljs-keyword">if</span> (formatString == <span class="hljs-string">&quot;\&quot;$\&quot;#,##0.00&quot;</span>)<br>                        &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> DataFormatter().FormatCellValue(cell);<br>                        &#125;<br>                        <span class="hljs-keyword">return</span> cell.NumericCellValue.ToString();<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> cell.NumericCellValue.ToString(CultureInfo.InvariantCulture);<span class="hljs-comment">//其它数字，注意忽略语言特性，越南文下会点变成逗号</span><br>        <span class="hljs-keyword">case</span> CellType.Unknown: <span class="hljs-comment">//无法识别类型</span><br>        <span class="hljs-literal">default</span>: <span class="hljs-comment">//默认类型</span><br>            <span class="hljs-keyword">return</span> cell.ToString();<span class="hljs-comment">//</span><br>        <span class="hljs-keyword">case</span> CellType.String: <span class="hljs-comment">//string 类型</span><br>            <span class="hljs-keyword">return</span> cell.StringCellValue;<br>        <span class="hljs-keyword">case</span> CellType.Formula: <span class="hljs-comment">//带公式类型</span><br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                <span class="hljs-keyword">if</span> (cell.Sheet.Workbook <span class="hljs-keyword">is</span> HSSFWorkbook)<br>                &#123;<br>                    HSSFFormulaEvaluator e = <span class="hljs-keyword">new</span> HSSFFormulaEvaluator(cell.Sheet.Workbook);<br>                    e.EvaluateInCell(cell);<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    XSSFFormulaEvaluator e = <span class="hljs-keyword">new</span> XSSFFormulaEvaluator(cell.Sheet.Workbook);<br>                    e.EvaluateInCell(cell);<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">catch</span><br>            &#123;<br>                <span class="hljs-comment">//吞掉异常</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> cell.ToString();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><h2 id="解析说明"><a href="#解析说明" class="headerlink" title="解析说明"></a>解析说明</h2><p>以上核心代码做各自拓展方法，demo中展示了3个方法，后续根据实际的业务需要可以再拓展相关参数或方法</p><ul><li>（1） <code>DataSet ImportExcel(Stream stream, string fileExtension, bool filterNotDataSheet = true, bool isReadHiddenSheet = false, bool isReadNumWithFormat = false)</code> </li><li>（2） <code>DataTable ReadExcelToDataTable(Stream stream, string fileExtension, int sheetIndex = 0, int headerRowNum = 0, bool isReadHiddenSheet = false, bool isReadNumWithFormat = false)</code> </li><li>（3） <code>DataTable ReadExcelToDataTableBySheetName(Stream stream, string fileExtension, string sheetName = &quot;&quot;, int headerRowNum = 0, bool isReadHiddenSheet = false)</code></li></ul><p>第（1）个方法读的结果是一个DataSet，即Excel中有多个sheet页时，调用该方法读取结果，DataSet中每个DataTable就是一个sheet页的数据。第（2）和第（3）个方法读取时返回的就是一个DataTable就是一个sheet页内容，默认读取第一个可见的sheet页内容。</p><ul><li>filterNotDataSheet：是否过滤没有数据的sheet页，默认过滤，传false时不过滤，即sheet页是空的时候会生成一个空的DataTable；</li><li>isReadHiddenSheet：是否读取隐藏的sheet页，默认不读；</li><li>isReadNumWithFormat： 是否按原本格式读取数字，即表示是否还原Excel中看到的显示格式，读取数据Excel中的原始值和表格中看到的显示值可能会不一样，特别是数字和时间类型的数据。此处特别针对价格格式做处理，如果Excel中的自定义格式是$#,##0.00时，会按这个格式来读取数据，避免读取的数据和Excel看到的不一样</li><li>sheetName：Sheet页名称，为空或找不到时默认取第一个sheet（如果指定的sheetName隐藏了而且不读隐藏页时，也默认取第一个可见sheet）</li><li>headerRowNum：表头行位置，小于0表示不使用Excel数据作为表头，默认会用A，B，C…字母作为表头。当处理一下表格的表头是动态的时候，可以不读取内容中的表头，读完之后自己动态的判断表头</li></ul><p>特别注意关于数字类型的单元格读取的处理，Excel文件的m&#x2F;d&#x2F;yyyy\ h:mm:ss格式要对应C#的M&#x2F;d&#x2F;yyyy\ H:mm:ss，m和h的大小写在C#与Excel中的含义不一样</p><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><p>需要读取多个sheet页时使用第（1）个方法，一般情况下使用第（2）个方法，特别情况下读取指定sheet页可以使用第（3）个方法</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">ExcelRead1</span>()</span><br>&#123;<br>    <span class="hljs-built_in">string</span> path = <span class="hljs-string">$&quot;<span class="hljs-subst">&#123;_hostEnvironment.ContentRootPath&#125;</span>\\Data\\TestFile\\Test1.xlsx&quot;</span>;<br>    <span class="hljs-built_in">string</span> fileEx = Path.GetExtension(path);<br><br>    <span class="hljs-keyword">using</span> FileStream fs = <span class="hljs-keyword">new</span> FileStream(path, FileMode.Open, FileAccess.Read);<br>    <span class="hljs-keyword">var</span> dt = ExcelHelper.ImportExcel(fs, fileEx);<br><br>    <span class="hljs-keyword">return</span> Json(JsonConvert.SerializeObject(dt));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">ExcelRead2</span>()</span><br>&#123;<br>    <span class="hljs-built_in">string</span> path = <span class="hljs-string">$&quot;<span class="hljs-subst">&#123;_hostEnvironment.ContentRootPath&#125;</span>\\Data\\TestFile\\Test1.xlsx&quot;</span>;<br>    <span class="hljs-built_in">string</span> fileEx = Path.GetExtension(path);<br><br>    <span class="hljs-keyword">using</span> FileStream fs = <span class="hljs-keyword">new</span> FileStream(path, FileMode.Open, FileAccess.Read);<br>    <span class="hljs-keyword">var</span> dt = ExcelHelper.ReadExcelToDataTable(fs, fileEx);<br><br>    <span class="hljs-keyword">return</span> Json(JsonConvert.SerializeObject(dt));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">ExcelRead3</span>()</span><br>&#123;<br>    <span class="hljs-built_in">string</span> path = <span class="hljs-string">$&quot;<span class="hljs-subst">&#123;_hostEnvironment.ContentRootPath&#125;</span>\\Data\\TestFile\\Test1.xlsx&quot;</span>;<br>    <span class="hljs-built_in">string</span> fileEx = Path.GetExtension(path);<br><br>    <span class="hljs-keyword">using</span> FileStream fs = <span class="hljs-keyword">new</span> FileStream(path, FileMode.Open, FileAccess.Read);<br>    <span class="hljs-keyword">var</span> dt = ExcelHelper.ReadExcelToDataTableBySheetName(fs, fileEx, <span class="hljs-string">&quot;sheet2&quot;</span>);<br><br>    <span class="hljs-keyword">return</span> Json(JsonConvert.SerializeObject(dt));<br>&#125;<br></code></pre></td></tr></table></figure></details><br><hr><h1 id="Excel导出"><a href="#Excel导出" class="headerlink" title="Excel导出"></a>Excel导出</h1><h2 id="少量数据导出"><a href="#少量数据导出" class="headerlink" title="少量数据导出"></a>少量数据导出</h2><h3 id="核心代码展示-1"><a href="#核心代码展示-1" class="headerlink" title="核心代码展示"></a>核心代码展示</h3><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">byte</span>[] <span class="hljs-title">ExportExcelEx</span>(<span class="hljs-params">List&lt;ExportExcelRequest&gt; requests, Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; customType</span>)</span><br>&#123;<br>    <span class="hljs-built_in">string</span> fileExtension = requests[<span class="hljs-number">0</span>].FileExtension;<br>    IWorkbook workbook;<br>    <span class="hljs-keyword">switch</span> (fileExtension.ToStringEx().ToLower())<br>    &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;.xls&quot;</span>:<br>            workbook = <span class="hljs-keyword">new</span> HSSFWorkbook();<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;.xlsx&quot;</span>:<br>            workbook = <span class="hljs-keyword">new</span> XSSFWorkbook();<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-literal">default</span>:<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-built_in">string</span>.Format(<span class="hljs-string">&quot;不支持导出&#123;0&#125;格式！&quot;</span>, fileExtension));<br>    &#125;<br><br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; requests.Count; i++)<br>    &#123;<br>        <span class="hljs-keyword">var</span> request = requests[i];<br>        <span class="hljs-built_in">string</span> tableName = request.TableName;<br>        DataTable table = request.Table;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(tableName)) &#123; tableName = <span class="hljs-built_in">string</span>.IsNullOrEmpty(table.TableName) ? <span class="hljs-string">$&quot;Sheet<span class="hljs-subst">&#123;i + <span class="hljs-number">1</span>&#125;</span>&quot;</span> : table.TableName; &#125;<br><br><br>        Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; headers = request.Header;<br>        <span class="hljs-keyword">if</span> (headers == <span class="hljs-literal">null</span> || headers.Count == <span class="hljs-number">0</span>)<br>        &#123;<br>            headers = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt;();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; table.Columns.Count; j++)<br>            &#123;<br>                headers.Add(table.Columns[j].ColumnName, table.Columns[j].ColumnName);<br>            &#125;<br>        &#125;<br>        ISheet sheet = workbook.CreateSheet(tableName);<br>        IRow rowHead = sheet.CreateRow(<span class="hljs-number">0</span>);<br>        ICellStyle dateStyle = workbook.CreateCellStyle();<br>        dateStyle.DataFormat = HSSFDataFormat.GetBuiltinFormat(<span class="hljs-string">&quot;@&quot;</span>);<br>        <span class="hljs-built_in">int</span> z = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-built_in">string</span> title <span class="hljs-keyword">in</span> headers.Keys)<br>        &#123;<br>            <span class="hljs-built_in">string</span> text = headers[title];<br>            rowHead.CreateCell(z, CellType.String).SetCellValue(text);<br>            sheet.AutoSizeColumn(z);<br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> customType)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (table.Columns[i].ColumnName == item.Key &amp;&amp; item.Value == <span class="hljs-string">&quot;Text&quot;</span>)<br>                &#123;<br>                    sheet.SetDefaultColumnStyle(i, dateStyle);<br><br>                &#125;<br>            &#125;<br>            z++;<br>        &#125;<br><br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; table.Rows.Count; j++)<br>        &#123;<br>            DataRow row = table.Rows[j];<br>            IRow rowData = sheet.CreateRow(j + <span class="hljs-number">1</span>);<br>            <span class="hljs-built_in">int</span> k = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> keyName <span class="hljs-keyword">in</span> headers)<br>            &#123;<br>                <span class="hljs-built_in">string</span> colName = keyName.Key;<br><br>                customType.TryGetValue(colName, <span class="hljs-keyword">out</span> <span class="hljs-built_in">string</span> type);<br>                <span class="hljs-keyword">if</span> (row[colName] == DBNull.Value || row[colName] == <span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-keyword">if</span> (type != <span class="hljs-string">&quot;Numeric&quot;</span>)<br>                    &#123;<br>                        rowData.CreateCell(k, CellType.String).SetCellValue(<span class="hljs-string">&quot;&quot;</span>);<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">string</span>.IsNullOrEmpty(type))<br>                    &#123;<br>                        <span class="hljs-built_in">string</span> cellValue = row[colName].ToString();<br>                        <span class="hljs-keyword">switch</span> (type)<br>                        &#123;<br>                            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;Numeric&quot;</span>:<br>                                &#123;<br>                                    <span class="hljs-built_in">double</span>.TryParse(cellValue, <span class="hljs-keyword">out</span> <span class="hljs-built_in">double</span> num);<br>                                    rowData.CreateCell(k, CellType.Numeric).SetCellValue(num);<br>                                    <span class="hljs-keyword">break</span>;<br>                                &#125;<br><br>                            <span class="hljs-literal">default</span>:<br>                                rowData.CreateCell(k, CellType.String).SetCellValue(cellValue);<br>                                <span class="hljs-keyword">break</span>;<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span><br>                    &#123;<br>                        rowData.CreateCell(k, CellType.String).SetCellValue(row[colName].ToString());<br>                    &#125;<br>                &#125;<br>                k++;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">using</span> (MemoryStream ms = <span class="hljs-keyword">new</span> MemoryStream())<br>    &#123;<br>        workbook.Write(ms);<br>        <span class="hljs-keyword">return</span> ms.ToArray();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//ExportExcelRequest对象的结构如下</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ExportExcelRequest</span><br>&#123;<br>    <span class="hljs-keyword">public</span> DataTable Table &#123; <span class="hljs-keyword">set</span>; <span class="hljs-keyword">get</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; Header &#123; <span class="hljs-keyword">set</span>; <span class="hljs-keyword">get</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> TableName &#123; <span class="hljs-keyword">set</span>; <span class="hljs-keyword">get</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> FileExtension &#123; <span class="hljs-keyword">set</span>; <span class="hljs-keyword">get</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><h3 id="解析说明-1"><a href="#解析说明-1" class="headerlink" title="解析说明"></a>解析说明</h3><p>导出比较重要的功能就是表头实现切换和特殊列的格式化</p><ul><li>表头显示值切换：ExportExcelEx方法中requests参数的Header属性可以传入一个字典，字典就是列名-显示名的一个键值对，在实际导出时，导出的Excel文件的表头可以替换成自己想要显示的列名，而不是只能显示原始的那个Dto对象的属性名从而也能进一步实现多语言的表头</li><li>特殊列的格式化：ExportExcelEx方法中customType参数，可以指定列，并指定这列的格式格式，目前仅支持数字格式，如果以后需要可以再继续追加</li></ul><h3 id="调用方法-1"><a href="#调用方法-1" class="headerlink" title="调用方法"></a>调用方法</h3><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs C#">List&lt;ExportExcelRequest&gt; requests = <span class="hljs-keyword">new</span> List&lt;ExportExcelRequest&gt;<br>&#123;<br>    <span class="hljs-keyword">new</span> ExportExcelRequest &#123;<br>        Table = dt,<span class="hljs-comment">//要导出的数据DataTable</span><br>        TableName = <span class="hljs-string">&quot;User1&quot;</span>,<span class="hljs-comment">//导出的sheet名字</span><br>        FileExtension = <span class="hljs-string">&quot;.xlsx&quot;</span>,<br>        Header = header<span class="hljs-comment">//表头显示字典</span><br>    &#125;,<br>    <span class="hljs-keyword">new</span> ExportExcelRequest &#123;<br>        Table = dt,<span class="hljs-comment">//要导出的数据DataTable</span><br>        TableName = <span class="hljs-string">&quot;User2&quot;</span>,<span class="hljs-comment">//导出的sheet名字</span><br>        FileExtension = <span class="hljs-string">&quot;.xlsx&quot;</span>,<br>        Header = header<span class="hljs-comment">//表头显示字典</span><br>    &#125;<br>&#125;;<br><br><span class="hljs-comment">//自定义列为数值列</span><br>Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; customType = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt;<br>&#123;<br>    &#123; <span class="hljs-string">&quot;Age&quot;</span>,<span class="hljs-string">&quot;Numeric&quot;</span> &#125;,<br>&#125;;<br><span class="hljs-keyword">var</span> data = ExcelHelper.ExportExcelEx(requests, customType);<br></code></pre></td></tr></table></figure></details><h2 id="大量数据导出"><a href="#大量数据导出" class="headerlink" title="大量数据导出"></a>大量数据导出</h2><h3 id="核心代码展示-2"><a href="#核心代码展示-2" class="headerlink" title="核心代码展示"></a>核心代码展示</h3><p>封装一套SXSSFWorkbook的方法</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AutoSplitExcelWriter</span> : <span class="hljs-title">IDisposable</span><br>&#123;<br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> class: SheetWriter</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">class</span> <span class="hljs-title">SheetWriter</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">string</span> _sheetName;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">int</span> _sheetMaxRow;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Dictionary&lt;<span class="hljs-built_in">int</span>, SXSSFWorkbook&gt; _workbookDict;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">bool</span> _isIncludeHeader = <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">int</span> _currentFileSplitIndex = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">private</span> IWorkbook _currentWorkbook = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">private</span> ISheet _currentSheet = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">int</span> _currentRowIndex = <span class="hljs-number">-1</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">SheetWriter</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sheetName, <span class="hljs-built_in">int</span> sheetMaxRow, Dictionary&lt;<span class="hljs-built_in">int</span>, SXSSFWorkbook&gt; workbookDict, <span class="hljs-built_in">bool</span> isIncludeHeader</span>)</span><br>        &#123;<br>            _sheetName = sheetName;<br>            _sheetMaxRow = sheetMaxRow;<br>            _workbookDict = workbookDict;<br>            _isIncludeHeader = isIncludeHeader;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>(<span class="hljs-params">DataRow row</span>)</span><br>        &#123;<br>            CreateWorkbookIfNewFile();<br><br>            <span class="hljs-keyword">var</span> rowHead = CreateHeadRowIfNewFileStartAndIncludeHeader();<br>            <span class="hljs-keyword">var</span> currentRow = CreateNewRow();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; row.Table.Columns.Count; i++)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (rowHead != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    rowHead.CreateCell(i, CellType.String).SetCellValue(row.Table.Columns[i].ColumnName);<br>                &#125;<br>                CreateCellAndSetCellValue(currentRow, i, Type.GetTypeCode(row[i].GetType()), row[i]);<br>            &#125;<br><br>            SplitNewFileIfOverSheetMaxRow();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>(<span class="hljs-params">DataRow row, Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; propertyDescDict</span>)</span><br>        &#123;<br>            CreateWorkbookIfNewFile();<br><br>            <span class="hljs-keyword">var</span> rowHead = CreateHeadRowIfNewFileStartAndIncludeHeader();<br>            <span class="hljs-keyword">var</span> currentRow = CreateNewRow();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; row.Table.Columns.Count; i++)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (rowHead != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-built_in">string</span> name = row.Table.Columns[i].ColumnName;<br>                    <span class="hljs-keyword">if</span> (propertyDescDict.ContainsKey(name))<br>                    &#123;<br>                        rowHead.CreateCell(i, CellType.String).SetCellValue(propertyDescDict[name]);<br>                    &#125;<br>                    <span class="hljs-keyword">else</span><br>                    &#123;<br>                        rowHead.CreateCell(i, CellType.String).SetCellValue(name);<br>                    &#125;<br>                &#125;<br>                CreateCellAndSetCellValue(currentRow, i, Type.GetTypeCode(row[i].GetType()), row[i]);<br>            &#125;<br><br>            SplitNewFileIfOverSheetMaxRow();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">T obj, <span class="hljs-built_in">bool</span> ignoreNotDescProperty, Func&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; descTranslationFunc</span>)</span><br>        &#123;<br>            CreateWorkbookIfNewFile();<br><br>            <span class="hljs-keyword">var</span> rowHead = CreateHeadRowIfNewFileStartAndIncludeHeader();<br>            <span class="hljs-keyword">var</span> currentRow = CreateNewRow();<br>            <span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> propertyEmit <span class="hljs-keyword">in</span> obj.GetPropertyEmits().Values)<br>            &#123;<br>                <span class="hljs-keyword">var</span> attribute = (DescriptionAttribute)propertyEmit.Info.GetCustomAttributes(<span class="hljs-keyword">typeof</span>(DescriptionAttribute), <span class="hljs-literal">true</span>).FirstOrDefault();<br>                <span class="hljs-keyword">if</span> (ignoreNotDescProperty &amp;&amp; attribute == <span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (rowHead != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    rowHead.CreateCell(i, CellType.String).SetCellValue(attribute == <span class="hljs-literal">null</span> ? propertyEmit.PropertyName : (descTranslationFunc == <span class="hljs-literal">null</span> ? attribute.Description : descTranslationFunc(attribute.Description)));<br>                &#125;<br>                CreateCellAndSetCellValue(currentRow, i, Type.GetTypeCode(propertyEmit.Info.PropertyType), propertyEmit.GetValue(obj));<br>                i++;<br>            &#125;<br><br>            SplitNewFileIfOverSheetMaxRow();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">T obj, <span class="hljs-built_in">bool</span> ignoreNotDescProperty, CultureInfo culture, Func&lt;<span class="hljs-built_in">string</span>, CultureInfo, <span class="hljs-built_in">string</span>&gt; descTranslationFunc</span>)</span><br>        &#123;<br>            CreateWorkbookIfNewFile();<br><br>            <span class="hljs-keyword">var</span> rowHead = CreateHeadRowIfNewFileStartAndIncludeHeader();<br>            <span class="hljs-keyword">var</span> currentRow = CreateNewRow();<br>            <span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> propertyEmit <span class="hljs-keyword">in</span> obj.GetPropertyEmits().Values)<br>            &#123;<br>                <span class="hljs-keyword">var</span> attribute = (DescriptionAttribute)propertyEmit.Info.GetCustomAttributes(<span class="hljs-keyword">typeof</span>(DescriptionAttribute), <span class="hljs-literal">true</span>).FirstOrDefault();<br>                <span class="hljs-keyword">if</span> (ignoreNotDescProperty &amp;&amp; attribute == <span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (rowHead != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    rowHead.CreateCell(i, CellType.String).SetCellValue(attribute == <span class="hljs-literal">null</span> ? propertyEmit.PropertyName : (descTranslationFunc == <span class="hljs-literal">null</span> ? attribute.Description : descTranslationFunc(attribute.Description, culture)));<br>                &#125;<br>                CreateCellAndSetCellValue(currentRow, i, Type.GetTypeCode(propertyEmit.Info.PropertyType), propertyEmit.GetValue(obj));<br>                i++;<br>            &#125;<br><br>            SplitNewFileIfOverSheetMaxRow();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">T obj, Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; propertyDescDict</span>)</span><br>        &#123;<br>            CreateWorkbookIfNewFile();<br><br>            <span class="hljs-keyword">var</span> propertyEmits = obj.GetPropertyEmits();<br>            <span class="hljs-keyword">var</span> rowHead = CreateHeadRowIfNewFileStartAndIncludeHeader();<br>            <span class="hljs-keyword">var</span> currentRow = CreateNewRow();<br>            <span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> propertyDescDict)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (rowHead != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    rowHead.CreateCell(i, CellType.String).SetCellValue(item.Value);<br>                &#125;<br>                <span class="hljs-keyword">var</span> propertyEmit = propertyEmits.Values.SingleOrDefault(s =&gt; s.PropertyName.Equals(item.Key));<br>                <span class="hljs-keyword">if</span> (propertyEmit != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    CreateCellAndSetCellValue(currentRow, i, Type.GetTypeCode(propertyEmit.Info.PropertyType), propertyEmit.GetValue(obj));<br>                &#125;<br>                i++;<br>            &#125;<br><br>            SplitNewFileIfOverSheetMaxRow();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> IRow <span class="hljs-title">CreateHeadRowIfNewFileStartAndIncludeHeader</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> _isIncludeHeader &amp;&amp; _currentRowIndex == <span class="hljs-number">-1</span> ? CreateNewRow() : <span class="hljs-literal">null</span>;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> IRow <span class="hljs-title">CreateNewRow</span>()</span><br>        &#123;<br>            _currentRowIndex++;<br>            <span class="hljs-keyword">return</span> _currentSheet.CreateRow(_currentRowIndex);<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateWorkbookIfNewFile</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (_currentWorkbook == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (!_workbookDict.ContainsKey(_currentFileSplitIndex))<br>                &#123;<br>                    _workbookDict.Add(_currentFileSplitIndex, <span class="hljs-keyword">new</span> SXSSFWorkbook(<span class="hljs-literal">null</span>, <span class="hljs-number">100</span>, <span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>));<br>                &#125;<br>                _currentWorkbook = _workbookDict[_currentFileSplitIndex];<br>                _currentSheet = _currentWorkbook.CreateSheet(_sheetName);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SplitNewFileIfOverSheetMaxRow</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (_currentRowIndex + <span class="hljs-number">1</span> &gt;= _sheetMaxRow)<br>            &#123;<br>                _currentFileSplitIndex++;<br>                _currentRowIndex = <span class="hljs-number">-1</span>;<br>                _currentWorkbook = <span class="hljs-literal">null</span>;<br>                _currentSheet = <span class="hljs-literal">null</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CreateCellAndSetCellValue</span>(<span class="hljs-params">IRow row, <span class="hljs-built_in">int</span> column, TypeCode cellValueType, <span class="hljs-built_in">object</span> cellValue</span>)</span><br>        &#123;<br>            <span class="hljs-keyword">switch</span> (cellValueType)<br>            &#123;<br>                <span class="hljs-keyword">case</span> TypeCode.Int16:<br>                <span class="hljs-keyword">case</span> TypeCode.UInt16:<br>                <span class="hljs-keyword">case</span> TypeCode.Int32:<br>                <span class="hljs-keyword">case</span> TypeCode.UInt32:<br>                <span class="hljs-keyword">case</span> TypeCode.Int64:<br>                <span class="hljs-keyword">case</span> TypeCode.UInt64:<br>                <span class="hljs-keyword">case</span> TypeCode.Single:<br>                <span class="hljs-keyword">case</span> TypeCode.Decimal:<br>                <span class="hljs-keyword">case</span> TypeCode.Double:<br>                    row.CreateCell(column, CellType.Numeric).SetCellValue(Convert.ToDouble(cellValue));<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-literal">default</span>:<br>                    row.CreateCell(column, CellType.String).SetCellValue(cellValue.ToStringEx());<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">int</span> _sheetMaxRow;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">bool</span> _isIncludeHeader;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Dictionary&lt;<span class="hljs-built_in">int</span>, SXSSFWorkbook&gt; _workbookDict = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">int</span>, SXSSFWorkbook&gt;();<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> Dictionary&lt;<span class="hljs-built_in">string</span>, SheetWriter&gt; _sheetWriterDict = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">string</span>, SheetWriter&gt;();<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AutoSplitExcelWriter</span>(<span class="hljs-params"><span class="hljs-built_in">int</span>? sheetMaxRow = <span class="hljs-number">1048576</span>, <span class="hljs-built_in">bool</span>? isIncludeHeader = <span class="hljs-literal">true</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (sheetMaxRow.HasValue)<br>            _sheetMaxRow = sheetMaxRow.Value;<br>        <span class="hljs-keyword">else</span><br>            _sheetMaxRow = <span class="hljs-number">1048576</span>;<br><br>        <span class="hljs-keyword">if</span> (isIncludeHeader.HasValue)<br>            _isIncludeHeader = isIncludeHeader.Value;<br>        <span class="hljs-keyword">else</span><br>            _isIncludeHeader = <span class="hljs-literal">false</span>;<br><br>        <span class="hljs-comment">//删除缓存文件</span><br>        DeleteWorkbookTempFile();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>(<span class="hljs-params">DataRow row, <span class="hljs-built_in">string</span> sheetName = <span class="hljs-string">&quot;Sheet1&quot;</span></span>)</span><br>    &#123;<br>        GetSheetWriter(sheetName).Write(row);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>(<span class="hljs-params">DataTable dataTable, <span class="hljs-built_in">string</span> sheetName = <span class="hljs-string">&quot;Sheet1&quot;</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> sheetWriter = GetSheetWriter(sheetName);<br>        <span class="hljs-keyword">foreach</span> (DataRow dr <span class="hljs-keyword">in</span> dataTable.Rows)<br>        &#123;<br>            sheetWriter.Write(dr);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WriteByDataRow</span>(<span class="hljs-params">DataRow row, Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; propertyDescDict, <span class="hljs-built_in">string</span> sheetName = <span class="hljs-string">&quot;Sheet1&quot;</span></span>)</span><br>    &#123;<br>        GetSheetWriter(sheetName).Write(row, propertyDescDict);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">T obj, <span class="hljs-built_in">bool</span> ignoreNotDescProperty, Func&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; descTranslationFunc = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> sheetName = <span class="hljs-string">&quot;Sheet1&quot;</span></span>)</span><br>    &#123;<br>        GetSheetWriter(sheetName).Write(obj, ignoreNotDescProperty, descTranslationFunc);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WriteCollection</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">IEnumerable&lt;T&gt; objs, <span class="hljs-built_in">bool</span> ignoreNotDescProperty, Func&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; descTranslationFunc = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> sheetName = <span class="hljs-string">&quot;Sheet1&quot;</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> sheetWriter = GetSheetWriter(sheetName);<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> obj <span class="hljs-keyword">in</span> objs)<br>        &#123;<br>            sheetWriter.Write(obj, ignoreNotDescProperty, descTranslationFunc);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">T obj, <span class="hljs-built_in">bool</span> ignoreNotDescProperty, CultureInfo culture, Func&lt;<span class="hljs-built_in">string</span>, CultureInfo, <span class="hljs-built_in">string</span>&gt; descTranslationFunc, <span class="hljs-built_in">string</span> sheetName = <span class="hljs-string">&quot;Sheet1&quot;</span></span>)</span><br>    &#123;<br>        GetSheetWriter(sheetName).Write(obj, ignoreNotDescProperty, culture, descTranslationFunc);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WriteCollection</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">IEnumerable&lt;T&gt; objs, <span class="hljs-built_in">bool</span> ignoreNotDescProperty, CultureInfo culture, Func&lt;<span class="hljs-built_in">string</span>, CultureInfo, <span class="hljs-built_in">string</span>&gt; descTranslationFunc, <span class="hljs-built_in">string</span> sheetName = <span class="hljs-string">&quot;Sheet1&quot;</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> sheetWriter = GetSheetWriter(sheetName);<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> obj <span class="hljs-keyword">in</span> objs)<br>        &#123;<br>            sheetWriter.Write(obj, ignoreNotDescProperty, culture, descTranslationFunc);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Write</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">T obj, Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; propertyDescDict, <span class="hljs-built_in">string</span> sheetName = <span class="hljs-string">&quot;Sheet1&quot;</span></span>)</span><br>    &#123;<br>        GetSheetWriter(sheetName).Write(obj, propertyDescDict);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">WriteCollection</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">IEnumerable&lt;T&gt; objs, Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; propertyDescDict, <span class="hljs-built_in">string</span> sheetName = <span class="hljs-string">&quot;Sheet1&quot;</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> sheetWriter = GetSheetWriter(sheetName);<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> obj <span class="hljs-keyword">in</span> objs)<br>        &#123;<br>            sheetWriter.Write(obj, propertyDescDict);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Save</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> path, <span class="hljs-built_in">bool</span> canOverride = <span class="hljs-literal">true</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> fileName = Path.GetFileNameWithoutExtension(path);<br>        <span class="hljs-keyword">var</span> directoryName = Path.GetDirectoryName(path);<br><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> _workbookDict)<br>        &#123;<br>            <span class="hljs-keyword">var</span> fullPath = _workbookDict.Count &gt; <span class="hljs-number">1</span><br>                ? <span class="hljs-string">$&quot;<span class="hljs-subst">&#123;directoryName&#125;</span>/<span class="hljs-subst">&#123;fileName&#125;</span>-<span class="hljs-subst">&#123;item.Key + <span class="hljs-number">1</span>&#125;</span>.xlsx&quot;</span><br>                : <span class="hljs-string">$&quot;<span class="hljs-subst">&#123;directoryName&#125;</span>/<span class="hljs-subst">&#123;fileName&#125;</span>.xlsx&quot;</span>;<br><br>            <span class="hljs-keyword">if</span> (canOverride)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (File.Exists(fullPath))<br>                &#123;<br>                    File.Delete(fullPath);<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> fileStream = <span class="hljs-keyword">new</span> FileStream(fullPath, FileMode.CreateNew))<br>            &#123;<br>                item.Value.Write(fileStream);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Save</span>(<span class="hljs-params">Func&lt;<span class="hljs-built_in">int</span>, Stream&gt; saveStreamCreator, Action&lt;<span class="hljs-built_in">int</span>, Stream&gt; savedCallback = <span class="hljs-literal">null</span>, Action&lt;<span class="hljs-built_in">int</span>, Exception&gt; failedCallback = <span class="hljs-literal">null</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> _workbookDict)<br>        &#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                <span class="hljs-keyword">using</span> <span class="hljs-keyword">var</span> stream = saveStreamCreator(item.Key);<br>                item.Value.Write(stream);<br>                savedCallback?.Invoke(item.Key, stream);<br>                stream.Dispose();<br>            &#125;<br>            <span class="hljs-keyword">catch</span> (Exception ex)<br>            &#123;<br>                failedCallback?.Invoke(item.Key, ex);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Save</span>(<span class="hljs-params">Func&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">string</span>&gt; fileNameCreator, Action&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">string</span>, FileStream&gt; savedCallback = <span class="hljs-literal">null</span>, Action&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">string</span>, Exception&gt; failedCallback = <span class="hljs-literal">null</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> _workbookDict)<br>        &#123;<br>            <span class="hljs-keyword">var</span> fileName = fileNameCreator(item.Key);<br><br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                <span class="hljs-keyword">var</span> dir = Path.GetDirectoryName(fileName);<br>                <span class="hljs-keyword">if</span> (!Directory.Exists(dir))<br>                &#123;<br>                    Directory.CreateDirectory(dir);<br>                &#125;<br>                <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> fileStream = <span class="hljs-keyword">new</span> FileStream(fileName, FileMode.Create))<br>                &#123;<br>                    item.Value.Write(fileStream);<span class="hljs-comment">//这里写入后就会自动关闭文件流，只能重新打开进行savedCallback</span><br>                    fileStream.Dispose();<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (savedCallback != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-keyword">using</span> <span class="hljs-keyword">var</span> fileStream = <span class="hljs-keyword">new</span> FileStream(fileName, FileMode.Open);<br>                    savedCallback(item.Key, fileName, fileStream);<br>                    fileStream.Dispose();<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">catch</span> (Exception ex)<br>            &#123;<br>                failedCallback?.Invoke(item.Key, fileName, ex);<br>                <span class="hljs-keyword">try</span><br>                &#123;<br>                    <span class="hljs-keyword">if</span> (File.Exists(fileName))<br>                    &#123;<br>                        File.Delete(fileName);<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">catch</span> &#123; &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CompressSave</span>(<span class="hljs-params">ZipOutputStream zipOutputStream, Func&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">string</span>&gt; tempfileNameCreator, Func&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">string</span>&gt; zipEntryNameCreator = <span class="hljs-literal">null</span>, Func&lt;DateTime&gt; zipEntryDateTimeCreator = <span class="hljs-literal">null</span></span>)</span><br>    &#123;<br>        Save(tempfileNameCreator, (i, tempFileName, tempFileStream) =&gt;<br>        &#123;<br>            Crc32 crc = <span class="hljs-keyword">new</span> Crc32();<br>            crc.Reset();<br>            <span class="hljs-keyword">var</span> zipEntryName = zipEntryNameCreator == <span class="hljs-literal">null</span> ? Path.GetFileName(tempFileName) : zipEntryNameCreator(i);<br>            ZipEntry entry = <span class="hljs-keyword">new</span> ZipEntry(zipEntryName);<br>            entry.DateTime = zipEntryDateTimeCreator == <span class="hljs-literal">null</span> ? DateTime.Now : zipEntryDateTimeCreator();<br>            entry.Size = tempFileStream.Length;<br>            zipOutputStream.PutNextEntry(entry);<br>            <span class="hljs-keyword">var</span> bufferSize = <span class="hljs-number">2048</span>;<br>            <span class="hljs-keyword">var</span> buffer = <span class="hljs-keyword">new</span> <span class="hljs-built_in">byte</span>[bufferSize];<br>            <span class="hljs-keyword">while</span> (bufferSize &gt; <span class="hljs-number">0</span>)<br>            &#123;<br>                bufferSize = tempFileStream.Read(buffer, <span class="hljs-number">0</span>, bufferSize);<br>                zipOutputStream.Write(buffer, <span class="hljs-number">0</span>, bufferSize);<br>                crc.Update(<span class="hljs-keyword">new</span> ArraySegment&lt;<span class="hljs-built_in">byte</span>&gt;(buffer, <span class="hljs-number">0</span>, bufferSize));<br>            &#125;<br>            entry.Crc = crc.Value;<br><br>            tempFileStream.Dispose();<span class="hljs-comment">//注意，这里必须释放后才能进行删除文件</span><br>            File.Delete(tempFileName);<br>        &#125;, (i, tempFileName, ex) =&gt;<br>        &#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                <span class="hljs-keyword">if</span> (File.Exists(tempFileName))<br>                &#123;<br>                    File.Delete(tempFileName);<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">catch</span> &#123; &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Dispose</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> _workbookDict)<br>        &#123;<br>            item.Value.Dispose();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">DeleteWorkbookTempFile</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">try</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> baseTempPath = Path.GetTempPath();<br><br>            <span class="hljs-keyword">var</span> currentTempFolderPath = Path.Combine(baseTempPath, <span class="hljs-string">&quot;poifiles&quot;</span>);<br><br>            <span class="hljs-keyword">var</span> dyInfo = <span class="hljs-keyword">new</span> DirectoryInfo(currentTempFolderPath);<br><br>            <span class="hljs-keyword">foreach</span> (FileInfo feInfo <span class="hljs-keyword">in</span> dyInfo.GetFiles())<br>            &#123;<br>                <span class="hljs-keyword">if</span> (feInfo.CreationTime &lt; DateTime.Now.AddDays(<span class="hljs-number">-1</span>))<br>                    feInfo.Delete();<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">catch</span><br>        &#123; &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> SheetWriter <span class="hljs-title">GetSheetWriter</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> sheetName</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (!_sheetWriterDict.ContainsKey(sheetName))<br>        &#123;<br>            _sheetWriterDict.Add(sheetName, <span class="hljs-keyword">new</span> SheetWriter(sheetName, _sheetMaxRow, _workbookDict, _isIncludeHeader));<br>        &#125;<br>        <span class="hljs-keyword">return</span> _sheetWriterDict[sheetName];<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><h2 id="调用方法-2"><a href="#调用方法-2" class="headerlink" title="调用方法"></a>调用方法</h2><p>（1）Home控制器方法代码如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">ExcelOutput3</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> localTempDir = <span class="hljs-string">$@&quot;<span class="hljs-subst">&#123;_hostEnvironment.ContentRootPath&#125;</span>\App_Data\TempFile&quot;</span>;<br>    <span class="hljs-keyword">if</span> (!Directory.Exists(localTempDir))<br>    &#123;<br>        Directory.CreateDirectory(localTempDir);<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> header = GetExportHeaderV2();<br>    <span class="hljs-keyword">using</span> AutoSplitExcelWriter writer = <span class="hljs-keyword">new</span> AutoSplitExcelWriter();<br><br>    <span class="hljs-comment">//假设在大数据量的环境下导出，在后端分页，每次单独查询数据库获取要导出的数据，写入临时构造文件</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">var</span> datas = GetTestDataV2();<span class="hljs-comment">//获取需要导出的数据，这里只是举例数据写死，实际可以换成数据库查询</span><br>        writer.WriteCollection(datas, <span class="hljs-literal">true</span>, f =&gt; header.ContainsKey(f) ? header[f] : f);<span class="hljs-comment">//descTranslationFunc指定切换显示表头的表达式，这里就是根据对象中的Description特性的值对应字典的key来拿到字典的Value</span><br>        GC.Collect();<br>    &#125;<br><br>    <span class="hljs-built_in">string</span> guid = Guid.NewGuid().ToString();<br>    writer.Save((fileIndex) =&gt;<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> FileStream(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;localTempDir&#125;</span>\\<span class="hljs-subst">&#123;guid&#125;</span>&quot;</span>, FileMode.Create);<span class="hljs-comment">//将临时写入的文件生成到指定路径</span><br>    &#125;);<br><br>    <span class="hljs-keyword">return</span> Json(guid);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">DownloadFile</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> key, <span class="hljs-built_in">string</span> contentType, <span class="hljs-built_in">string</span> fileName</span>)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> File(<span class="hljs-keyword">new</span> FileStream(<span class="hljs-string">$@&quot;<span class="hljs-subst">&#123;_hostEnvironment.ContentRootPath&#125;</span>\App_Data\TempFile\<span class="hljs-subst">&#123;key&#125;</span>&quot;</span>, FileMode.Open, FileAccess.Read), contentType, fileName);<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">private</span> Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt; <span class="hljs-title">GetExportHeaderV2</span>()</span><br>&#123;<br>    <span class="hljs-comment">//Id，Password，UpdateTime，这3个字段不导出</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>&gt;<br>    &#123;<br>        &#123; <span class="hljs-string">&quot;User Name&quot;</span>, <span class="hljs-string">&quot;用户名&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;Email Address&quot;</span>, <span class="hljs-string">&quot;邮箱&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;Surname&quot;</span>, <span class="hljs-string">&quot;姓氏&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;Name&quot;</span>, <span class="hljs-string">&quot;名字&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;Age&quot;</span>, <span class="hljs-string">&quot;年龄&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;Default Lanuage&quot;</span>, <span class="hljs-string">&quot;默认语言&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;Address&quot;</span>, <span class="hljs-string">&quot;地址&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;Phone Number&quot;</span>, <span class="hljs-string">&quot;手机号码&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;Create Time&quot;</span>, <span class="hljs-string">&quot;创建时间&quot;</span> &#125;,<br>    &#125;;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">private</span> List&lt;UserModel&gt; <span class="hljs-title">GetTestDataV2</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> list = <span class="hljs-keyword">new</span> List&lt;UserModel&gt;();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1000</span>; i++)<br>    &#123;<br>        list.Add(<span class="hljs-keyword">new</span> UserModel<br>        &#123;<br>            Id = i + <span class="hljs-number">1</span>,<br>            UserName = <span class="hljs-string">$&quot;Test<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>,<br>            EmailAddress = <span class="hljs-string">$&quot;Test<span class="hljs-subst">&#123;i&#125;</span>@Test<span class="hljs-subst">&#123;i&#125;</span>.com&quot;</span>,<br>            Password = <span class="hljs-string">&quot;123qwe!Q&quot;</span>,<br>            Surname = <span class="hljs-string">$&quot;Surname<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>,<br>            Name = <span class="hljs-string">$&quot;Name<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>,<br>            Age = <span class="hljs-number">18</span>,<br>            DefaultLanuage = <span class="hljs-string">&quot;en&quot;</span>,<br>            Address = <span class="hljs-string">&quot;USA&quot;</span>,<br>            PhoneNumber = i.ToString().PadLeft(<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;0&#x27;</span>),<br>            CreateTime = DateTime.Now.AddDays(<span class="hljs-number">-1</span>),<br>            UpdateTime = DateTime.Now,<br>        &#125;);<br>    &#125;<br>    <span class="hljs-keyword">return</span> list;<br>&#125;<br></code></pre></td></tr></table></figure></details><p>（2）UserModel对象代码如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">UserModel</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Description(<span class="hljs-string">&quot;User Name&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> UserName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Description(<span class="hljs-string">&quot;Email Address&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> EmailAddress &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Password &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Description(<span class="hljs-string">&quot;Surname&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Surname &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Description(<span class="hljs-string">&quot;Name&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123;  <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Description(<span class="hljs-string">&quot;Age&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Age &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Description(<span class="hljs-string">&quot;Default Lanuage&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> DefaultLanuage &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Description(<span class="hljs-string">&quot;Address&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Address &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Description(<span class="hljs-string">&quot;Phone Number&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PhoneNumber &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Description(<span class="hljs-string">&quot;Create Time&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> DateTime CreateTime &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> DateTime UpdateTime &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><p>（3）Index.cshtml视图代码如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs C#">&lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;<br>    &lt;h1 <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;display-4&quot;</span>&gt;Excel导入导出测试&lt;/h1&gt;<br>    &lt;div&gt;<br>        <span class="hljs-comment">//......省略其他代码</span><br>        &lt;p&gt;<br>            &lt;button onclick=<span class="hljs-string">&quot;ExcelOutput(1)&quot;</span>&gt;测试文件导出<span class="hljs-number">1</span>&lt;/button&gt;<br>            &lt;button onclick=<span class="hljs-string">&quot;ExcelOutput(2)&quot;</span>&gt;测试文件导出<span class="hljs-number">2</span>&lt;/button&gt;<br>            &lt;button onclick=<span class="hljs-string">&quot;ExcelOutput(3)&quot;</span>&gt;测试文件导出<span class="hljs-number">3</span>&lt;/button&gt;<br>        &lt;/p&gt;<br>    &lt;/div&gt;<br>    &lt;pre id=<span class="hljs-string">&quot;showDiv&quot;</span>&gt;<br><br>    &lt;/pre&gt;<br>&lt;/div&gt;<br><br>&lt;script&gt;<br>    <span class="hljs-function">function <span class="hljs-title">ExcelOutput</span>(<span class="hljs-params">way</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (way == <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-comment">//后端简单导出一个Sheet页内容</span><br>            <span class="hljs-comment">//返回二进制流，在前端构造文件下载链接</span><br>            $.ajax(&#123;<br>                url: <span class="hljs-string">&#x27;/Home/ExcelOutput1&#x27;</span>,<br>                type: <span class="hljs-string">&#x27;get&#x27;</span>,<br>                data: &#123;&#125;,<br>                success: function (res) &#123;<br>                    <span class="hljs-keyword">var</span> fileName = <span class="hljs-string">&quot;File&quot;</span> + GetDateNow() + <span class="hljs-string">&quot;.xlsx&quot;</span>;<br>                    exportFileByBlob(res, fileName, <span class="hljs-string">&quot;application/vnd.ms-excel&quot;</span>);<br>                &#125;<br>            &#125;);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (way == <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">//后端简单导出多个Sheet页内容</span><br>            <span class="hljs-comment">//返回文件流</span><br>            location.href = <span class="hljs-string">&quot;/Home/ExcelOutput2&quot;</span><br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (way ==<span class="hljs-number">3</span>) &#123;<br>            <span class="hljs-comment">//大数据导出</span><br>            $.ajax(&#123;<br>                url: <span class="hljs-string">&#x27;/Home/ExcelOutput3&#x27;</span>,<br>                type: <span class="hljs-string">&#x27;get&#x27;</span>,<br>                data: &#123;&#125;,<br>                success: function (res) &#123;<br>                    <span class="hljs-keyword">var</span> fileName = <span class="hljs-string">&quot;File&quot;</span> + GetDateNow() + <span class="hljs-string">&quot;.xlsx&quot;</span>;<br>                    location.href = <span class="hljs-string">&quot;/Home/DownloadFile?key=&quot;</span> + res + <span class="hljs-string">&quot;&amp;contentType=application/vnd.ms-excel&amp;fileName=&quot;</span> + fileName<br>                &#125;<br>            &#125;);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function">function <span class="hljs-title">GetDateNow</span>()</span> &#123;<br>        <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> Date();<br><br>        <span class="hljs-keyword">const</span> year = now.getFullYear();<br>        <span class="hljs-keyword">const</span> month = (<span class="hljs-string">&#x27;0&#x27;</span> + (now.getMonth() + <span class="hljs-number">1</span>)).slice(<span class="hljs-number">-2</span>);<br>        <span class="hljs-keyword">const</span> day = (<span class="hljs-string">&#x27;0&#x27;</span> + now.getDate()).slice(<span class="hljs-number">-2</span>);<br>        <span class="hljs-keyword">const</span> hours = (<span class="hljs-string">&#x27;0&#x27;</span> + now.getHours()).slice(<span class="hljs-number">-2</span>);<br>        <span class="hljs-keyword">const</span> minutes = (<span class="hljs-string">&#x27;0&#x27;</span> + now.getMinutes()).slice(<span class="hljs-number">-2</span>);<br>        <span class="hljs-keyword">const</span> seconds = (<span class="hljs-string">&#x27;0&#x27;</span> + now.getSeconds()).slice(<span class="hljs-number">-2</span>);<br><br>        <span class="hljs-keyword">const</span> formattedTime = year + month + day + hours + minutes + seconds;<br>        <span class="hljs-keyword">return</span> formattedTime;<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure></details><p>注意:</p><ul><li>writer.WriteCollection方法中，ignoreNotDescProperty参数可以指定是否忽略没有特性的属性，T泛型对象中给属性标记特性时，不需要导出的字段不标记特性，然后ignoreNotDescProperty&#x3D;true开启这个功能，descTranslationFunc参数是可以自定义表头的显示值切换逻辑，具体可以看demo怎么使用</li><li>writer.Save中实现文件的保存逻辑，样例中是保存到一个临时路径</li></ul><h3 id="解析说明-2"><a href="#解析说明-2" class="headerlink" title="解析说明"></a>解析说明</h3><p>关于大批量数据的导出，使用的是SXSSFWorkbook相关封装，本质的逻辑是每次循环写入数据到一个临时文件，待数据都写入完毕时候，保存到指定路径。这里举例导出大批量数据的一个逻辑，前端请求时，后端使用SXSSFWorkbook封装的方法进行导出，导出成实际文件生成到一个指定的临时路径下，一般情况下会存放到App_Data文件夹下，然后返回文件相关的key（这里是一个GUID），前端接收到文件key之后再请求一个下载文件的接口，传入文件key、文件类型、文件名，然后下载方法再去通过文件key去临时路径拿到实际文件再按正常的读取流的方式来导出，以上可以尽量做到少的内容占用，基本都是占用系统磁盘空间</p>]]></content>
    
    
    <categories>
      
      <category>经验总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Excel</tag>
      
      <tag>NPOI</tag>
      
      <tag>SXSSFWorkbook</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【3】学习IdentityServer4，搭建授权认证系统</title>
    <link href="/2024/01/10/StudyVueIdentityServer4/"/>
    <url>/2024/01/10/StudyVueIdentityServer4/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>学习IdentityServer4搭建一套授权认证系统，并且使用vue进行前后的分离</p>          </div><h1 id="1-搭建后端授权认证服务器"><a href="#1-搭建后端授权认证服务器" class="headerlink" title="1.搭建后端授权认证服务器"></a>1.搭建后端授权认证服务器</h1><h2 id="1-1-搭建IdentityServer4服务器"><a href="#1-1-搭建IdentityServer4服务器" class="headerlink" title="1.1.搭建IdentityServer4服务器"></a>1.1.搭建IdentityServer4服务器</h2><ul><li>创建一个空的.net core web api项目（项目名：IdentityServer），5001端口</li><li>添加NuGet包：IdentityServer4</li></ul><h2 id="1-2-快速搭建IdentityServer4的模板UI页面"><a href="#1-2-快速搭建IdentityServer4的模板UI页面" class="headerlink" title="1.2.快速搭建IdentityServer4的模板UI页面"></a>1.2.快速搭建IdentityServer4的模板UI页面</h2><p>（1）安装模板</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">dotnet new -i identityserver4.templates<br>dotnet new is4ui<br></code></pre></td></tr></table></figure><p>如果以上执行失败，可以去源代码下载即可， <code>https://github.com/IdentityServer/IdentityServer4.Quickstart.UI</code> ，将（Quickstart，Views，wwwroot三个文件夹直接复制到项目根目录即可）</p><p>（2）建一个静态的配置类：IdentityConfig</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">IdentityConfig</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IEnumerable&lt;IdentityResource&gt; IdentityResources =&gt;<br>        <span class="hljs-keyword">new</span> IdentityResource[]<br>        &#123;<br>            <span class="hljs-keyword">new</span> IdentityResources.OpenId(),<br>            <span class="hljs-keyword">new</span> IdentityResources.Profile(),<br>        &#125;;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IEnumerable&lt;ApiScope&gt; ApiScopes =&gt;<br>       <span class="hljs-keyword">new</span> ApiScope[]<br>       &#123;<br>            <span class="hljs-keyword">new</span> ApiScope(<span class="hljs-string">&quot;api1&quot;</span>, <span class="hljs-string">&quot;My API&quot;</span>)<br>       &#125;;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IEnumerable&lt;Client&gt; Clients =&gt;<br>       <span class="hljs-keyword">new</span> Client[]<br>       &#123;<br>            <span class="hljs-keyword">new</span> Client<br>            &#123;<br>                ClientId = <span class="hljs-string">&quot;client&quot;</span>,<br><br>                <span class="hljs-comment">// no interactive user, use the clientid/secret for authentication</span><br>                AllowedGrantTypes = GrantTypes.ClientCredentials,<br><br>                <span class="hljs-comment">// secret for authentication</span><br>                ClientSecrets =<br>                &#123;<br>                    <span class="hljs-keyword">new</span> Secret(<span class="hljs-string">&quot;D0C6E0F9-1A36-43E9-9E25-72240088DE1C&quot;</span>.Sha256())<br>                &#125;,<br><br>                <span class="hljs-comment">// scopes that client has access to</span><br>                AllowedScopes = &#123; <span class="hljs-string">&quot;api1&quot;</span> &#125;<br>            &#125;,<br>       &#125;;<br>&#125;<br></code></pre></td></tr></table></figure></details><p>（3）在Program中引入</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#">services.AddControllersWithViews();<span class="hljs-comment">//补充</span><br>services.AddIdentityServer()<br>    .AddDeveloperSigningCredential()<br>    .AddInMemoryIdentityResources(IdentityConfig.IdentityResources)<span class="hljs-comment">//声明可以获得的资源</span><br>    .AddInMemoryApiScopes(IdentityConfig.ApiScopes)<span class="hljs-comment">//声明API范围</span><br>    .AddInMemoryClients(IdentityConfig.Clients)<span class="hljs-comment">//声明客户端</span><br>    .AddTestUsers(TestUsers.Users);<span class="hljs-comment">//使用默认测试用户</span><br><br>app.UseIdentityServer();<span class="hljs-comment">//添加IdentityServer中间件</span><br>app.UseEndpoints(endpoints =&gt;<br>&#123;<br>    endpoints.MapControllers();<br>    endpoints.MapDefaultControllerRoute();<span class="hljs-comment">//补充</span><br>&#125;);<br></code></pre></td></tr></table></figure> </details><h1 id="2-搭建API资源服务器"><a href="#2-搭建API资源服务器" class="headerlink" title="2.搭建API资源服务器"></a>2.搭建API资源服务器</h1><h2 id="2-1-再新建一个WebApi空项目（项目名：WebApi1），5002端口"><a href="#2-1-再新建一个WebApi空项目（项目名：WebApi1），5002端口" class="headerlink" title="2.1.再新建一个WebApi空项目（项目名：WebApi1），5002端口"></a>2.1.再新建一个WebApi空项目（项目名：WebApi1），5002端口</h2><p>（1）Program配置相关信息，需要添加NuGet包：Microsoft.AspNetCore.Authentication.JwtBearer</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs C#">services.AddAuthentication(<span class="hljs-string">&quot;Bearer&quot;</span>)<br>    .AddJwtBearer(<span class="hljs-string">&quot;Bearer&quot;</span>, options =&gt;<br>    &#123;<br>        options.Authority = <span class="hljs-string">&quot;https://localhost:5001&quot;</span>;<br><br>        options.TokenValidationParameters = <span class="hljs-keyword">new</span> TokenValidationParameters<br>        &#123;<br>            ValidateAudience = <span class="hljs-literal">false</span><br>        &#125;;<br>    &#125;); <br>services.AddAuthorization(options =&gt;<br>    &#123;<br>        options.AddPolicy(<span class="hljs-string">&quot;ApiScope&quot;</span>, policy =&gt;<br>        &#123;<br>            policy.RequireAuthenticatedUser();<br>            policy.RequireClaim(<span class="hljs-string">&quot;scope&quot;</span>, <span class="hljs-string">&quot;api1&quot;</span>);<br>        &#125;);<br>    &#125;);<br><br>......<span class="hljs-comment">//省略代码</span><br><br>app.UseAuthentication();<br>app.UseAuthorization();<br><br>app.UseEndpoints(endpoints =&gt;<br>&#123;<br>    endpoints.MapControllers()<br>        .RequireAuthorization(<span class="hljs-string">&quot;ApiScope&quot;</span>);<span class="hljs-comment">//要求所有请求都要满足授权策略ApiScope</span><br>&#125;);<br></code></pre></td></tr></table></figure></details><p>（2）Controllers文件夹下，新建一个控制器IdentityController</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs C#">[<span class="hljs-meta">Route(<span class="hljs-string">&quot;identity&quot;</span>)</span>]<br>[<span class="hljs-meta">Authorize</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">IdentityController</span> : <span class="hljs-title">Controller</span><br>&#123;<br>    [<span class="hljs-meta">HttpGet</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> IActionResult <span class="hljs-title">Index</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> JsonResult(<span class="hljs-keyword">from</span> c <span class="hljs-keyword">in</span> User.Claims <span class="hljs-keyword">select</span> <span class="hljs-keyword">new</span> &#123; c.Type, c.Value &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><h2 id="2-2-验证搭建的服务"><a href="#2-2-验证搭建的服务" class="headerlink" title="2.2.验证搭建的服务"></a>2.2.验证搭建的服务</h2><p>创建一个控制台项目（项目名：TestClient），测试访问授权服务器获取token，再使用token访问资源服务器的identity接口</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Console.WriteLine(<span class="hljs-string">&quot;开始测试&quot;</span>);<br><br>    Console.WriteLine(<span class="hljs-string">&quot;访问授权认证服务器&quot;</span>);<br>    <span class="hljs-keyword">var</span> client = <span class="hljs-keyword">new</span> HttpClient();<br>    <span class="hljs-keyword">var</span> disco = <span class="hljs-keyword">await</span> client.GetDiscoveryDocumentAsync(<span class="hljs-string">&quot;https://localhost:5001&quot;</span>);<br>    <span class="hljs-keyword">if</span> (disco.IsError)<br>    &#123;<br>        Console.WriteLine(disco.Error);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    Console.WriteLine(<span class="hljs-string">&quot;请求token&quot;</span>);<br>    <span class="hljs-keyword">var</span> tokenResponse = <span class="hljs-keyword">await</span> client.RequestClientCredentialsTokenAsync(<span class="hljs-keyword">new</span> ClientCredentialsTokenRequest<br>    &#123;<br>        Address = disco.TokenEndpoint,<br><br>        ClientId = <span class="hljs-string">&quot;client&quot;</span>,<br>        ClientSecret = <span class="hljs-string">&quot;D0C6E0F9-1A36-43E9-9E25-72240088DE1C&quot;</span>,<br>        Scope = <span class="hljs-string">&quot;api1&quot;</span><br>    &#125;);<br><br>    <span class="hljs-keyword">if</span> (tokenResponse.IsError)<br>    &#123;<br>        Console.WriteLine(tokenResponse.Error);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    Console.WriteLine(tokenResponse.Json);<br><br>    Console.WriteLine(<span class="hljs-string">&quot;访问资源服务器&quot;</span>);<br>    <span class="hljs-keyword">var</span> apiClient = <span class="hljs-keyword">new</span> HttpClient();<br>    apiClient.SetBearerToken(tokenResponse.AccessToken);<br><br>    <span class="hljs-keyword">var</span> response = <span class="hljs-keyword">await</span> apiClient.GetAsync(<span class="hljs-string">&quot;https://localhost:5002/identity&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!response.IsSuccessStatusCode)<br>    &#123;<br>        Console.WriteLine(response.StatusCode);<br>        Console.WriteLine(<span class="hljs-string">&quot;失败&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> content = <span class="hljs-keyword">await</span> response.Content.ReadAsStringAsync();<br>        Console.WriteLine(content);<br>        Console.WriteLine(<span class="hljs-string">&quot;成功&quot;</span>);<br>    &#125;<br><br>    Console.ReadLine();<br>&#125;<br></code></pre></td></tr></table></figure></details><p><img src="/../img/StudyVueIdentityServer4/img1.jpg" alt="后端项目" title="后端项目"></p><p>完成以上，同时启动三个项目（IdentityServer、WebApi1、TestClient），TestClient控制台程序就会访问IdentityServer获取token，并带上token即可成功访问WebApi1的identity接口</p><h1 id="3-搭建前端Vue"><a href="#3-搭建前端Vue" class="headerlink" title="3.搭建前端Vue"></a>3.搭建前端Vue</h1><p>首先现要搭建vue的环境，前提至少需要安装好npm，node</p><h2 id="安装vue"><a href="#安装vue" class="headerlink" title="安装vue"></a>安装vue</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install vue -g<br></code></pre></td></tr></table></figure><h2 id="安装命令行工具"><a href="#安装命令行工具" class="headerlink" title="安装命令行工具"></a>安装命令行工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install vue-cli -g <span class="hljs-comment"># 低于vue3.x版本</span><br><br>npm install @vue/cli -g <span class="hljs-comment"># 最新版本（本篇文章都用最新的做）</span><br>npm install -g @vue/cli-init <span class="hljs-comment"># 最新版本想用init指令要额外再安装一个init指令</span><br><br>vue List <span class="hljs-comment"># 安装好之后查看命令</span><br></code></pre></td></tr></table></figure><p>3.x以上版本支持三种方式创建vue项目</p><ul><li>vue create 项目名称</li><li>vue init webpack 项目名</li><li>vue ui</li></ul><p>以下搭建使用vue create来搭建，都尽量使用当前最新版本的，在解决方案StudyVueIdentityServer4文件夹下进行搭建，项目名：vueclient1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vue create vueclient1 <span class="hljs-comment"># 选择3版本，等待安装完成</span><br></code></pre></td></tr></table></figure><p>然后进入项目根目录，即 <code>cd vueclient1</code> 然后运行项目 <code>npm run serve</code>，默认端口8080，后续会改为5003</p><h2 id="安装必要的路由插件"><a href="#安装必要的路由插件" class="headerlink" title="安装必要的路由插件"></a>安装必要的路由插件</h2><p>npm install vue-router@4</p><p>然后src文件夹下新增router文件夹，里面再建一个router.js</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><span class="hljs-comment">//import SamplePage from &#x27;../components/SamplePage.vue&#x27;//样例代码，怎么引入组件页面</span><br><br><span class="hljs-keyword">const</span> routes = [<br>    <span class="hljs-comment">// &#123;</span><br>    <span class="hljs-comment">//     path: &#x27;/&#x27;,</span><br>    <span class="hljs-comment">//     component:SamplePage</span><br>    <span class="hljs-comment">// &#125;,</span><br>]<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">createRouter</span>(&#123;<br>    <span class="hljs-attr">history</span>:<span class="hljs-title function_">createWebHashHistory</span>(),<span class="hljs-comment">//createWebHistory</span><br>    routes,<br>&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> router;<br></code></pre></td></tr></table></figure></details><p>然后在main.js引入</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">...<span class="hljs-comment">//省略代码</span><br><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./router/router&#x27;</span><span class="hljs-comment">//引入路由js</span><br><br><span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>).<span class="hljs-title function_">use</span>(router).<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></figure></details><h2 id="安装axios插件"><a href="#安装axios插件" class="headerlink" title="安装axios插件"></a>安装axios插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install axios<br></code></pre></td></tr></table></figure><p>新建一个request文件夹，在request文件夹里面建一个request.js</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;axios&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">request</span>(<span class="hljs-params">config</span>) &#123;<br><br>    axios.<span class="hljs-property">defaults</span>.<span class="hljs-property">withCredentials</span> = <span class="hljs-literal">true</span>;<br>    <span class="hljs-keyword">const</span> instance = axios.<span class="hljs-title function_">create</span>(&#123;<br>      <span class="hljs-attr">baseURL</span>: <span class="hljs-string">&#x27;/api&#x27;</span>, <span class="hljs-comment">// 通过/api别名指定后端路由</span><br>      <span class="hljs-attr">timeout</span>: <span class="hljs-number">5000</span>,<br>      <span class="hljs-attr">headers</span>:&#123;<br>      &#125;,<br>    &#125;)<br>  <br>    <span class="hljs-comment">// axios的拦截器(类似python的中间件的request)</span><br>    instance.<span class="hljs-property">interceptors</span>.<span class="hljs-property">request</span>.<span class="hljs-title function_">use</span>(<span class="hljs-function"><span class="hljs-params">aaa</span> =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(aaa);<br>      <span class="hljs-comment">// 多用于登录时的cookies判断</span><br>      <span class="hljs-keyword">return</span> aaa<br>    &#125;, <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    &#125;)<br>    <span class="hljs-comment">// 数据返回拦截</span><br>    instance.<span class="hljs-property">interceptors</span>.<span class="hljs-property">response</span>.<span class="hljs-title function_">use</span>(<span class="hljs-function"><span class="hljs-params">aaa</span> =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(aaa);<br>      <span class="hljs-comment">// 多用于登录时的cookies判断</span><br>      <span class="hljs-keyword">return</span> aaa.<span class="hljs-property">data</span><br>    &#125;, <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    &#125;)<br>    <span class="hljs-comment">// 直接返回</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">instance</span>(config)<br>  <br>  &#125;<br></code></pre></td></tr></table></figure></details><p>绑定代理，并修改端口为5003<br>在vue.config.js里面增加代理设置</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; defineConfig &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@vue/cli-service&#x27;</span>)<br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">transpileDependencies</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">devServer</span>:&#123;<br>    <span class="hljs-attr">port</span>: <span class="hljs-number">5003</span>,<span class="hljs-comment">//端口</span><br>    <span class="hljs-comment">//https: true,//是否开启https</span><br>    <span class="hljs-comment">// 代理</span><br>    <span class="hljs-attr">proxy</span>: &#123;<br>      <span class="hljs-string">&#x27;/api&#x27;</span>: &#123;<br>          <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;https://localhost:5001/&#x27;</span>, <span class="hljs-comment">// 代理后台服务器地址</span><br>          <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//允许跨域            </span><br>          <span class="hljs-attr">pathRewrite</span>: &#123;<br>            <span class="hljs-string">&#x27;/api&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-comment">//将地址中标记的/api都替换掉</span><br>          &#125;<br>      &#125;<br>    &#125;<br>  &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure></details><p>验证是否可以正常请求，helloWorld.vue代码调整如下，加一个按钮，点击会访问IdentityServer4服务器的默认路径（ <code>https://localhost:5001/weatherforecast</code> ）：</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hello&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;test()&quot;</span>&gt;</span>测试<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123;request&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/request/request&quot;</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;HelloWorld&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">props</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">msg</span>: <span class="hljs-title class_">String</span></span></span><br><span class="language-javascript"><span class="language-xml">  &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">methods</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">test</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-comment">//测试跨域访问</span></span></span><br><span class="language-javascript"><span class="language-xml">      request.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/weatherforecast&#x27;</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span>=&gt;</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span>=&gt;</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error)</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></details><p>然后IdentityServer4服务器开启允许跨域访问<br>Program调整如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs C#"> <span class="hljs-comment">//JS-allow Ajax calls to be made from http://localhost:5003 to https://localhost:5001.</span><br> services.AddCors(options =&gt;<br> &#123;<br>     <span class="hljs-comment">//this defines a CORS policy called &quot;default&quot;</span><br>     options.AddPolicy(<span class="hljs-string">&quot;default&quot;</span>, policy =&gt;<br>     &#123;<br>         policy.WithOrigins(<span class="hljs-string">&quot;http://localhost:5003&quot;</span>)<br>             .AllowAnyHeader()<br>             .AllowAnyMethod();<br>     &#125;);<br> &#125;);<br><br>......<span class="hljs-comment">//省略代码</span><br><br><span class="hljs-comment">//JS-Add the CORS middleware to the pipeline in Configure:</span><br>app.UseCors(<span class="hljs-string">&quot;default&quot;</span>);<br></code></pre></td></tr></table></figure></details><p>然后启动IdentityServer4服务器和vue，IdentityServer4服务器确保能访问 <code>https://localhost:5001/weatherforecast</code> ，然后访问vue的 <code>http://localhost:5003/</code> ，点击测试按钮，查看浏览器控制台，能得到和后端接口一样的数据就成功了。（特别注意由于后端5001端口是https，第一次访问浏览器可能会由于证书不安全拦截，要在浏览器上确保仍继续访问到页面为止，然后再点击vue的测试按钮）</p><p><img src="/../img/StudyVueIdentityServer4/img3.jpg" alt="默认首页" title="默认首页"></p><h1 id="4-前端实现的认证登录"><a href="#4-前端实现的认证登录" class="headerlink" title="4.前端实现的认证登录"></a>4.前端实现的认证登录</h1><h2 id="4-1-安装插件"><a href="#4-1-安装插件" class="headerlink" title="4.1.安装插件"></a>4.1.安装插件</h2><p>npm install oidc-client</p><h3 id="4-1-封装并初始化odic的方法"><a href="#4-1-封装并初始化odic的方法" class="headerlink" title="4.1.封装并初始化odic的方法"></a>4.1.封装并初始化odic的方法</h3><p>在request文件夹里面建一个odic.js</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Oidc</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;oidc-client&quot;</span>;<br><span class="hljs-keyword">var</span> config = &#123;<br>  <span class="hljs-attr">authority</span>: <span class="hljs-string">&quot;https://localhost:5001&quot;</span>,<br>  <span class="hljs-attr">client_id</span>: <span class="hljs-string">&quot;js&quot;</span>,<br>  <span class="hljs-attr">redirect_uri</span>: <span class="hljs-string">&quot;http://localhost:5003/CallBack&quot;</span>,<br>  <span class="hljs-attr">response_type</span>: <span class="hljs-string">&quot;id_token token&quot;</span>,<br>  <span class="hljs-attr">scope</span>: <span class="hljs-string">&quot;openid profile api1&quot;</span>,<br>  <span class="hljs-attr">post_logout_redirect_uri</span>: <span class="hljs-string">&quot;http://localhost:5003/&quot;</span><br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">oidc</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Oidc</span>.<span class="hljs-title class_">UserManager</span>(config);<br>&#125;<br></code></pre></td></tr></table></figure></details><h2 id="4-2-搭建访问组件"><a href="#4-2-搭建访问组件" class="headerlink" title="4.2.搭建访问组件"></a>4.2.搭建访问组件</h2><p>（1）自动跳转登录<br>HelloWorld.vue增加一个按钮</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hello&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;test()&quot;</span>&gt;</span>测试<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- 增加一个登录按钮 --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;login()&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123;request&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/request/request&quot;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123;oidc&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/request/odic.js&#x27;</span><span class="hljs-comment">//引入odic方法</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;HelloWorld&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">props</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">msg</span>: <span class="hljs-title class_">String</span></span></span><br><span class="language-javascript"><span class="language-xml">  &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">methods</span>:&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">test</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">      request.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/weatherforecast&#x27;</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span>=&gt;</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response);</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(response.<span class="hljs-property">data</span>)</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span>=&gt;</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error)</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">login</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title function_">oidc</span>().<span class="hljs-title function_">signinRedirect</span>();<span class="hljs-comment">//自动跳转到登录页面</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></details><p>（2）回调组件<br>新建一个CallBack.vue，登录成功后跳转MyHome路由</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Oidc</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;oidc-client&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Oidc</span>.<span class="hljs-title class_">UserManager</span>()</span></span><br><span class="language-javascript"><span class="language-xml">  .<span class="hljs-title function_">signinRedirectCallback</span>()</span></span><br><span class="language-javascript"><span class="language-xml">  .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span> = <span class="hljs-string">&quot;/#/MyHome&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">  .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;);</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></details><p>（3）登录后页面组件<br>新建MyHome.vue组件</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;api&quot;</span>&gt;</span>调用API<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;logout&quot;</span>&gt;</span>退出登录<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>&#123;&#123;res&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br>  <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123;oidc&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/request/odic.js&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;MyHome&quot;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">return</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">res</span>: <span class="hljs-string">&quot;My Home&quot;</span></span></span><br><span class="language-javascript"><span class="language-xml">      &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">api</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> that=<span class="hljs-variable language_">this</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title function_">oidc</span>().<span class="hljs-title function_">getUser</span>().<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">user</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">var</span> url = <span class="hljs-string">&quot;https://localhost:5002/identity&quot;</span>;<span class="hljs-comment">//访问资源服务器获取数据信息</span></span></span><br><span class="language-javascript"><span class="language-xml">  </span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();</span></span><br><span class="language-javascript"><span class="language-xml">          xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">&quot;GET&quot;</span>, url);</span></span><br><span class="language-javascript"><span class="language-xml">          xhr.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">              that.<span class="hljs-property">res</span> = (xhr.<span class="hljs-property">status</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(xhr.<span class="hljs-property">responseText</span>))</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;;</span></span><br><span class="language-javascript"><span class="language-xml">          xhr.<span class="hljs-title function_">setRequestHeader</span>(<span class="hljs-string">&quot;Authorization&quot;</span>, <span class="hljs-string">&quot;Bearer &quot;</span> + user.<span class="hljs-property">access_token</span>);</span></span><br><span class="language-javascript"><span class="language-xml">          xhr.<span class="hljs-title function_">send</span>();</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">logout</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title function_">oidc</span>().<span class="hljs-title function_">signoutRedirect</span>();</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> that=<span class="hljs-variable language_">this</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-title function_">oidc</span>().<span class="hljs-title function_">getUser</span>().<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">user</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">if</span> (user) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">              that.<span class="hljs-property">res</span> = (<span class="hljs-string">&quot;User logged in&quot;</span>, user.<span class="hljs-property">profile</span>);</span></span><br><span class="language-javascript"><span class="language-xml">          &#125; <span class="hljs-keyword">else</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">              that.<span class="hljs-property">res</span> = (<span class="hljs-string">&quot;User not logged in&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure></details><p>调整路由：</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">CallBack</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/CallBack&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">MyHome</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/MyHome&#x27;</span><br><br><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/CallBack&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;CallBack&#x27;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-title class_">CallBack</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/MyHome&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;MyHome&#x27;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-title class_">MyHome</span><br>    &#125;<br>]<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">createRouter</span>(&#123;<br>    <span class="hljs-attr">history</span>:<span class="hljs-title function_">createWebHashHistory</span>(),<span class="hljs-comment">//createWebHistory</span><br>    routes,<br>&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> router;<br></code></pre></td></tr></table></figure></details><p>然后WebApi1服务器开启允许跨域访问<br>Program调整如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//JS-allow Ajax calls to be made from http://localhost:5003 to https://localhost:5002.</span><br>services.AddCors(options =&gt;<br>&#123;<br>    <span class="hljs-comment">//this defines a CORS policy called &quot;default&quot;</span><br>    options.AddPolicy(<span class="hljs-string">&quot;default&quot;</span>, policy =&gt;<br>    &#123;<br>        policy.WithOrigins(<span class="hljs-string">&quot;http://localhost:5003&quot;</span>)<br>            .AllowAnyHeader()<br>            .AllowAnyMethod();<br>    &#125;);<br>&#125;);<br><br>......<span class="hljs-comment">//省略代码</span><br><br><span class="hljs-comment">//JS-Add the CORS middleware to the pipeline in Configure:</span><br>app.UseCors(<span class="hljs-string">&quot;default&quot;</span>);<br></code></pre></td></tr></table></figure></details><p>完成以上启动后端的IdentityServer4服务器和API资源服务器（即启动5001和5002端口），然后再启动vue项目（即5003端口），访问 <code>http://localhost:5003/</code> ，然后点击登录，就跳转到5001的登录页面了，用户名密码填alice或bob，正常登录后会访问MyHome页面，可以得到用户信息，然后点击调用API按钮可以得到5002端口得到的资源数据信息</p><p><img src="/../img/StudyVueIdentityServer4/img5.jpg" alt="登录成功" title="登录成功"></p><h1 id="5-自定义登录页面"><a href="#5-自定义登录页面" class="headerlink" title="5.自定义登录页面"></a>5.自定义登录页面</h1><h2 id="5-1-新建登录页面"><a href="#5-1-新建登录页面" class="headerlink" title="5.1.新建登录页面"></a>5.1.新建登录页面</h2><p>新建一个loginView.vue的页面，文件名可能有要求，直接命名Login.vue可能会报错，按照当前的要求换一个来命名即可，或者改一下命名要求的地址，这个可以参考网上其他教程</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>  &lt;div&gt;<br>      &lt;form&gt;<br>          &lt;div&gt;<br>              &lt;label&gt;用户名：&lt;/label&gt;<br>              &lt;input type=&quot;text&quot; placeholder=&quot;请输入用户名&quot; v-model=&quot;username&quot;&gt;<br>          &lt;/div&gt;<br>          &lt;div&gt;<br>              &lt;label&gt;密码：&lt;/label&gt;<br>              &lt;input type=&quot;password&quot; placeholder=&quot;请输入密码&quot; v-model=&quot;password&quot;&gt;<br>          &lt;/div&gt;<br>          &lt;div&gt;<br>            &lt;label&gt;记住我：&lt;/label&gt;<br>            &lt;input type=&quot;checkbox&quot; v-model=&quot;isRemember&quot;&gt;<br>          &lt;/div&gt;<br>      &lt;/form&gt;<br>      &lt;div&gt;<br>          &lt;button @click=&quot;login()&quot;&gt;登录&lt;/button&gt;<br>      &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br>  <br>&lt;script&gt;<br> import &#123;request&#125; from &quot;@/request/request&quot;<br><br> export default &#123;<br>  name: &#x27;loginView&#x27;,<br>  data() &#123;<br>      return &#123;<br>        username: &quot;&quot;,<br>        password: &quot;&quot;,<br>        isRemember: false,<br>      &#125;;<br>  &#125;,<br>  methods:&#123;<br>    login()&#123;<br><br>      //截取地址参数，构造ReturnUrl<br>      let index = this.$route.query.ReturnUrl.indexOf(&quot;?&quot;);<br>      let host = this.$route.query.ReturnUrl.substring(0, index + 1);<br>      host = host.substring(host.indexOf(&quot;/connect&quot;));<br>      let params = this.$route.query.ReturnUrl.substring(index + 1).split(&quot;&amp;&quot;);<br><br>      let ReturnUrl =<br>        host +<br>        params<br>          .map(x =&gt; &#123; return x; &#125;)<br>          .join(&quot;&amp;&quot;);<br><br>      var data = &#123;<br>        Username: this.username,<br>        Password: this.password,<br>        RememberLogin: this.isRemember,<br>        ReturnUrl: ReturnUrl,<br>      &#125;;<br><br>      request(&#123;<br>        headers: &#123; &#x27;content-type&#x27;: &#x27;application/x-www-form-urlencoded&#x27; &#125;,//表单提交<br>        method: &#x27;POST&#x27;,<br>        url: &#x27;/Account/LoginApi&#x27;,<br>        data: data<br>      &#125;).then(data=&gt;&#123;<br>        if (!data) &#123;<br>          this.$router.push(&#123; path: &quot;/404&quot; &#125;);<br>        &#125; else &#123;<br>          window.location = &quot;/api&quot; + data;<br>        &#125;<br>      &#125;).catch(error=&gt;&#123;<br>        console.log(error)<br>      &#125;)<br>    &#125;,<br>  &#125;<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure></details><p>再建一个404页面：_404View.vue</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>404<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>找不到页面！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></details><p>绑定路由</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Login</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/loginView&#x27;</span><br><span class="hljs-keyword">import</span> _404View <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/_404View&#x27;</span><br><br>......<span class="hljs-comment">//省略代码</span><br><br>  &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/Login&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Login&#x27;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-title class_">Login</span><br>  &#125;,<br>  &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/404&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;404&#x27;</span>,<br>      <span class="hljs-attr">component</span>: _404View<br>  &#125;<br></code></pre></td></tr></table></figure></details><p>后端IdentityServer服务器配置，Startup调整，配置登录页面跳转地址</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs C#">services.AddIdentityServer(options =&gt;<br>&#123;<br>    options.UserInteraction = <span class="hljs-keyword">new</span> IdentityServer4.Configuration.UserInteractionOptions<br>    &#123;<br>        LoginUrl = <span class="hljs-string">&quot;http://localhost:5003/#/Login&quot;</span>,<br><br>    &#125;;<br>&#125;)<br></code></pre></td></tr></table></figure><p>后端增加登录提交接口，参照AccountController的Login Post方法，复制一个改名为LoginApi，核心是把原来 <code>return Redirect</code> 的地方改为了 <code>return Content</code> ，然后我们单独在前端做跳转即可</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 复制Login方法，改为提供给Vue前端使用</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;model&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;button&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;exception cref=&quot;Exception&quot;&gt;</span><span class="hljs-doctag">&lt;/exception&gt;</span></span><br>[<span class="hljs-meta">HttpPost</span>]<br><span class="hljs-comment">//[ValidateAntiForgeryToken]</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">LoginApi</span>(<span class="hljs-params">LoginInputModel model</span>)</span><br>&#123;<br>    <span class="hljs-comment">// check if we are in the context of an authorization request</span><br>    <span class="hljs-keyword">var</span> context = <span class="hljs-keyword">await</span> _interaction.GetAuthorizationContextAsync(model.ReturnUrl);<br><br>    <span class="hljs-keyword">if</span> (ModelState.IsValid)<br>    &#123;<br>        <span class="hljs-comment">// validate username/password against in-memory store</span><br>        <span class="hljs-keyword">if</span> (_users.ValidateCredentials(model.Username, model.Password))<br>        &#123;<br>            <span class="hljs-keyword">var</span> user = _users.FindByUsername(model.Username);<br>            <span class="hljs-keyword">await</span> _events.RaiseAsync(<span class="hljs-keyword">new</span> UserLoginSuccessEvent(user.Username, user.SubjectId, user.Username, clientId: context?.Client.ClientId));<br><br>            <span class="hljs-comment">// only set explicit expiration here if user chooses &quot;remember me&quot;. </span><br>            <span class="hljs-comment">// otherwise we rely upon expiration configured in cookie middleware.</span><br>            AuthenticationProperties props = <span class="hljs-literal">null</span>;<br>            <span class="hljs-keyword">if</span> (AccountOptions.AllowRememberLogin &amp;&amp; model.RememberLogin)<br>            &#123;<br>                props = <span class="hljs-keyword">new</span> AuthenticationProperties<br>                &#123;<br>                    IsPersistent = <span class="hljs-literal">true</span>,<br>                    ExpiresUtc = DateTimeOffset.UtcNow.Add(AccountOptions.RememberMeLoginDuration)<br>                &#125;;<br>            &#125;;<br><br>            <span class="hljs-comment">// issue authentication cookie with subject ID and username</span><br>            <span class="hljs-keyword">var</span> isuser = <span class="hljs-keyword">new</span> IdentityServerUser(user.SubjectId)<br>            &#123;<br>                DisplayName = user.Username<br>            &#125;;<br><br>            <span class="hljs-keyword">await</span> HttpContext.SignInAsync(isuser, props);<br><br>            <span class="hljs-keyword">if</span> (context != <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (context.IsNativeClient())<br>                &#123;<br>                    <span class="hljs-comment">// The client is native, so this change in how to</span><br>                    <span class="hljs-comment">// return the response is for better UX for the end user.</span><br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.LoadingPage(<span class="hljs-string">&quot;Redirect&quot;</span>, model.ReturnUrl);<br>                &#125;<br><br>                <span class="hljs-comment">// we can trust model.ReturnUrl since GetAuthorizationContextAsync returned non-null</span><br>                <span class="hljs-comment">//return Redirect(model.ReturnUrl);</span><br>                <span class="hljs-keyword">return</span> Content(model.ReturnUrl);<br>            &#125;<br><br>            <span class="hljs-comment">// request for a local page</span><br>            <span class="hljs-keyword">if</span> (Url.IsLocalUrl(model.ReturnUrl))<br>            &#123;<br>                <span class="hljs-comment">//return Redirect(model.ReturnUrl);</span><br>                <span class="hljs-keyword">return</span> Content(model.ReturnUrl);<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(model.ReturnUrl))<br>            &#123;<br>                <span class="hljs-comment">//return Redirect(&quot;~/&quot;);</span><br>                <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-comment">// user might have clicked on a malicious link - should be logged</span><br>                <span class="hljs-comment">//throw new Exception(&quot;invalid return URL&quot;);</span><br>                <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;&quot;</span>);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">await</span> _events.RaiseAsync(<span class="hljs-keyword">new</span> UserLoginFailureEvent(model.Username, <span class="hljs-string">&quot;invalid credentials&quot;</span>, clientId: context?.Client.ClientId));<br>        ModelState.AddModelError(<span class="hljs-built_in">string</span>.Empty, AccountOptions.InvalidCredentialsErrorMessage);<br>    &#125;<br><br>    <span class="hljs-comment">// something went wrong, show form with error</span><br>    <span class="hljs-comment">//var vm = await BuildLoginViewModelAsync(model);</span><br>    <span class="hljs-comment">//return View(vm);</span><br>    <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></details><p>完成以上，启动前端和后端（即5001，5002，5003端口），点击登录按钮，就会跳转到登录页面，用户名密码填alice或bob，就可以正常登录并跳转到MyHome页面。</p><p><img src="/../img/StudyVueIdentityServer4/img4.jpg" alt="自定义登录" title="自定义登录"></p><h1 id="5-自定义登出跳转首页"><a href="#5-自定义登出跳转首页" class="headerlink" title="5.自定义登出跳转首页"></a>5.自定义登出跳转首页</h1><p>和登录的逻辑类似，新建一个logoutView.vue，就负责访问后端进行登出操作然后跳转指定页面</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        </span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br>    <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123;request&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/request/request&quot;</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;logoutView&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">request</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">headers</span>: &#123; <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span> &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/Account/LogoutApi&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-attr">data</span>: <span class="hljs-literal">null</span></span></span><br><span class="language-javascript"><span class="language-xml">    &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span>=&gt;</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">if</span> (!data) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/404&quot;</span> &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">        &#125; <span class="hljs-keyword">else</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/&quot;</span> &#125;);<span class="hljs-comment">//登出后要跳转的地址</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span>=&gt;</span>&#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(error)</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure></details><p>绑定路由</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Logout</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/logoutView&#x27;</span><br><br>......<span class="hljs-comment">//省略代码</span><br><br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/Logout&#x27;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Logout&#x27;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Logout</span><br>  &#125;<br></code></pre></td></tr></table></figure></details><p>后端IdentityServer服务器配置，Startup调整，配置登出页面跳转地址</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs C#">services.AddIdentityServer(options =&gt;<br>&#123;<br>    options.UserInteraction = <span class="hljs-keyword">new</span> IdentityServer4.Configuration.UserInteractionOptions<br>    &#123;<br>        LoginUrl = <span class="hljs-string">&quot;http://localhost:5003/#/Login&quot;</span>,<br>        LogoutUrl = <span class="hljs-string">&quot;http://localhost:5003/#/Logout&quot;</span>,<br>    &#125;;<br>&#125;)<br></code></pre></td></tr></table></figure><p>后端AccountController增加登出接口</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs C#">[<span class="hljs-meta">HttpPost</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">LogoutApi</span>()</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (User?.Identity.IsAuthenticated == <span class="hljs-literal">true</span>)<br>    &#123;<br>        <span class="hljs-comment">// delete local authentication cookie</span><br>        <span class="hljs-keyword">await</span> HttpContext.SignOutAsync();<br><br>        <span class="hljs-comment">// raise the logout event</span><br>        <span class="hljs-keyword">await</span> _events.RaiseAsync(<span class="hljs-keyword">new</span> UserLogoutSuccessEvent(User.GetSubjectId(), User.GetDisplayName()));<br><br>        <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;OK&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></details><p>完成以上，启动前端和后端（即5001，5002，5003端口），点击登录按钮，就会跳转到登录页面，用户名密码填alice或bob，登录后点击退出登录，会直接跳转会默认首页，再次点击登录需要再次填写用户名和密码。</p><p><img src="/../img/StudyVueIdentityServer4/img2.jpg" alt="前端项目" title="前端项目"></p><br><h1 id="demo链接"><a href="#demo链接" class="headerlink" title="demo链接"></a>demo链接</h1><p>Github代码-StudyVueIdentityServer4 <a href="https://github.com/YuMan-LJP/demo">https://github.com/YuMan-LJP/demo</a></p><br><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>IdentityServer4学习文档 <a href="https://identityserver4.readthedocs.io/en/latest/quickstarts/4_javascript_client.html">https://identityserver4.readthedocs.io/en/latest/quickstarts/4_javascript_client.html</a><br>Vue中文学习文档 <a href="https://cn.vuejs.org/guide/quick-start.html">https://cn.vuejs.org/guide/quick-start.html</a><br>Vue CLI使用文档 <a href="https://cli.vuejs.org/zh/guide/">https://cli.vuejs.org/zh/guide/</a></p>]]></content>
    
    
    <categories>
      
      <category>ASP.NET相关技术学习总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IdentityServer4</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【2】学习ASP.NET Identity，搭建一套简易权限控制系统</title>
    <link href="/2023/12/29/StudyAspNetIdentity/"/>
    <url>/2023/12/29/StudyAspNetIdentity/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>学习微软官方文档中的验证和授权，再结合自己做过一些项目的经验，搭建一套提供权限控制功能的系统，实现最基础的方法访问权限控制。从零开始搭建，最终效果可以动态配置权限。</p>          </div><h1 id="1-认证-Authentication"><a href="#1-认证-Authentication" class="headerlink" title="1.认证 Authentication"></a>1.认证 Authentication</h1><h2 id="1-1-建立新项目"><a href="#1-1-建立新项目" class="headerlink" title="1.1.建立新项目"></a>1.1.建立新项目</h2><p><a id="section1_1"></a></p><h3 id="1-1-1-创建一个MVC项目，身份认证类型选择个人账户"><a href="#1-1-1-创建一个MVC项目，身份认证类型选择个人账户" class="headerlink" title="1.1.1.创建一个MVC项目，身份认证类型选择个人账户"></a>1.1.1.创建一个MVC项目，身份认证类型选择个人账户</h3><p><img src="/../img/StudyAspNetIdentity/img1_1_1(1).jpg" alt="创建MVC项目" title="创建MVC项目"></p><p>不了解顶级语句的可以先参考微软文档介绍：<br><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/tutorials/top-level-statements">https://learn.microsoft.com/zh-cn/dotnet/csharp/tutorials/top-level-statements</a><br> <strong>在此使用顶级语句最明显的就是把Startup类省略了，整合到了Program类里面</strong></p><p>当前案例项目名称取名为：WebMvc1，后续相关样例代码在这个命名空间下</p><p><img src="/../img/StudyAspNetIdentity/img1_1_1(2).jpg" alt="项目结构" title="项目结构"><br>如上图项目结构，除了标准的MVC结构之外，Data文件夹下是EF的上下文实例和迁移文件，Areas文件夹下则是最开始选择了个人账户作为身份认证类型之后生成的Identity相关的页面代码文件，核心的页面都涵盖在Identity.UI包里面，这里暂时看不到。</p><h3 id="1-1-2-执行EF迁移，生成数据库"><a href="#1-1-2-执行EF迁移，生成数据库" class="headerlink" title="1.1.2.执行EF迁移，生成数据库"></a>1.1.2.执行EF迁移，生成数据库</h3><p>（1）先把当前创建的项目作为启动项，如果已经是就不管，<br>（2）打开appsettings.json文件，配置数据库连接字符串，<br>（3）然后打开程序包管理器控制台，选择默认项目为当前创建的项目，执行命令  <code>Update-Database</code><br> <em><strong>如果执行遇到异常，如提示关于证书相关的，可以在appsettings.json的DefaultConnection字符串后加是 <code>trustServerCertificate=true;</code> 或 <code>encrypt=false;</code></strong></em><br>（4）执行成功后查数据库，如下图所示：<br><img src="/../img/StudyAspNetIdentity/img1_1_2.jpg" alt="数据库迁移" title="数据库迁移"></p><h3 id="1-1-3-启动项目，注册用户"><a href="#1-1-3-启动项目，注册用户" class="headerlink" title="1.1.3.启动项目，注册用户"></a>1.1.3.启动项目，注册用户</h3><p><a id="section1_1_3"></a></p><p>（1）项目启动成功后，右上角自带注册和登录按钮，尝试自己注册一个账户，并登录（注意注册成功后需要点击一下页面的“ <strong>Click here to confirm your account</strong> ”来验证邮箱）<br><img src="/../img/StudyAspNetIdentity/img1_1_3(1).jpg" alt="启动项目" title="启动项目"><br>（2）登录成功后可以管理自己的账户信息，如下图所示：<br><img src="/../img/StudyAspNetIdentity/img1_1_3(2).jpg" alt="用户信息页面" title="用户信息页面"><br>注册的用户信息在数据库可以查询到，数据库执行语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> AspNetUsers<br></code></pre></td></tr></table></figure><p>（3）查看模板页_Layout.cshtml，会看到视图右上角是引入了一个部分视图_LoginPartial，查看部分视图可以得到这两个按钮的代码，按钮请求的则是Identity域里面的路径，这个则是封装在Identity.UI里面了</p><p>（4）在Program类里面补充 <code>app.UseAuthentication();</code> 来启用 Identity（注意按 UseRouting、UseAuthentication 和 UseAuthorization的顺序调用），在Home控制器里面的Privacy方法加上特性 <code>[Authorize]</code> ，再次启动，直接访问Privacy，会自动弹出登录页面，此时已经完成最简单的认证，表示这个方法要授权才能登录，就需要认证用户身份，只要登录即可</p><br><h2 id="1-2-拓展用户表，搭建基架"><a href="#1-2-拓展用户表，搭建基架" class="headerlink" title="1.2.拓展用户表，搭建基架"></a>1.2.拓展用户表，搭建基架</h2><p>在 <a href="#section1_1">1.1</a> 的基础上，如果我们想拓展用户名的信息，例如加上姓名、生日之类的属性，又或者想修改一下登录页面，信息编辑页面的视图等，则需要进行拓展</p><h3 id="1-2-1-拓展用户表"><a href="#1-2-1-拓展用户表" class="headerlink" title="1.2.1.拓展用户表"></a>1.2.1.拓展用户表</h3><p>在Data文件夹下新建ApplicationUser类并继承IdentityUser，修改ApplicationDbContext类，让IdentityDbContext泛型参数传入ApplicationUser</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ApplicationUser</span> : <span class="hljs-title">IdentityUser</span><br>&#123;<br>    <span class="hljs-comment">//拓展字段以下三个字段</span><br><br>    [<span class="hljs-meta">PersonalData</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span>? CustomTag &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">StringLength(200)</span>]<br>    [<span class="hljs-meta">PersonalData</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-string">&quot;&quot;</span>;<br><br>    [<span class="hljs-meta">PersonalData</span>]<br>    <span class="hljs-keyword">public</span> DateTime? Birthday &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ApplicationDbContext</span> : <span class="hljs-title">IdentityDbContext</span>&lt;<span class="hljs-title">ApplicationUser</span>&gt; <span class="hljs-comment">//传入ApplicationUser</span><br>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ApplicationDbContext</span>(<span class="hljs-params">DbContextOptions&lt;ApplicationDbContext&gt; options</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">base</span>(<span class="hljs-params">options</span>)</span><br>    &#123;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnModelCreating</span>(<span class="hljs-params">ModelBuilder builder</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.OnModelCreating(builder);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>然后程序包管理器控制台执行 <code>Add-Migration Updated_User</code> 会生成迁移日志，然后再执行 <code>Update-Database</code> 更新到数据库中，此时再查数据库用户表，就拓展了三个字段了，需要其他字段按自己需要增加即可</p><p>Program类中，将 <code>AddDefaultIdentity&lt;IdentityUser&gt;</code> 改为 <code>AddDefaultIdentity&lt;ApplicationUser&gt;</code> ，</p><p>_LoginPartial.cshtml中，将IdentityUser都改为ApplicationUser，改完代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs C#">@using Microsoft.AspNetCore.Identity<br>@using WebMvc1.Data<br>@inject SignInManager&lt;ApplicationUser&gt; SignInManager<br>@inject UserManager&lt;ApplicationUser&gt; UserManager<br></code></pre></td></tr></table></figure><h3 id="1-2-2-搭建基架"><a href="#1-2-2-搭建基架" class="headerlink" title="1.2.2.搭建基架"></a>1.2.2.搭建基架</h3><p>鼠标右键这个项目-&gt;添加-&gt;新搭建基架的项目，选择标识（Identity）添加，如下图所示，DbContext类中选择当前项目的那个EF上下文实例，替代文件勾选 <strong>Account&#x2F;Register</strong> 和 <strong>Account&#x2F;Manage&#x2F;Index</strong> ，主要我们拓展了三个字段，相应增加一下三个字段的维护，只需要改注册页面和用户编辑信息管理的页面即可，此时可以根据自己的需要，也可以选择其他的页面构筑（这里搭建基架的意思就是， <a href="#section1_1_3">1.1.3</a> 我们成功启动项目时，操作的注册页面和登录页面我们项目代码里面是看不到的，因为都被封装在Identity.UI里面了，现在就是要把搭建这个视图页面的源码生成出来，供我们自己重构页面）<br><img src="/../img/StudyAspNetIdentity/img1_2_2(1).jpg" alt="搭建基架" title="搭建基架"></p><p>生成好基架之后，整体的项目代码如下图所示：<br><img src="/../img/StudyAspNetIdentity/img1_2_2(2).jpg" alt="项目结构" title="项目结构"></p><p>开始调整视图页面，支持三个拓展字段的维护，首先调整注册页面<br>（1）调整Register.cshtml.cs（InputModel类加上三个字段，OnPostAsync方法补充对三个字段的赋值）</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">InputModel</span><br>&#123;<br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">DataType(DataType.Text)</span>]<br>    [<span class="hljs-meta">Display(Name = <span class="hljs-string">&quot;Tag&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> CustomTag &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;  <span class="hljs-comment">//补充代码</span><br><br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">DataType(DataType.Text)</span>]<br>    [<span class="hljs-meta">Display(Name = <span class="hljs-string">&quot;Full name&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;  <span class="hljs-comment">//补充代码</span><br><br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">Display(Name = <span class="hljs-string">&quot;Birth Date&quot;</span>)</span>]<br>    [<span class="hljs-meta">DataType(DataType.Date)</span>]<br>    <span class="hljs-keyword">public</span> DateTime? Birthday &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;  <span class="hljs-comment">//补充代码</span><br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span>     This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span>     directly from your code. This API may change or be removed in future releases.</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">EmailAddress</span>]<br>    [<span class="hljs-meta">Display(Name = <span class="hljs-string">&quot;Email&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Email &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    ......<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">OnPostAsync</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> returnUrl = <span class="hljs-literal">null</span></span>)</span><br>&#123;<br>    returnUrl ??= Url.Content(<span class="hljs-string">&quot;~/&quot;</span>);<br>    ExternalLogins = (<span class="hljs-keyword">await</span> _signInManager.GetExternalAuthenticationSchemesAsync()).ToList();<br>    <span class="hljs-keyword">if</span> (ModelState.IsValid)<br>    &#123;<br>        <span class="hljs-keyword">var</span> user = CreateUser();<br><br>        user.CustomTag = Input.CustomTag;  <span class="hljs-comment">//补充代码</span><br>        user.Name = Input.Name;            <span class="hljs-comment">//补充代码</span><br>        user.Birthday = Input.Birthday;    <span class="hljs-comment">//补充代码</span><br><br>        <span class="hljs-keyword">await</span> _userStore.SetUserNameAsync(user, Input.Email, CancellationToken.None);<br>        <span class="hljs-keyword">await</span> _emailStore.SetEmailAsync(user, Input.Email, CancellationToken.None);<br>        <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">await</span> _userManager.CreateAsync(user, Input.Password);<br><br>        ......<br>    &#125;<br><br>    <span class="hljs-comment">// If we got this far, something failed, redisplay form</span><br>    <span class="hljs-keyword">return</span> Page();<br>&#125;<br><br></code></pre></td></tr></table></figure></details><br><p>（2）调整Register.cshtml视图（视图补充三个字段的输入框）</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs C#">&lt;form id=<span class="hljs-string">&quot;registerForm&quot;</span> asp-route-returnUrl=<span class="hljs-string">&quot;@Model.ReturnUrl&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span>&gt;<br>    &lt;h2&gt;Create a <span class="hljs-keyword">new</span> account.&lt;/h2&gt;<br>    &lt;hr /&gt;<br>    &lt;div asp-validation-summary=<span class="hljs-string">&quot;ModelOnly&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span> role=<span class="hljs-string">&quot;alert&quot;</span>&gt;&lt;/div&gt;<br><br>    @* 补充代码 *@<br>    &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-floating mb-3&quot;</span>&gt;<br>        &lt;input asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.CustomTag&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> placeholder=<span class="hljs-string">&quot;tag&quot;</span> /&gt;<br>        &lt;label asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.CustomTag&quot;</span>&gt;&lt;/label&gt;<br>        &lt;span asp-validation-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.CustomTag&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;&lt;/span&gt;<br>    &lt;/div&gt;<br>    &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-floating mb-3&quot;</span>&gt;<br>        &lt;input asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Name&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> aria-required=<span class="hljs-string">&quot;true&quot;</span> placeholder=<span class="hljs-string">&quot;name&quot;</span> /&gt;<br>        &lt;label asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Name&quot;</span>&gt;&lt;/label&gt;<br>        &lt;span asp-validation-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Name&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;&lt;/span&gt;<br>    &lt;/div&gt;<br>    &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-floating mb-3&quot;</span>&gt;<br>        &lt;input asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Birthday&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> /&gt;<br>        &lt;label asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Birthday&quot;</span>&gt;&lt;/label&gt;<br>        &lt;span asp-validation-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Birthday&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;&lt;/span&gt;<br>    &lt;/div&gt;<br><br>    ......<br>&lt;/form&gt;<br></code></pre></td></tr></table></figure></details><br><p>（3）调整Manage文件夹下的Index.cshtml.cs（InputModel类加上三个字段，LoadAsync方法对这三个字段赋值，OnPostAsync方法更新这三个字段）</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">InputModel</span><br>&#123;<br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">DataType(DataType.Text)</span>]<br>    [<span class="hljs-meta">Display(Name = <span class="hljs-string">&quot;Tag&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> CustomTag &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;  <span class="hljs-comment">//补充代码</span><br><br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">DataType(DataType.Text)</span>]<br>    [<span class="hljs-meta">Display(Name = <span class="hljs-string">&quot;Full name&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;  <span class="hljs-comment">//补充代码</span><br><br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">Display(Name = <span class="hljs-string">&quot;Birth Date&quot;</span>)</span>]<br>    [<span class="hljs-meta">DataType(DataType.Date)</span>]<br>    <span class="hljs-keyword">public</span> DateTime? Birthday &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;  <span class="hljs-comment">//补充代码</span><br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span>     This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span>     directly from your code. This API may change or be removed in future releases.</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    [<span class="hljs-meta">Phone</span>]<br>    [<span class="hljs-meta">Display(Name = <span class="hljs-string">&quot;Phone number&quot;</span>)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PhoneNumber &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">LoadAsync</span>(<span class="hljs-params">ApplicationUser user</span>)</span><br>&#123;<br>    <span class="hljs-keyword">var</span> userName = <span class="hljs-keyword">await</span> _userManager.GetUserNameAsync(user);<br>    <span class="hljs-keyword">var</span> phoneNumber = <span class="hljs-keyword">await</span> _userManager.GetPhoneNumberAsync(user);<br><br>    Username = userName;<br><br>    Input = <span class="hljs-keyword">new</span> InputModel<br>    &#123;<br>        CustomTag = user.CustomTag,  <span class="hljs-comment">//补充代码</span><br>        Name = user.Name,            <span class="hljs-comment">//补充代码</span><br>        Birthday = user.Birthday,    <span class="hljs-comment">//补充代码</span><br>        PhoneNumber = phoneNumber<br>    &#125;;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">OnPostAsync</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> user = <span class="hljs-keyword">await</span> _userManager.GetUserAsync(User);<br>    <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> NotFound(<span class="hljs-string">$&quot;Unable to load user with ID &#x27;<span class="hljs-subst">&#123;_userManager.GetUserId(User)&#125;</span>&#x27;.&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (!ModelState.IsValid)<br>    &#123;<br>        <span class="hljs-keyword">await</span> LoadAsync(user);<br>        <span class="hljs-keyword">return</span> Page();<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> phoneNumber = <span class="hljs-keyword">await</span> _userManager.GetPhoneNumberAsync(user);<br>    <span class="hljs-keyword">if</span> (Input.PhoneNumber != phoneNumber)<br>    &#123;<br>        <span class="hljs-keyword">var</span> setPhoneResult = <span class="hljs-keyword">await</span> _userManager.SetPhoneNumberAsync(user, Input.PhoneNumber);<br>        <span class="hljs-keyword">if</span> (!setPhoneResult.Succeeded)<br>        &#123;<br>            StatusMessage = <span class="hljs-string">&quot;Unexpected error when trying to set phone number.&quot;</span>;<br>            <span class="hljs-keyword">return</span> RedirectToPage();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (Input.CustomTag != user.CustomTag)<br>    &#123;<br>        user.CustomTag = Input.CustomTag; <span class="hljs-comment">//补充代码</span><br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (Input.Name != user.Name)<br>    &#123;<br>        user.Name = Input.Name; <span class="hljs-comment">//补充代码</span><br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (Input.Birthday != user.Birthday)<br>    &#123;<br>        user.Birthday = Input.Birthday; <span class="hljs-comment">//补充代码</span><br>    &#125;<br><br>    <span class="hljs-keyword">await</span> _userManager.UpdateAsync(user);  <span class="hljs-comment">//补充代码，更新新增的字段</span><br>    <span class="hljs-keyword">await</span> _signInManager.RefreshSignInAsync(user);<br>    StatusMessage = <span class="hljs-string">&quot;Your profile has been updated&quot;</span>;<br>    <span class="hljs-keyword">return</span> RedirectToPage();<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>（4）调整Manage文件夹下的Index.cshtml（视图补充三个字段的输入框）</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs C#">&lt;form id=<span class="hljs-string">&quot;profile-form&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span>&gt;<br>    &lt;div asp-validation-summary=<span class="hljs-string">&quot;ModelOnly&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span> role=<span class="hljs-string">&quot;alert&quot;</span>&gt;&lt;/div&gt;<br><br>    @* 补充代码 *@<br>    &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-floating mb-3&quot;</span>&gt;<br>        &lt;input asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Username&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> placeholder=<span class="hljs-string">&quot;Please choose your username.&quot;</span> disabled /&gt;<br>        &lt;label asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Username&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-label&quot;</span>&gt;&lt;/label&gt;<br>    &lt;/div&gt;<br>    &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-floating&quot;</span>&gt;<br>        &lt;input asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.CustomTag&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> /&gt;<br>        &lt;label asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.CustomTag&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-label&quot;</span>&gt;&lt;/label&gt;<br>    &lt;/div&gt;<br>    &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-floating&quot;</span>&gt;<br>        &lt;input asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Name&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> /&gt;<br>        &lt;label asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Name&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-label&quot;</span>&gt;&lt;/label&gt;<br>    &lt;/div&gt;<br>    &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-floating&quot;</span>&gt;<br>        &lt;input asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Birthday&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> /&gt;<br>        &lt;label asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.Birthday&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-label&quot;</span>&gt;&lt;/label&gt;<br>    &lt;/div&gt;<br><br>    &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-floating mb-3&quot;</span>&gt;<br>        &lt;input asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.PhoneNumber&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> placeholder=<span class="hljs-string">&quot;Please enter your phone number.&quot;</span>/&gt;<br>        &lt;label asp-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.PhoneNumber&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-label&quot;</span>&gt;&lt;/label&gt;<br>        &lt;span asp-validation-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;Input.PhoneNumber&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;&lt;/span&gt;<br>    &lt;/div&gt;<br>    &lt;button id=<span class="hljs-string">&quot;update-profile-button&quot;</span> type=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;w-100 btn btn-lg btn-primary&quot;</span>&gt;Save&lt;/button&gt;<br>&lt;/form&gt;<br></code></pre></td></tr></table></figure></details><br><p>完成以上，启动项目，进入注册页面如下图所示：<br><img src="/../img/StudyAspNetIdentity/img1_2_2(3).jpg" alt="搭建后注册页面" title="搭建后注册页面"></p><p>登录后的用户信息编辑页面如下图所示：<br><img src="/../img/StudyAspNetIdentity/img1_2_2(4).jpg" alt="搭建后用户信息编辑页面" title="搭建后用户信息编辑页面"></p><p>以上就完成了基于 ASP.NET Identity 拓展自定义字段以及支持自定义字段的维护</p><h3 id="1-2-3-配置Identity"><a href="#1-2-3-配置Identity" class="headerlink" title="1.2.3.配置Identity"></a>1.2.3.配置Identity</h3><p>在Program类中，补充下列代码：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs C#">builder.Services.Configure&lt;IdentityOptions&gt;(options =&gt;<br>&#123;<br>    <span class="hljs-comment">// Default Password settings.</span><br>    options.Password.RequireDigit = <span class="hljs-literal">true</span>;<br>    options.Password.RequireLowercase = <span class="hljs-literal">true</span>;<br>    options.Password.RequireNonAlphanumeric = <span class="hljs-literal">true</span>;<br>    options.Password.RequireUppercase = <span class="hljs-literal">true</span>;<br>    options.Password.RequiredLength = <span class="hljs-number">6</span>;<br>    options.Password.RequiredUniqueChars = <span class="hljs-number">1</span>;<br><br>    <span class="hljs-comment">// Default Lockout settings.</span><br>    options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(<span class="hljs-number">5</span>);<span class="hljs-comment">//密码错误超过次数时的锁定时间</span><br>    options.Lockout.MaxFailedAccessAttempts = <span class="hljs-number">5</span>;<span class="hljs-comment">//密码错误最大允许次数</span><br>    options.Lockout.AllowedForNewUsers = <span class="hljs-literal">true</span>;<br>&#125;);<br><br>builder.Services.ConfigureApplicationCookie(options =&gt;<br>&#123;<br>    options.AccessDeniedPath = <span class="hljs-string">&quot;/Identity/Account/AccessDenied&quot;</span>;<br>    options.Cookie.Name = <span class="hljs-string">&quot;WebMcv1&quot;</span>;<br>    options.Cookie.HttpOnly = <span class="hljs-literal">true</span>;<br>    options.ExpireTimeSpan = TimeSpan.FromMinutes(<span class="hljs-number">5</span>);<span class="hljs-comment">//Cookies过期时间</span><br>    options.LoginPath = <span class="hljs-string">&quot;/Identity/Account/Login&quot;</span>;<br>    <span class="hljs-comment">// ReturnUrlParameter requires </span><br>    <span class="hljs-comment">//using Microsoft.AspNetCore.Authentication.Cookies;</span><br>    options.ReturnUrlParameter = CookieAuthenticationDefaults.ReturnUrlParameter;<br>    options.SlidingExpiration = <span class="hljs-literal">true</span>;<br>&#125;);<br></code></pre></td></tr></table></figure></details><br><p>以上代码表示配置密码的校验规则、用户锁定的方式、Cookies相关配置，用户的锁定配了之后还没完全开启，需要添加Login的基架，登录的OnPostAsync方法中，PasswordSignInAsync的lockoutOnFailure参数设置为true才开启，如下图所示：<br><img src="/../img/StudyAspNetIdentity/img1_2_3.jpg" alt="开启用户锁定" title="开启用户锁定"></p><br><hr><br><h1 id="2-授权-Authorization"><a href="#2-授权-Authorization" class="headerlink" title="2.授权 Authorization"></a>2.授权 Authorization</h1><h2 id="2-1-简单授权"><a href="#2-1-简单授权" class="headerlink" title="2.1.简单授权"></a>2.1.简单授权</h2><p>（1）在home控制器下Privacy方法加上特性 <code>[Authorize]</code> ，这个方法即需要授权才能登录<br>（2）给整个Home控制器加上特性 <code>[Authorize]</code> ，一启动程序的首页就会需要登录才能进入，给Index和Error方法加上 <code>[AllowAnonymous]</code> ，忽略授权，这样和上一步的效果一致</p><br><h2 id="2-2-基于角色授权"><a href="#2-2-基于角色授权" class="headerlink" title="2.2.基于角色授权"></a>2.2.基于角色授权</h2><h3 id="2-2-1-建立测试数据"><a href="#2-2-1-建立测试数据" class="headerlink" title="2.2.1.建立测试数据"></a>2.2.1.建立测试数据</h3><p>（1）在注册页面建立三个测试账户，分别是111@111.qq，222@222.qq和333@333.qq<br>（2）建立角色信息和用户角色关联信息，在数据库执行以下脚本</p><details><summary>Show Code</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> AspNetRoles(Id,Name,NormalizedName)<span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;NormalUserRole&#x27;</span>,<span class="hljs-string">&#x27;NormalUserRole&#x27;</span>)<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> AspNetRoles(Id,Name,NormalizedName)<span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;AdminRole&#x27;</span>,<span class="hljs-string">&#x27;AdminRole&#x27;</span>)<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> AspNetRoles(Id,Name,NormalizedName)<span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;SuperAdminRole&#x27;</span>,<span class="hljs-string">&#x27;SuperAdminRole&#x27;</span>)<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> AspNetUserRoles(UserId,RoleId)<span class="hljs-keyword">values</span>((<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetUsers <span class="hljs-keyword">where</span> UserName<span class="hljs-operator">=</span><span class="hljs-string">&#x27;111@111.qq&#x27;</span>),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;NormalUserRole&#x27;</span>))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> AspNetUserRoles(UserId,RoleId)<span class="hljs-keyword">values</span>((<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetUsers <span class="hljs-keyword">where</span> UserName<span class="hljs-operator">=</span><span class="hljs-string">&#x27;222@222.qq&#x27;</span>),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;AdminRole&#x27;</span>))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> AspNetUserRoles(UserId,RoleId)<span class="hljs-keyword">values</span>((<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetUsers <span class="hljs-keyword">where</span> UserName<span class="hljs-operator">=</span><span class="hljs-string">&#x27;333@333.qq&#x27;</span>),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;SuperAdminRole&#x27;</span>))<br></code></pre></td></tr></table></figure></details><br><p>执行查询，目前111@111.qq是普通用户角色，222@222.qq是管理员角色，333@333.qq是超级管理员角色</p><details><summary>Show Code</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">select</span> t1.UserName,t3.Name <span class="hljs-keyword">as</span> RoleName<br><span class="hljs-keyword">from</span> AspNetUsers <span class="hljs-keyword">as</span> t1<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> AspNetUserRoles <span class="hljs-keyword">as</span> t2 <span class="hljs-keyword">on</span> t2.UserId<span class="hljs-operator">=</span>t1.Id<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> AspNetRoles <span class="hljs-keyword">as</span> t3 <span class="hljs-keyword">on</span> t3.Id<span class="hljs-operator">=</span>t2.RoleId<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> t1.UserName,t3.Name<br></code></pre></td></tr></table></figure></details><br><table><thead><tr><th>UserName</th><th>RoleName</th></tr></thead><tbody><tr><td>111@111.qq</td><td>NormalUserRole</td></tr><tr><td>222@222.qq</td><td>AdminRole</td></tr><tr><td>333@333.qq</td><td>SuperAdminRole</td></tr></tbody></table><br><h3 id="2-2-2-建立一个常量类"><a href="#2-2-2-建立一个常量类" class="headerlink" title="2.2.2.建立一个常量类"></a>2.2.2.建立一个常量类</h3><p>在Data文件夹下，新建一个常量Constant类，代码如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Constants</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> NormalUserRole = <span class="hljs-string">&quot;NormalUserRole&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> AdminRole = <span class="hljs-string">&quot;AdminRole&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> SuperAdminRole = <span class="hljs-string">&quot;SuperAdminRole&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> MoreAdmin = <span class="hljs-string">&quot;MoreAdmin&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>假设有三个角色，分别是普通用户角色，管理员角色和超级管理员角色</p><h3 id="2-2-3-建立后端测试方法"><a href="#2-2-3-建立后端测试方法" class="headerlink" title="2.2.3.建立后端测试方法"></a>2.2.3.建立后端测试方法</h3><p>在Home控制器加入五个方法，分别是： <strong>TestNormalUserRole</strong> 、 <strong>TestAdminRole</strong> 、 <strong>TestSuperAdminRole</strong> 、 <strong>TestMoreAdminRole</strong> 、 <strong>TestMoreAdminRoleV2</strong></p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs C#">[<span class="hljs-meta">Authorize(Roles = Constants.NormalUserRole)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestNormalUserRole</span>()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> Task.FromResult(Content(<span class="hljs-string">&quot;测试按角色请求-NormalUserRole&quot;</span>));<br>&#125;<br><br>[<span class="hljs-meta">Authorize(Roles = Constants.AdminRole)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestAdminRole</span>()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> Task.FromResult(Content(<span class="hljs-string">&quot;测试按角色请求-AdminRole&quot;</span>));<br>&#125;<br><br>[<span class="hljs-meta">Authorize(Roles = Constants.SuperAdminRole)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestSuperAdminRole</span>()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> Task.FromResult(Content(<span class="hljs-string">&quot;测试按角色请求-SuperAdminRole&quot;</span>));<br>&#125;<br><br>[<span class="hljs-meta">Authorize(Roles = $<span class="hljs-string">&quot;&#123;Constants.AdminRole&#125;, &#123;Constants.SuperAdminRole&#125;&quot;</span>)</span>]<span class="hljs-comment">//多个角色可以指定为逗号分隔</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestMoreAdminRole</span>()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> Task.FromResult(Content(<span class="hljs-string">&quot;测试按角色请求-AdminRole个SuperAdminRole&quot;</span>));<br>&#125;<br><br>[<span class="hljs-meta">Authorize(Constants.MoreAdmin)</span>]<span class="hljs-comment">//使用Policy来配置多个角色进行授权</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestMoreAdminRoleV2</span>()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> Task.FromResult(Content(<span class="hljs-string">&quot;测试按角色请求-AdminRole个SuperAdminRole V2&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure></details><br><h3 id="2-2-4-前端视图加上访问请求"><a href="#2-2-4-前端视图加上访问请求" class="headerlink" title="2.2.4.前端视图加上访问请求"></a>2.2.4.前端视图加上访问请求</h3><p>在Privacy.cshtml视图加上访问链接</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C#">&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestNormalUserRole&quot;</span>&gt;Test Normal User Role&lt;/a&gt;<br>&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestAdminRole&quot;</span>&gt;Test Admin Role&lt;/a&gt;<br>&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestSuperAdminRole&quot;</span>&gt;Test Super Admin Role&lt;/a&gt;<br>&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestMoreAdminRole&quot;</span>&gt;Test More Admin Role&lt;/a&gt;<br>&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestMoreAdminRoleV2&quot;</span>&gt;Test More Admin Role V2&lt;/a&gt;<br></code></pre></td></tr></table></figure></details><br><h3 id="2-2-5-配置角色类型"><a href="#2-2-5-配置角色类型" class="headerlink" title="2.2.5.配置角色类型"></a>2.2.5.配置角色类型</h3><p>（1）在Program中配置角色类型</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs C#">builder.Services.AddDefaultIdentity&lt;ApplicationUser&gt;(options =&gt; options.SignIn.RequireConfirmedAccount = <span class="hljs-literal">true</span>)<br>    .AddRoles&lt;IdentityRole&gt;()<span class="hljs-comment">//补充代码</span><br>    .AddEntityFrameworkStores&lt;ApplicationDbContext&gt;();<br></code></pre></td></tr></table></figure></details><br><p>（2）使用Policy来配置多个角色进行授权，在Program配置如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs C#">builder.Services.AddAuthorization(options =&gt;<br>&#123;<br>    options.AddPolicy(Constants.MoreAdmin, policy =&gt; policy.RequireRole(Constants.AdminRole, Constants.SuperAdminRole));<span class="hljs-comment">//使用Policy来配置多个角色进行授权</span><br>&#125;);<br></code></pre></td></tr></table></figure></details><br><h3 id="2-2-6-启动测试"><a href="#2-2-6-启动测试" class="headerlink" title="2.2.6.启动测试"></a>2.2.6.启动测试</h3><p>不同角色的用户只能访问指定自身角色的方法：</p><ul><li><a href="mailto:&#x31;&#x31;&#x31;&#x40;&#x31;&#x31;&#x31;&#x2e;&#x71;&#x71;">&#x31;&#x31;&#x31;&#x40;&#x31;&#x31;&#x31;&#x2e;&#x71;&#x71;</a>用户可以访问 <strong>TestNormalUserRole</strong> 方法；</li><li><a href="mailto:&#50;&#50;&#x32;&#64;&#50;&#x32;&#x32;&#x2e;&#x71;&#113;">&#50;&#50;&#x32;&#64;&#50;&#x32;&#x32;&#x2e;&#x71;&#113;</a>用户可以访问 <strong>TestAdminRole</strong> 、 <strong>TestMoreAdminRole</strong> 和 <strong>TestMoreAdminRoleV2</strong> 方法；</li><li><a href="mailto:&#x33;&#x33;&#x33;&#x40;&#x33;&#x33;&#51;&#46;&#113;&#113;">&#x33;&#x33;&#x33;&#x40;&#x33;&#x33;&#51;&#46;&#113;&#113;</a>用户可以访问 <strong>TestSuperAdminRole</strong> 、 <strong>TestMoreAdminRole</strong> 和 <strong>TestMoreAdminRoleV2</strong> 方法。</li></ul><p>访问成功如下图所示：<br><img src="/../img/StudyAspNetIdentity/img2_2_6(1).jpg" alt="角色授权访问成功" title="角色授权访问成功"></p><p>访问失败如下图所示：<br><img src="/../img/StudyAspNetIdentity/img2_2_6(2).jpg" alt="角色授权访问失败" title="角色授权访问失败"></p><br><h2 id="2-3-自定义授权"><a href="#2-3-自定义授权" class="headerlink" title="2.3.自定义授权"></a>2.3.自定义授权</h2><p>在上一步的基础上再改进，能细到具体权限，不单单指角色，一个角色可以有多个权限</p><h3 id="2-3-1-建立权限校验实现类"><a href="#2-3-1-建立权限校验实现类" class="headerlink" title="2.3.1.建立权限校验实现类"></a>2.3.1.建立权限校验实现类</h3><p>在上一步建的常量类中补充其他常量，补充5个权限名称分别是创建、修改、删除、审批、拒绝</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Constants</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OperationName</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> Create = <span class="hljs-string">&quot;Create&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> Update = <span class="hljs-string">&quot;Update&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> Delete = <span class="hljs-string">&quot;Delete&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> Approve = <span class="hljs-string">&quot;Approve&quot;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> Reject = <span class="hljs-string">&quot;Reject&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> NormalUserRole = <span class="hljs-string">&quot;NormalUserRole&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> AdminRole = <span class="hljs-string">&quot;AdminRole&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> SuperAdminRole = <span class="hljs-string">&quot;SuperAdminRole&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-built_in">string</span> MoreAdmin = <span class="hljs-string">&quot;MoreAdmin&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>在项目根目录下建一个Authorization文件夹，加三个权限校验规则： <strong>NormalUserAuthorizationHandler</strong> 、 <strong>AdminAuthorizationHandler</strong> 、 <strong>SuperAdminAuthorizationHandler</strong></p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">NormalUserAuthorizationHandler</span> : <span class="hljs-title">AuthorizationHandler</span>&lt;<span class="hljs-title">OperationAuthorizationRequirement</span>, <span class="hljs-title">string</span>&gt;<br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ILogger&lt;NormalUserAuthorizationHandler&gt; _logger;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">NormalUserAuthorizationHandler</span>(<span class="hljs-params">ILogger&lt;NormalUserAuthorizationHandler&gt; logger</span>)</span><br>    &#123;<br>        _logger = logger;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> Task <span class="hljs-title">HandleRequirementAsync</span>(<span class="hljs-params">AuthorizationHandlerContext context, OperationAuthorizationRequirement requirement, <span class="hljs-built_in">string</span> resource</span>)</span><br>    &#123;<br>        _logger.LogInformation(resource);<br><br>        <span class="hljs-keyword">if</span> (context.User == <span class="hljs-literal">null</span> || resource == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.CompletedTask;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!context.User.IsInRole(Constants.NormalUserRole))<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.CompletedTask;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (requirement.Name != Constants.OperationName.Create &amp;&amp;<br>            requirement.Name != Constants.OperationName.Update &amp;&amp;<br>            requirement.Name != Constants.OperationName.Delete)<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.CompletedTask;<br>        &#125;<br><br>        context.Succeed(requirement);<span class="hljs-comment">//如果是普通用户，要有创建，修改，删除权限才能调用</span><br>        <span class="hljs-keyword">return</span> Task.CompletedTask;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AdminAuthorizationHandler</span> : <span class="hljs-title">AuthorizationHandler</span>&lt;<span class="hljs-title">OperationAuthorizationRequirement</span>, <span class="hljs-title">string</span>&gt;<br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ILogger&lt;AdminAuthorizationHandler&gt; _logger;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AdminAuthorizationHandler</span>(<span class="hljs-params">ILogger&lt;AdminAuthorizationHandler&gt; logger</span>)</span><br>    &#123;<br>        _logger = logger;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> Task <span class="hljs-title">HandleRequirementAsync</span>(<span class="hljs-params">AuthorizationHandlerContext context, OperationAuthorizationRequirement requirement, <span class="hljs-built_in">string</span> resource</span>)</span><br>    &#123;<br>        _logger.LogInformation(resource);<br><br>        <span class="hljs-keyword">if</span> (context.User == <span class="hljs-literal">null</span> || resource == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.CompletedTask;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(!context.User.IsInRole(Constants.AdminRole))<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.CompletedTask;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (requirement.Name != Constants.OperationName.Approve &amp;&amp;<br>            requirement.Name != Constants.OperationName.Reject)<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.CompletedTask;<br>        &#125;<br><br>        context.Succeed(requirement);<span class="hljs-comment">//如果是管理员用户，要有审批，拒绝权限才能调用</span><br>        <span class="hljs-keyword">return</span> Task.CompletedTask;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">SuperAdminAuthorizationHandler</span> : <span class="hljs-title">AuthorizationHandler</span>&lt;<span class="hljs-title">OperationAuthorizationRequirement</span>, <span class="hljs-title">string</span>&gt;<br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ILogger&lt;SuperAdminAuthorizationHandler&gt; _logger;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">SuperAdminAuthorizationHandler</span>(<span class="hljs-params">ILogger&lt;SuperAdminAuthorizationHandler&gt; logger</span>)</span><br>    &#123;<br>        _logger = logger;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> Task <span class="hljs-title">HandleRequirementAsync</span>(<span class="hljs-params">AuthorizationHandlerContext context, OperationAuthorizationRequirement requirement, <span class="hljs-built_in">string</span> resource</span>)</span><br>    &#123;<br>        _logger.LogInformation(resource);<br><br>        <span class="hljs-keyword">if</span> (context.User == <span class="hljs-literal">null</span> || resource == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.CompletedTask;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!context.User.IsInRole(Constants.SuperAdminRole))<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.CompletedTask;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (requirement.Name != Constants.OperationName.Create &amp;&amp;<br>            requirement.Name != Constants.OperationName.Update &amp;&amp;<br>            requirement.Name != Constants.OperationName.Delete &amp;&amp;<br>            requirement.Name != Constants.OperationName.Approve &amp;&amp;<br>            requirement.Name != Constants.OperationName.Reject)<br>        &#123;<br>            <span class="hljs-keyword">return</span> Task.CompletedTask;<br>        &#125;<br><br>        context.Succeed(requirement);<span class="hljs-comment">//如果是超级管理员用户，要有创建，修改，删除，审批，拒绝权限才能调用</span><br>        <span class="hljs-keyword">return</span> Task.CompletedTask;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>以上建完项目整体结构如下图所示:<br><img src="/../img/StudyAspNetIdentity/img2_3_1.jpg" alt="项目结构" title="项目结构"></p><h3 id="2-3-2-建立后端测试方法"><a href="#2-3-2-建立后端测试方法" class="headerlink" title="2.3.2.建立后端测试方法"></a>2.3.2.建立后端测试方法</h3><p><a id="section2_3_2"></a></p><p>在Home控制器下增加五个方法 <strong>TestCreate</strong> 、 <strong>TestUpdate</strong> 、 <strong>TestDelete</strong> 、 <strong>TestApprove</strong> 、 <strong>TestReject</strong> ，里面调用 <code>IAuthorizationService.AuthorizeAsync</code> </p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestCreate</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> isAuthorized = <span class="hljs-keyword">await</span> _authorizationService.AuthorizeAsync(User, <span class="hljs-string">&quot;测试&quot;</span>, <span class="hljs-keyword">new</span> OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Create &#125;);<span class="hljs-comment">//判断这个用户是否有创建权限</span><br>    <span class="hljs-keyword">if</span> (!isAuthorized.Succeeded)<br>    &#123;<br>        <span class="hljs-keyword">return</span> Forbid();<br>    &#125;<br>    <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;测试创建数据&quot;</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestUpdate</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> isAuthorized = <span class="hljs-keyword">await</span> _authorizationService.AuthorizeAsync(User, <span class="hljs-string">&quot;测试&quot;</span>, <span class="hljs-keyword">new</span> OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Update &#125;);<span class="hljs-comment">//判断这个用户是否有修改权限</span><br>    <span class="hljs-keyword">if</span> (!isAuthorized.Succeeded)<br>    &#123;<br>        <span class="hljs-keyword">return</span> Forbid();<br>    &#125;<br>    <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;测试修改数据&quot;</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestDelete</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> isAuthorized = <span class="hljs-keyword">await</span> _authorizationService.AuthorizeAsync(User, <span class="hljs-string">&quot;测试&quot;</span>, <span class="hljs-keyword">new</span> OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Delete &#125;);<span class="hljs-comment">//判断这个用户是否有删除权限</span><br>    <span class="hljs-keyword">if</span> (!isAuthorized.Succeeded)<br>    &#123;<br>        <span class="hljs-keyword">return</span> Forbid();<br>    &#125;<br>    <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;测试删除数据&quot;</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestApprove</span>()</span><br>&#123;    <br>    <span class="hljs-keyword">var</span> isAuthorized = <span class="hljs-keyword">await</span> _authorizationService.AuthorizeAsync(User, <span class="hljs-string">&quot;测试&quot;</span>, <span class="hljs-keyword">new</span> OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Approve &#125;);<span class="hljs-comment">//判断这个用户是否有审批权限</span><br>    <span class="hljs-keyword">if</span> (!isAuthorized.Succeeded)<br>    &#123;<br>        <span class="hljs-keyword">return</span> Forbid();<br>    &#125;<br>    <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;测试审批数据&quot;</span>);<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestReject</span>()</span><br>&#123;<br>    <span class="hljs-keyword">var</span> isAuthorized = <span class="hljs-keyword">await</span> _authorizationService.AuthorizeAsync(User, <span class="hljs-string">&quot;测试&quot;</span>, <span class="hljs-keyword">new</span> OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Reject &#125;);<span class="hljs-comment">//判断这个用户是否有拒绝权限</span><br>    <span class="hljs-keyword">if</span> (!isAuthorized.Succeeded)<br>    &#123;<br>        <span class="hljs-keyword">return</span> Forbid();<br>    &#125;<br>    <span class="hljs-keyword">return</span> Content(<span class="hljs-string">&quot;测试拒绝数据&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></details><br><h3 id="2-3-3-前端视图加上访问链接"><a href="#2-3-3-前端视图加上访问链接" class="headerlink" title="2.3.3.前端视图加上访问链接"></a>2.3.3.前端视图加上访问链接</h3><p>Privacy.cshtml视图加上访问链接</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C#">&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestCreate&quot;</span>&gt;Test Create&lt;/a&gt;<br>&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestUpdate&quot;</span>&gt;Test Update&lt;/a&gt;<br>&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestDelete&quot;</span>&gt;Test Delete&lt;/a&gt;<br>&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestApprove&quot;</span>&gt;Test Approve&lt;/a&gt;<br>&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestReject&quot;</span>&gt;Test Reject&lt;/a&gt;<br></code></pre></td></tr></table></figure></details><br><h3 id="2-3-4-在Program中引入"><a href="#2-3-4-在Program中引入" class="headerlink" title="2.3.4.在Program中引入"></a>2.3.4.在Program中引入</h3><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">// Authorization handlers.</span><br>builder.Services.AddSingleton&lt;IAuthorizationHandler, NormalUserAuthorizationHandler&gt;();<span class="hljs-comment">//引入普通用户授权校验</span><br>builder.Services.AddSingleton&lt;IAuthorizationHandler, AdminAuthorizationHandler&gt;();<span class="hljs-comment">//引入管理员用户授权校验</span><br>builder.Services.AddSingleton&lt;IAuthorizationHandler, SuperAdminAuthorizationHandler&gt;();<span class="hljs-comment">//引入超级管理员授权校验</span><br></code></pre></td></tr></table></figure></details><br><div class="note note-warning">            <p>注意作为单一实例添加，所需的全部信息都位于 HandleRequirementAsync 方法的 Context 参数中获取到。如果使用了EF等连接数据库的方法，改用AddScoped进行引入</p>          </div><p>目前实现了不同用户可以访问指定权限的方法，</p><ul><li><a href="mailto:&#49;&#49;&#49;&#x40;&#x31;&#49;&#x31;&#46;&#x71;&#113;">&#49;&#49;&#49;&#x40;&#x31;&#49;&#x31;&#46;&#x71;&#113;</a>用户可以访问 <strong>TestCreate</strong> 、 <strong>TestUpdate</strong> 、 <strong>TestDelete</strong> 方法；</li><li><a href="mailto:&#50;&#x32;&#x32;&#64;&#50;&#x32;&#x32;&#x2e;&#x71;&#x71;">&#50;&#x32;&#x32;&#64;&#50;&#x32;&#x32;&#x2e;&#x71;&#x71;</a>用户可以访问 <strong>TestApprove</strong> 、 <strong>TestReject</strong> 方法；</li><li><a href="mailto:&#x33;&#51;&#51;&#64;&#51;&#51;&#x33;&#46;&#x71;&#113;">&#x33;&#51;&#51;&#64;&#51;&#51;&#x33;&#46;&#x71;&#113;</a>用户可以访问全部方法。</li></ul><p>在三个权限校验类打个断点，会发现，每次访问方法时，三个权限校验类都会执行一遍，只要其中一个类执行到 <code>context.Succeed</code> 即表示可以访问</p><div class="note note-warning">            <p>继承的AuthorizationHandler的TResource泛型可以是任意的，这里的样例使用了string，如果校验逻辑中需要由上文传递一些数据信息，都可以经TResource传入，注意传入的类型要与继承的AuthorizationHandler类中声明的一致，否则不会触发AuthorizationHandler相关继承方法</p>          </div><br><h2 id="2-4-自定义特性授权"><a href="#2-4-自定义特性授权" class="headerlink" title="2.4.自定义特性授权"></a>2.4.自定义特性授权</h2><p>在上一步的基础上再次改进，可以通过给方法标记特性的方式进行权限控制</p><h3 id="2-4-1-建立新的权限校验规则"><a href="#2-4-1-建立新的权限校验规则" class="headerlink" title="2.4.1.建立新的权限校验规则"></a>2.4.1.建立新的权限校验规则</h3><p>在Authorization文件夹下再增加一个MyAuthorizationHandler类和一个MyAuthorizeAttribute特性</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MyAuthorizationHandler</span> : <span class="hljs-title">AuthorizationHandler</span>&lt;<span class="hljs-title">MyAuthorizeAttribute</span>&gt;<br>&#123;<br>    ILogger&lt;MyAuthorizationHandler&gt; _logger;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyAuthorizationHandler</span>(<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function">        ILogger&lt;MyAuthorizationHandler&gt; logger</span>)</span><br>    &#123;<br>        _logger = logger;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> Task <span class="hljs-title">HandleRequirementAsync</span>(<span class="hljs-params">AuthorizationHandlerContext context, MyAuthorizeAttribute requirement</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> isRequireAll = requirement.RequireAllPermissions;<span class="hljs-comment">//TODO...</span><br><br>        <span class="hljs-keyword">if</span> (context.User.IsInRole(Constants.NormalUserRole))<br>        &#123;<br>            _logger.LogInformation(Constants.NormalUserRole);<br><br>            <span class="hljs-keyword">if</span> (requirement.Permissions.Contains(Constants.OperationName.Create) ||<br>                requirement.Permissions.Contains(Constants.OperationName.Update) ||<br>                requirement.Permissions.Contains(Constants.OperationName.Delete))<br>            &#123;<br>                context.Succeed(requirement);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (context.User.IsInRole(Constants.AdminRole))<br>        &#123;<br>            _logger.LogInformation(Constants.AdminRole);<br><br>            <span class="hljs-keyword">if</span> (requirement.Permissions.Contains(Constants.OperationName.Approve) ||<br>                requirement.Permissions.Contains(Constants.OperationName.Reject))<br>            &#123;<br>                context.Succeed(requirement);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (context.User.IsInRole(Constants.SuperAdminRole))<br>        &#123;<br>            _logger.LogInformation(Constants.SuperAdminRole);<br><br>            <span class="hljs-keyword">if</span> (requirement.Permissions.Contains(Constants.OperationName.Create) ||<br>                requirement.Permissions.Contains(Constants.OperationName.Update) ||<br>                requirement.Permissions.Contains(Constants.OperationName.Delete) ||<br>                requirement.Permissions.Contains(Constants.OperationName.Approve) ||<br>                requirement.Permissions.Contains(Constants.OperationName.Reject))<br>            &#123;<br>                context.Succeed(requirement);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> Task.CompletedTask;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MyAuthorizeAttribute</span> : <span class="hljs-title">AuthorizeAttribute</span>, <span class="hljs-title">IAuthorizationRequirement</span>, <span class="hljs-title">IAuthorizationRequirementData</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyAuthorizeAttribute</span>(<span class="hljs-params"><span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] permissions</span>)</span><br>    &#123;<br>        Permissions = permissions;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyAuthorizeAttribute</span>(<span class="hljs-params"><span class="hljs-built_in">bool</span> isRequireAll, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] permissions</span>)</span><br>    &#123;<br>        RequireAllPermissions = isRequireAll;<br>        Permissions = permissions;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 声明权限名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span>[] Permissions &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 必须满足全部权限才能访问</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> RequireAllPermissions &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> IEnumerable&lt;IAuthorizationRequirement&gt; <span class="hljs-title">GetRequirements</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">yield</span> <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>以上建完项目整体结构如下图所示:<br><img src="/../img/StudyAspNetIdentity/img2_4_1.jpg" alt="项目结构" title="项目结构"></p><h3 id="2-4-2-方法访问控制"><a href="#2-4-2-方法访问控制" class="headerlink" title="2.4.2.方法访问控制"></a>2.4.2.方法访问控制</h3><p>在Home控制器下增加一个TestRead方法，方法标记特性 <code>[MyAuthorize]</code> 并传入任意数量的权限名称常量</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C#">[<span class="hljs-meta">MyAuthorize(Constants.OperationName.Create, Constants.OperationName.Update, Constants.OperationName.Delete, Constants.OperationName.Approve, Constants.OperationName.Reject)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestRead</span>()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> Task.FromResult(Content(<span class="hljs-string">&quot;测试读取数据&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure></details><br><h3 id="2-4-3-前端视图加上访问链接"><a href="#2-4-3-前端视图加上访问链接" class="headerlink" title="2.4.3.前端视图加上访问链接"></a>2.4.3.前端视图加上访问链接</h3><p>Privacy.cshtml视图加上访问链接</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C#">&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestRead&quot;</span>&gt;Test Read&lt;/a&gt;<br></code></pre></td></tr></table></figure><h3 id="2-4-4-在Program中引入"><a href="#2-4-4-在Program中引入" class="headerlink" title="2.4.4.在Program中引入"></a>2.4.4.在Program中引入</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C#">builder.Services.AddScoped&lt;IAuthorizationHandler, MyAuthorizationHandler&gt;();<span class="hljs-comment">//有连接数据库相关方法注入改用AddScoped，不能用AddSingleton</span><br></code></pre></td></tr></table></figure><p>在 <a href="#section2_3_2">2.3.2</a> 中添加的5个方法（ <strong>TestCreate</strong> 、 <strong>TestUpdate</strong> 、 <strong>TestDelete</strong> 、 <strong>TestApprove</strong> 、 <strong>TestReject</strong> ）也可以改用标记特性的方式了，去掉里面的 <code>_authorizationService.AuthorizeAsync</code> 方法的相关代码即可。然后原来的三个自定义的权限校验类可以作废使用了（ <strong>NormalUserAuthorizationHandler</strong> 、 <strong>AdminAuthorizationHandler</strong> 、 <strong>SuperAdminAuthorizationHandler</strong> 标记作废，并且把Porgram的引用注释掉）</p><p>目前就实现了，根据特性来调用授权逻辑来控制方法的访问权限，可以再进一步优化，特性类中可以增加一个属性RequireAllPermissions，实现是否满足标记的全部权限才能访问。</p><blockquote><p>注意继承的AuthorizationHandler作为单一实例添加。 它们是单一实例，因为不使用 EF，并且所需的全部信息都位于 HandleRequirementAsync 方法的 Context 参数中。</p></blockquote><p><strong>（如果要注入UserManager，Program引入时使用AddScoped进行引入）</strong></p><br><h2 id="2-5-权限实现动态配置"><a href="#2-5-权限实现动态配置" class="headerlink" title="2.5.权限实现动态配置"></a>2.5.权限实现动态配置</h2><p>在上一步的基础上再进一步拓展，实现动态权限配置。将用户，角色，权限都存储于数据库中，通过读取数据库的数据来进行权限控制</p><h3 id="2-5-1-增加MyPermission实体"><a href="#2-5-1-增加MyPermission实体" class="headerlink" title="2.5.1.增加MyPermission实体"></a>2.5.1.增加MyPermission实体</h3><p>在Data文件夹下新增MyPermission类</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MyPermission</span><br>&#123;<br>    [<span class="hljs-meta">Key</span>]<br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">StringLength(200)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> PermissionId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">Required</span>]<br>    [<span class="hljs-meta">StringLength(200)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    [<span class="hljs-meta">StringLength(500)</span>]<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span>? Description &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> IsActive &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> DateTime CreationTime &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span>? RoleId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">virtual</span> IdentityRole? Role &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span>? UserId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">virtual</span> ApplicationUser? User &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>ApplicationDbContext引入Dbset</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ApplicationDbContext</span> : <span class="hljs-title">IdentityDbContext</span>&lt;<span class="hljs-title">ApplicationUser</span>&gt;<br>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ApplicationDbContext</span>(<span class="hljs-params">DbContextOptions&lt;ApplicationDbContext&gt; options</span>)</span><br><span class="hljs-function">        : <span class="hljs-title">base</span>(<span class="hljs-params">options</span>)</span><br>    &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> DbSet&lt;MyPermission&gt; MyPermissions &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; <span class="hljs-comment">//补充代码</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnModelCreating</span>(<span class="hljs-params">ModelBuilder builder</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">base</span>.OnModelCreating(builder);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>然后执行迁移 <code>Add-Migration Added_MyPermission</code> 生成迁移日志之后，再执行 <code>Update-Database</code> 更新到数据库中</p><h3 id="2-5-2-新增测试数据"><a href="#2-5-2-新增测试数据" class="headerlink" title="2.5.2.新增测试数据"></a>2.5.2.新增测试数据</h3><p>在数据库执行以下脚本，给MyPermissions表插入权限数据，并配置权限给指定的角色</p><details><summary>Show Code</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Create&#x27;</span>,N<span class="hljs-string">&#x27;新增权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;NormalUserRole&#x27;</span>))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Update&#x27;</span>,N<span class="hljs-string">&#x27;修改权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;NormalUserRole&#x27;</span>))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Delete&#x27;</span>,N<span class="hljs-string">&#x27;删除权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;NormalUserRole&#x27;</span>))<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Approve&#x27;</span>,N<span class="hljs-string">&#x27;审批权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;AdminRole&#x27;</span>))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Reject&#x27;</span>,N<span class="hljs-string">&#x27;拒绝权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;AdminRole&#x27;</span>))<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Create&#x27;</span>,N<span class="hljs-string">&#x27;新增权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;SuperAdminRole&#x27;</span>))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Update&#x27;</span>,N<span class="hljs-string">&#x27;修改权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;SuperAdminRole&#x27;</span>))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Delete&#x27;</span>,N<span class="hljs-string">&#x27;删除权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;SuperAdminRole&#x27;</span>))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Approve&#x27;</span>,N<span class="hljs-string">&#x27;审批权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;SuperAdminRole&#x27;</span>))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> MyPermissions([PermissionId],[Name],[Description],[IsActive],[CreationTime],[RoleId])<br><span class="hljs-keyword">values</span>(NEWID(),<span class="hljs-string">&#x27;Reject&#x27;</span>,N<span class="hljs-string">&#x27;拒绝权限&#x27;</span>,<span class="hljs-number">1</span>,GETDATE(),(<span class="hljs-keyword">select</span> Id <span class="hljs-keyword">from</span> AspNetRoles <span class="hljs-keyword">where</span> Name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;SuperAdminRole&#x27;</span>))<br></code></pre></td></tr></table></figure></details><br><p>查询数据结果</p><details><summary>Show Code</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">select</span> t1.UserName,t3.Name <span class="hljs-keyword">as</span> RoleName,t4.Name <span class="hljs-keyword">as</span> PermissionName<br><span class="hljs-keyword">from</span> AspNetUsers <span class="hljs-keyword">as</span> t1<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> AspNetUserRoles <span class="hljs-keyword">as</span> t2 <span class="hljs-keyword">on</span> t2.UserId<span class="hljs-operator">=</span>t1.Id<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> AspNetRoles <span class="hljs-keyword">as</span> t3 <span class="hljs-keyword">on</span> t3.Id<span class="hljs-operator">=</span>t2.RoleId<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> MyPermissions <span class="hljs-keyword">as</span> t4 <span class="hljs-keyword">on</span> t4.RoleId<span class="hljs-operator">=</span>t3.Id <span class="hljs-keyword">and</span> (t4.UserId<span class="hljs-operator">=</span>t1.Id <span class="hljs-keyword">or</span> t4.UserId <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span>)<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> t1.UserName,t3.Name,t4.Name<br></code></pre></td></tr></table></figure></details><br><table><thead><tr><th>UserName</th><th>RoleName</th><th>PermissionName</th></tr></thead><tbody><tr><td>111@111.qq</td><td>NormalUserRole</td><td>Create</td></tr><tr><td>111@111.qq</td><td>NormalUserRole</td><td>Delete</td></tr><tr><td>111@111.qq</td><td>NormalUserRole</td><td>Update</td></tr><tr><td>222@222.qq</td><td>AdminRole</td><td>Approve</td></tr><tr><td>222@222.qq</td><td>AdminRole</td><td>Reject</td></tr><tr><td>333@333.qq</td><td>SuperAdminRole</td><td>Approve</td></tr><tr><td>333@333.qq</td><td>SuperAdminRole</td><td>Create</td></tr><tr><td>333@333.qq</td><td>SuperAdminRole</td><td>Delete</td></tr><tr><td>333@333.qq</td><td>SuperAdminRole</td><td>Reject</td></tr><tr><td>333@333.qq</td><td>SuperAdminRole</td><td>Update</td></tr></tbody></table><br><h3 id="2-5-3-新增权限查询方法"><a href="#2-5-3-新增权限查询方法" class="headerlink" title="2.5.3.新增权限查询方法"></a>2.5.3.新增权限查询方法</h3><p>在Authorization文件夹下建立PermissionManager类</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PermissionManager</span><br>&#123;<br>    ILogger&lt;PermissionManager&gt; _logger;<br>    ApplicationDbContext _context;<br>    UserManager&lt;ApplicationUser&gt; _userManager;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PermissionManager</span>(<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function">        ILogger&lt;PermissionManager&gt; logger,</span></span><br><span class="hljs-params"><span class="hljs-function">        ApplicationDbContext context,</span></span><br><span class="hljs-params"><span class="hljs-function">        UserManager&lt;ApplicationUser&gt; userManager</span>)</span><br>    &#123;<br>        _context = context;<br>        _userManager = userManager;<br>        _logger = logger;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IList&lt;<span class="hljs-built_in">string</span>&gt;&gt; GetAllPermissionByUserIdAsync(ApplicationUser user)<br>    &#123;<br>        <span class="hljs-keyword">try</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> roles = <span class="hljs-keyword">await</span> _userManager.GetRolesAsync(user);<br>            <span class="hljs-keyword">var</span> queryRoleId = _context.Set&lt;IdentityRole&gt;().Where(w =&gt; roles.Any(a =&gt; a == w.Name)).Select(s =&gt; s.Id);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> _context.Set&lt;MyPermission&gt;().Where(w =&gt; queryRoleId.Any(a =&gt; a == w.RoleId)).Select(s =&gt; s.Name).ToListAsync();<br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Exception ex)<br>        &#123;<br>            _logger.LogError(ex, ex.Message);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><h3 id="2-5-4-调整MyAuthorizationHandler权限校验逻辑"><a href="#2-5-4-调整MyAuthorizationHandler权限校验逻辑" class="headerlink" title="2.5.4.调整MyAuthorizationHandler权限校验逻辑"></a>2.5.4.调整MyAuthorizationHandler权限校验逻辑</h3><p>MyAuthorizationHandler类代码全部调整，改为调用PermissionManager</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MyAuthorizationHandler</span> : <span class="hljs-title">AuthorizationHandler</span>&lt;<span class="hljs-title">MyAuthorizeAttribute</span>&gt;<br>&#123;<br>    ILogger&lt;MyAuthorizationHandler&gt; _logger;<br>    UserManager&lt;ApplicationUser&gt; _userManager;<br>    PermissionManager _permissionManager;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyAuthorizationHandler</span>(<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function">        ILogger&lt;MyAuthorizationHandler&gt; logger,</span></span><br><span class="hljs-params"><span class="hljs-function">        UserManager&lt;ApplicationUser&gt; userManager,</span></span><br><span class="hljs-params"><span class="hljs-function">        PermissionManager permissionManager</span>)</span><br>    &#123;<br>        _logger = logger;<br>        _userManager = userManager;<br>        _permissionManager = permissionManager;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">HandleRequirementAsync</span>(<span class="hljs-params">AuthorizationHandlerContext context, MyAuthorizeAttribute requirement</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (context.User == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> user = <span class="hljs-keyword">await</span> _userManager.GetUserAsync(context.User);<br>        <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span>;<span class="hljs-comment">//用户没有登录需要登录</span><br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (requirement.Permissions.Length == <span class="hljs-number">0</span>)<br>        &#123;<br>            context.Succeed(requirement);<span class="hljs-comment">//当没有标记权限时，只要验证登录即可访问</span><br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> permissions = <span class="hljs-keyword">await</span> _permissionManager.GetAllPermissionByUserIdAsync(user);<br>        <span class="hljs-keyword">if</span> (permissions.Count == <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        _logger.LogInformation(<span class="hljs-string">$&quot;当前用户拥有的权限：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;|&quot;</span>, permissions)&#125;</span>&quot;</span>);<br><br>        <span class="hljs-keyword">var</span> isRequireAll = requirement.RequireAllPermissions;<br>        <span class="hljs-keyword">var</span> intersectList = requirement.Permissions.Intersect(permissions).ToList();<span class="hljs-comment">//接口要求的权限和用户拥有的权限交集</span><br>        <span class="hljs-keyword">if</span> (isRequireAll)<br>        &#123;<br>            <span class="hljs-comment">//要满足标记的全部权限才能通过</span><br>            <span class="hljs-keyword">if</span> (intersectList.Count == requirement.Permissions.Length)<br>            &#123;<br>                context.Succeed(requirement);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-comment">//只要满足至少一个权限即可通过</span><br>            <span class="hljs-keyword">if</span> (intersectList.Count &gt; <span class="hljs-number">0</span>)<br>            &#123;<br>                context.Succeed(requirement);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><h3 id="2-5-5-在Program中引入"><a href="#2-5-5-在Program中引入" class="headerlink" title="2.5.5.在Program中引入"></a>2.5.5.在Program中引入</h3><p>MyAuthorizationHandler的引入如果之前是使用AddSingleton方法的改为使用AddScoped</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#">builder.Services.AddScoped&lt;IAuthorizationHandler, MyAuthorizationHandler&gt;();<span class="hljs-comment">//有连接数据库相关方法注入改用AddScoped，不能用AddSingleton</span><br>builder.Services.AddTransient(<span class="hljs-keyword">typeof</span>(PermissionManager));<span class="hljs-comment">//引入权限管理类</span><br></code></pre></td></tr></table></figure></details><br><h3 id="2-5-6-增加测试方法"><a href="#2-5-6-增加测试方法" class="headerlink" title="2.5.6.增加测试方法"></a>2.5.6.增加测试方法</h3><p>在Home控制器下，新增TestReadV2方法，特性使用的是必须满足全部权限才能访问</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C#">[<span class="hljs-meta">MyAuthorize(true, Constants.OperationName.Create, Constants.OperationName.Update, Constants.OperationName.Approve)</span>]<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">TestReadV2</span>()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> Task.FromResult(Content(<span class="hljs-string">&quot;测试读取数据V2&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure></details><br><h3 id="2-5-7-前端视图加上访问请求"><a href="#2-5-7-前端视图加上访问请求" class="headerlink" title="2.5.7.前端视图加上访问请求"></a>2.5.7.前端视图加上访问请求</h3><p>Privacy.cshtml视图加上访问链接</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C#">&lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link text-dark&quot;</span> asp-area=<span class="hljs-string">&quot;&quot;</span> asp-controller=<span class="hljs-string">&quot;Home&quot;</span> asp-action=<span class="hljs-string">&quot;TestReadV2&quot;</span>&gt;Test Read V2&lt;/a&gt;<br></code></pre></td></tr></table></figure><p>完成以上项目整体结构如下图所示:<br><img src="/../img/StudyAspNetIdentity/img2_5_7.jpg" alt="项目结构" title="项目结构"></p><p>以上就完成了，标记特性的方法会根据当前登录的用户，查询数据库对应的权限，并校验是否有方法标记的权限，有就能访问，否则就无法访问</p><br><h2 id="2-6-实现视图的权限控制"><a href="#2-6-实现视图的权限控制" class="headerlink" title="2.6.实现视图的权限控制"></a>2.6.实现视图的权限控制</h2><h3 id="2-6-1-增加视图校验类"><a href="#2-6-1-增加视图校验类" class="headerlink" title="2.6.1.增加视图校验类"></a>2.6.1.增加视图校验类</h3><p>在Authorization文件夹下增加一个MyViewAuthorizationHandler类</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MyViewAuthorizationHandler</span> : <span class="hljs-title">AuthorizationHandler</span>&lt;<span class="hljs-title">OperationAuthorizationRequirement</span>, <span class="hljs-title">bool</span>&gt;<br>&#123;<br>    ILogger&lt;MyViewAuthorizationHandler&gt; _logger;<br>    UserManager&lt;ApplicationUser&gt; _userManager;<br>    PermissionManager _permissionManager;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyViewAuthorizationHandler</span>(<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function">        ILogger&lt;MyViewAuthorizationHandler&gt; logger,</span></span><br><span class="hljs-params"><span class="hljs-function">        UserManager&lt;ApplicationUser&gt; userManager,</span></span><br><span class="hljs-params"><span class="hljs-function">        PermissionManager permissionManager</span>)</span><br>    &#123;<br>        _logger = logger;<br>        _userManager = userManager;<br>        _permissionManager = permissionManager;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">HandleRequirementAsync</span>(<span class="hljs-params">AuthorizationHandlerContext context, OperationAuthorizationRequirement requirement, <span class="hljs-built_in">bool</span> isRequireAll</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (context.User == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> user = <span class="hljs-keyword">await</span> _userManager.GetUserAsync(context.User);<br>        <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span>;<span class="hljs-comment">//用户没有登录需要登录</span><br>        &#125;<br><br>        <span class="hljs-keyword">var</span> userPermissions = <span class="hljs-keyword">await</span> _permissionManager.GetAllPermissionByUserIdAsync(user);<br>        <span class="hljs-keyword">if</span> (userPermissions.Count == <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        _logger.LogInformation(<span class="hljs-string">$&quot;当前用户拥有的权限：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;|&quot;</span>, userPermissions)&#125;</span>&quot;</span>);<br><br>        <span class="hljs-keyword">var</span> requestPermissions = requirement.Name.Split(<span class="hljs-string">&#x27;,&#x27;</span>);<br>        <span class="hljs-keyword">var</span> intersectList = requestPermissions.Intersect(userPermissions).ToList();<span class="hljs-comment">//视图要求的权限和用户拥有的权限交集</span><br>        <span class="hljs-keyword">if</span> (isRequireAll)<br>        &#123;<br>            <span class="hljs-comment">//要满足标记的全部权限才能通过</span><br>            <span class="hljs-keyword">if</span> (intersectList.Count == requestPermissions.Length)<br>            &#123;<br>                context.Succeed(requirement);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-comment">//只要满足至少一个权限即可通过</span><br>            <span class="hljs-keyword">if</span> (intersectList.Count &gt; <span class="hljs-number">0</span>)<br>            &#123;<br>                context.Succeed(requirement);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><h3 id="2-6-2-调整Privacy视图"><a href="#2-6-2-调整Privacy视图" class="headerlink" title="2.6.2.调整Privacy视图"></a>2.6.2.调整Privacy视图</h3><p>对Privacy视图增加权限控制，满足权限的才显示对应的元素标签，Privacy.cshtml视图的代码调整如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs C#">@&#123;<br>    ViewData[<span class="hljs-string">&quot;Title&quot;</span>] = <span class="hljs-string">&quot;Privacy Policy&quot;</span>;<br>&#125;<br>@using Microsoft.AspNetCore.Authorization<br>@using Microsoft.AspNetCore.Authorization.Infrastructure<br>@using WebMvc1.Data<br>@inject IAuthorizationService AuthorizationService<br><br>&lt;h1&gt;@ViewData[<span class="hljs-string">&quot;Title&quot;</span>]&lt;/h1&gt;<br><br>&lt;p&gt;Use <span class="hljs-keyword">this</span> page to detail your site<span class="hljs-string">&#x27;s privacy policy.&lt;/p&gt;</span><br><span class="hljs-string"></span><br><span class="hljs-string">@if ((await AuthorizationService.AuthorizeAsync(User, false, new OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Create &#125;)).Succeeded)</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestCreate&quot;&gt;Test Create&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await AuthorizationService.AuthorizeAsync(User, false, new OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Update &#125;)).Succeeded)</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestUpdate&quot;&gt;Test Update&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await AuthorizationService.AuthorizeAsync(User, false, new OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Delete &#125;)).Succeeded)</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestDelete&quot;&gt;Test Delete&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await AuthorizationService.AuthorizeAsync(User, false, new OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Approve &#125;)).Succeeded)</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestApprove&quot;&gt;Test Approve&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await AuthorizationService.AuthorizeAsync(User, false, new OperationAuthorizationRequirement &#123; Name = Constants.OperationName.Reject &#125;)).Succeeded)</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestReject&quot;&gt;Test Reject&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await AuthorizationService.AuthorizeAsync(User, false, new OperationAuthorizationRequirement &#123; Name = $&quot;&#123;Constants.OperationName.Create&#125;,&#123;Constants.OperationName.Update&#125;,&#123;Constants.OperationName.Delete&#125;,&#123;Constants.OperationName.Approve&#125;,&#123;Constants.OperationName.Reject&#125;&quot; &#125;)).Succeeded)</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestRead&quot;&gt;Test Read&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await AuthorizationService.AuthorizeAsync(User, true, new OperationAuthorizationRequirement &#123; Name = $&quot;&#123;Constants.OperationName.Create&#125;,&#123;Constants.OperationName.Update&#125;,&#123;Constants.OperationName.Approve&#125;&quot; &#125;)).Succeeded)//resource传true，自定义表示要满足全部权限才能通过</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestReadV2&quot;&gt;Test Read V2&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure></details><br><h3 id="2-6-3-在Program中引入"><a href="#2-6-3-在Program中引入" class="headerlink" title="2.6.3.在Program中引入"></a>2.6.3.在Program中引入</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C#">builder.Services.AddScoped&lt;IAuthorizationHandler, MyViewAuthorizationHandler&gt;();<span class="hljs-comment">//引入视图授权校验</span><br></code></pre></td></tr></table></figure><p>完成以上三部启动项目即可查看到效果，三个账户都登录一次，验证一下是否只有对应权限才会显示对应的标签</p><ul><li>作为普通用户角色的<a href="mailto:&#x31;&#x31;&#49;&#64;&#x31;&#x31;&#x31;&#46;&#x71;&#x71;">&#x31;&#x31;&#49;&#64;&#x31;&#x31;&#x31;&#46;&#x71;&#x71;</a>用户看到的视图如下图所示：<br><img src="/../img/StudyAspNetIdentity/img2_6_3(1).jpg" alt="普通用户视图" title="普通用户视图"></li><li>作为管理员角色的<a href="mailto:&#x32;&#x32;&#x32;&#64;&#50;&#50;&#50;&#46;&#x71;&#x71;">&#x32;&#x32;&#x32;&#64;&#50;&#50;&#50;&#46;&#x71;&#x71;</a>用户看到的视图如下图所示：<br><img src="/../img/StudyAspNetIdentity/img2_6_3(2).jpg" alt="管理员视图" title="管理员视图"></li><li>作为超级管理员角色的<a href="mailto:&#x33;&#51;&#x33;&#x40;&#x33;&#x33;&#51;&#x2e;&#x71;&#113;">&#x33;&#51;&#x33;&#x40;&#x33;&#x33;&#51;&#x2e;&#x71;&#113;</a>用户看到的视图如下图所示：<br><img src="/../img/StudyAspNetIdentity/img2_6_3(3).jpg" alt="超级管理员视图" title="超级管理员视图"></li></ul><h3 id="2-6-4-代码优化"><a href="#2-6-4-代码优化" class="headerlink" title="2.6.4.代码优化"></a>2.6.4.代码优化</h3><p>在视图中调用的方法可见，其实和 <a href="#section2_3_2">2.3.2</a> 中控制器方法调用的校验完全一样，都是通过调用IAuthorizationService接口的AuthorizeAsync方法，触发MyViewAuthorizationHandler授权校验类的代码来进行控制。但是这样视图的写法过于复杂，而且会发现MyViewAuthorizationHandler类的写法和MyAuthorizationHandler的写法基本差不多，所以在此基础上可以再进一步封装，具体改造如下：</p><h4 id="2-6-4-1-优化第一步"><a href="#2-6-4-1-优化第一步" class="headerlink" title="2.6.4.1.优化第一步"></a>2.6.4.1.优化第一步</h4><p>重构MyAuthorizationHandler、MyViewAuthorizationHandler和PermissionManager三个类，相同的逻辑封装一个方法，具体代码调整如下：</p><p>（1）PermissionManager类代码调整如下，主要增加一个IsHasPermissionAsync方法：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PermissionManager</span><br>&#123;<br>    ILogger&lt;PermissionManager&gt; _logger;<br>    ApplicationDbContext _context;<br>    UserManager&lt;ApplicationUser&gt; _userManager;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PermissionManager</span>(<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function">        ILogger&lt;PermissionManager&gt; logger,</span></span><br><span class="hljs-params"><span class="hljs-function">        ApplicationDbContext context,</span></span><br><span class="hljs-params"><span class="hljs-function">        UserManager&lt;ApplicationUser&gt; userManager</span>)</span><br>    &#123;<br>        _context = context;<br>        _userManager = userManager;<br>        _logger = logger;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IList&lt;<span class="hljs-built_in">string</span>&gt;&gt; GetAllPermissionByUserIdAsync(ApplicationUser user)<br>    &#123;<br>        <span class="hljs-keyword">try</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> roles = <span class="hljs-keyword">await</span> _userManager.GetRolesAsync(user);<br>            <span class="hljs-keyword">var</span> queryRoleId = _context.Set&lt;IdentityRole&gt;().Where(w =&gt; roles.Any(a =&gt; a == w.Name)).Select(s =&gt; s.Id);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> _context.Set&lt;MyPermission&gt;().Where(w =&gt; queryRoleId.Any(a =&gt; a == w.RoleId)).Select(s =&gt; s.Name).ToListAsync();<br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Exception ex)<br>        &#123;<br>            _logger.LogError(ex, ex.Message);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">bool</span>&gt; <span class="hljs-title">IsHasPermissionAsync</span>(<span class="hljs-params">ClaimsPrincipal claimsPrincipal, <span class="hljs-built_in">string</span>[] requestPermissions, <span class="hljs-built_in">bool</span> isRequireAll</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (claimsPrincipal == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> user = <span class="hljs-keyword">await</span> _userManager.GetUserAsync(claimsPrincipal);<br>        <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<span class="hljs-comment">//用户没有登录需要登录</span><br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (requestPermissions.Length == <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<span class="hljs-comment">//当没有标记权限时，只要验证登录即可访问</span><br>        &#125;<br><br>        <span class="hljs-keyword">var</span> permissions = <span class="hljs-keyword">await</span> GetAllPermissionByUserIdAsync(user);<br>        <span class="hljs-keyword">if</span> (permissions.Count == <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br><br>        _logger.LogInformation(<span class="hljs-string">$&quot;当前用户拥有的权限：<span class="hljs-subst">&#123;<span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;|&quot;</span>, permissions)&#125;</span>&quot;</span>);<br><br>        <span class="hljs-keyword">var</span> intersectList = requestPermissions.Intersect(permissions).ToList();<span class="hljs-comment">//请求的权限和用户拥有的权限交集</span><br>        <span class="hljs-keyword">if</span> (isRequireAll)<br>        &#123;<br>            <span class="hljs-comment">//要满足标记的全部权限才能通过</span><br>            <span class="hljs-keyword">if</span> (intersectList.Count == requestPermissions.Length)<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-comment">//只要满足至少一个权限即可通过</span><br>            <span class="hljs-keyword">if</span> (intersectList.Count &gt; <span class="hljs-number">0</span>)<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>（2）MyAuthorizationHandler类代码调整如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MyAuthorizationHandler</span> : <span class="hljs-title">AuthorizationHandler</span>&lt;<span class="hljs-title">MyAuthorizeAttribute</span>&gt;<br>&#123;<br>    PermissionManager _permissionManager;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyAuthorizationHandler</span>(<span class="hljs-params">PermissionManager permissionManager</span>)</span><br>    &#123;<br>        _permissionManager = permissionManager;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">HandleRequirementAsync</span>(<span class="hljs-params">AuthorizationHandlerContext context, MyAuthorizeAttribute requirement</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> isHasPermission = <span class="hljs-keyword">await</span> _permissionManager.IsHasPermissionAsync(context.User, requirement.Permissions, requirement.RequireAllPermissions);<br>        <span class="hljs-keyword">if</span> (isHasPermission)<br>        &#123;<br>            context.Succeed(requirement);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>（3）MyViewAuthorizationHandler类代码调整如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MyViewAuthorizationHandler</span> : <span class="hljs-title">AuthorizationHandler</span>&lt;<span class="hljs-title">OperationAuthorizationRequirement</span>, <span class="hljs-title">bool</span>&gt;<br>&#123;<br>    PermissionManager _permissionManager;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyViewAuthorizationHandler</span>(<span class="hljs-params">PermissionManager permissionManager</span>)</span><br>    &#123;<br>        _permissionManager = permissionManager;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">HandleRequirementAsync</span>(<span class="hljs-params">AuthorizationHandlerContext context, OperationAuthorizationRequirement requirement, <span class="hljs-built_in">bool</span> isRequireAll</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> isHasPermission =  <span class="hljs-keyword">await</span> _permissionManager.IsHasPermissionAsync(context.User, requirement.Name.Split(<span class="hljs-string">&#x27;,&#x27;</span>), isRequireAll);<br>        <span class="hljs-keyword">if</span> (isHasPermission)<br>        &#123;<br>            context.Succeed(requirement);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><h4 id="2-6-4-2-优化第二步"><a href="#2-6-4-2-优化第二步" class="headerlink" title="2.6.4.2.优化第二步"></a>2.6.4.2.优化第二步</h4><p>封装一个给视图用的公共的权限校验方法，避免每次需要权限校验都要注入接口声明，每次调用授权方法传参的麻烦</p><p>在Views文件夹下新加类MyRazorPage</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">MyRazorPage</span>&lt;<span class="hljs-title">TModel</span>&gt; : <span class="hljs-title">RazorPage</span>&lt;<span class="hljs-title">TModel</span>&gt;<br>&#123;<br>    [<span class="hljs-meta">RazorInject</span>]<br>    <span class="hljs-keyword">public</span> IAuthorizationService AuthorizationService &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">bool</span>&gt; <span class="hljs-title">IsHasPermissionAsync</span>(<span class="hljs-params"><span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] permissions</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> isAuthorized = <span class="hljs-keyword">await</span> AuthorizationService.AuthorizeAsync(User, <span class="hljs-literal">false</span>, <span class="hljs-keyword">new</span> OperationAuthorizationRequirement &#123; Name = <span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, permissions) &#125;);<br>        <span class="hljs-keyword">return</span> isAuthorized.Succeeded;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">bool</span>&gt; <span class="hljs-title">IsHasPermissionAsync</span>(<span class="hljs-params"><span class="hljs-built_in">bool</span> isRequireAll, <span class="hljs-keyword">params</span> <span class="hljs-built_in">string</span>[] permissions</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> isAuthorized = <span class="hljs-keyword">await</span> AuthorizationService.AuthorizeAsync(User, isRequireAll, <span class="hljs-keyword">new</span> OperationAuthorizationRequirement &#123; Name = <span class="hljs-built_in">string</span>.Join(<span class="hljs-string">&quot;,&quot;</span>, permissions) &#125;);<br>        <span class="hljs-keyword">return</span> isAuthorized.Succeeded;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>视图_ViewImports.cshtml补充代码，增加对MyRazorPage类的引用</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C#">@using WebMvc1<br>@using WebMvc1.Models<br>@using WebMvc1.Views<span class="hljs-comment">//补充代码</span><br>@inherits MyRazorPage&lt;TModel&gt;<span class="hljs-comment">//补充代码</span><br>@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers<br></code></pre></td></tr></table></figure><p>调整视图Privacy.cshtml的代码如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs C#">@&#123;<br>    ViewData[<span class="hljs-string">&quot;Title&quot;</span>] = <span class="hljs-string">&quot;Privacy Policy&quot;</span>;<br>&#125;<br>@using WebMvc1.Data<br><br>&lt;h1&gt;@ViewData[<span class="hljs-string">&quot;Title&quot;</span>]&lt;/h1&gt;<br><br>&lt;p&gt;Use <span class="hljs-keyword">this</span> page to detail your site<span class="hljs-string">&#x27;s privacy policy.&lt;/p&gt;</span><br><span class="hljs-string"></span><br><span class="hljs-string">@if ((await IsHasPermissionAsync(Constants.OperationName.Create)))</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestCreate&quot;&gt;Test Create&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await IsHasPermissionAsync(Constants.OperationName.Update)))</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestUpdate&quot;&gt;Test Update&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await IsHasPermissionAsync(Constants.OperationName.Delete)))</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestDelete&quot;&gt;Test Delete&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await IsHasPermissionAsync(Constants.OperationName.Approve)))</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestApprove&quot;&gt;Test Approve&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await IsHasPermissionAsync(Constants.OperationName.Reject)))</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestReject&quot;&gt;Test Reject&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await IsHasPermissionAsync(Constants.OperationName.Create, Constants.OperationName.Update, Constants.OperationName.Delete, Constants.OperationName.Approve, Constants.OperationName.Reject)))</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestRead&quot;&gt;Test Read&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">@if ((await IsHasPermissionAsync(true, Constants.OperationName.Create, Constants.OperationName.Update, Constants.OperationName.Approve)))</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &lt;a class=&quot;nav-link text-dark&quot; asp-area=&quot;&quot; asp-controller=&quot;Home&quot; asp-action=&quot;TestReadV2&quot;&gt;Test Read V2&lt;/a&gt;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure></details><br><h4 id="2-6-4-3-优化第三步"><a href="#2-6-4-3-优化第三步" class="headerlink" title="2.6.4.3.优化第三步"></a>2.6.4.3.优化第三步</h4><p>使用缓存，减少数据库的查询次数，这里使用的是.NET自带的内存缓存来实现</p><p>（1）安装NuGet包：Microsoft.Extensions.Caching.Memory<br>（2）在Program中引入</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C#">builder.Services.AddMemoryCache();<span class="hljs-comment">//引入内存缓存</span><br></code></pre></td></tr></table></figure><p>（3）调整PermissionManager类的GetAllPermissionByUserIdAsync方法，如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs C#"><br>IMemoryCache _memoryCache;<span class="hljs-comment">//注入接口</span><br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">PermissionManager</span>(<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function">    ......</span></span><br><span class="hljs-params"><span class="hljs-function">    IMemoryCache memoryCache</span>)</span><br>&#123;<br>    ......<br>    _memoryCache = memoryCache;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;IList&lt;<span class="hljs-built_in">string</span>&gt;&gt; GetAllPermissionByUserIdAsync(ApplicationUser user)<br>&#123;<br>    <span class="hljs-keyword">try</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> list = _memoryCache.Get&lt;IList&lt;<span class="hljs-built_in">string</span>&gt;&gt;(<span class="hljs-string">$&quot;UserPermission:<span class="hljs-subst">&#123;user.Id&#125;</span>&quot;</span>);<br>        <span class="hljs-keyword">if</span> (list != <span class="hljs-literal">null</span> &amp;&amp; list.Count &gt; <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> list;<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> roles = <span class="hljs-keyword">await</span> _userManager.GetRolesAsync(user);<br>        <span class="hljs-keyword">var</span> queryRoleId = _context.Set&lt;IdentityRole&gt;().Where(w =&gt; roles.Any(a =&gt; a == w.Name)).Select(s =&gt; s.Id);<br>        list = <span class="hljs-keyword">await</span> _context.Set&lt;MyPermission&gt;().Where(w =&gt; queryRoleId.Any(a =&gt; a == w.RoleId)).Select(s =&gt; s.Name).ToListAsync();<br><br>        DateTime expireTime = DateTime.Now.AddMinutes(<span class="hljs-number">5</span>);<span class="hljs-comment">//设置缓存有效期</span><br>        _memoryCache.Set(<span class="hljs-string">$&quot;UserPermission:<span class="hljs-subst">&#123;user.Id&#125;</span>&quot;</span>, list, expireTime);<br>        <span class="hljs-comment">//_memoryCache.Remove($&quot;UserPermission:&#123;user.Id&#125;&quot;);//若以后开发了可以在前端配置用户角色和权限信息时，配置以后记得清除缓存</span><br><br>        <span class="hljs-keyword">return</span> list;<br>    &#125;<br>    <span class="hljs-keyword">catch</span> (Exception ex)<br>    &#123;<br>        _logger.LogError(ex, ex.Message);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>以上增加了内存缓存功能，当查询过一次之后，在有效期内再次查询时如果是同一个Key则直接返回结果，不需要再执行查询数据库的那段代码了，提供查询效率。</p><h4 id="2-6-4-4-优化第四步"><a href="#2-6-4-4-优化第四步" class="headerlink" title="2.6.4.4.优化第四步"></a>2.6.4.4.优化第四步</h4><p>关于注入声明，可以实现批量注入。按目前项目Program中声明的 PermissionManager 类，如果后续有更多类似的Manager类建立，每次都要在这里注入就非常的麻烦，而且Program会增加维护成本，后期可能会很难维护，为了避免这个问题可以采用反射的方式，统一获取这些需要注入的类或接口，然后遍历统一去做注入，实现方法如下：</p><p>（1）建立三个接口，首先在根目录建一个文件夹Dependency，然后文件夹下面建三个接口类，分别是：IScopeDependency、ISingletonDependency、ITransientDependency，建好三个接口即可，接口里面不需要写代码。<br>（2）建一个RegisterDependencyService类，用于拓展IServiceCollection，具体实现批量注入的地方。</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">RegisterDependencyService</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IServiceCollection <span class="hljs-title">AddDependencyService</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> IServiceCollection services</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//获取当前项目下继承于IScopeDependency、ISingletonDependency、ITransientDependency三个接口的所有实现类</span><br>        <span class="hljs-keyword">var</span> implementTypes = Directory.GetFiles(AppDomain.CurrentDomain.BaseDirectory, <span class="hljs-string">&quot;*.dll&quot;</span>)<br>            .Where(w =&gt; Regex.IsMatch(Path.GetFileName(w), <span class="hljs-string">$&quot;^<span class="hljs-subst">&#123;AppDomain.CurrentDomain.FriendlyName&#125;</span>.*&quot;</span>, RegexOptions.IgnoreCase | RegexOptions.Compiled))<br>            .Select(Assembly.LoadFrom)<br>            .SelectMany(a =&gt; a.DefinedTypes)<br>            .Select(type =&gt; type.AsType())<br>            .Where(x =&gt; x.IsClass)<br>            .Where(x =&gt; <span class="hljs-keyword">typeof</span>(IScopeDependency).IsAssignableFrom(x) || <span class="hljs-keyword">typeof</span>(ISingletonDependency).IsAssignableFrom(x) || <span class="hljs-keyword">typeof</span>(ITransientDependency).IsAssignableFrom(x))<br>            .ToList();<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> implementType <span class="hljs-keyword">in</span> implementTypes)<br>        &#123;<br>            <span class="hljs-comment">//获取该类型实现的接口数组</span><br>            <span class="hljs-keyword">var</span> interfaces = implementType.GetInterfaces();<br>            <span class="hljs-comment">//如果该类的接口类除了默认的IScopeDependency、ISingletonDependency、ITransientDependency以外还有继承其他接口，则按接口的方式来注入，否则只注入自己的实现</span><br>            <span class="hljs-keyword">var</span> interfaceType = interfaces.Where(w =&gt; w != <span class="hljs-keyword">typeof</span>(IScopeDependency) &amp;&amp; w != <span class="hljs-keyword">typeof</span>(ISingletonDependency) &amp;&amp; w != <span class="hljs-keyword">typeof</span>(ITransientDependency)).FirstOrDefault(x =&gt; x.IsAssignableFrom(implementType));<br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span>(IScopeDependency).IsAssignableFrom(implementType))<br>            &#123;<br>                <span class="hljs-keyword">if</span> (interfaceType != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    services.AddScoped(interfaceType, implementType);<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    services.AddScoped(implementType);<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span>(ISingletonDependency).IsAssignableFrom(implementType))<br>            &#123;<br>                <span class="hljs-keyword">if</span> (interfaceType != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    services.AddSingleton(interfaceType, implementType);<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    services.AddSingleton(implementType);<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span>(ITransientDependency).IsAssignableFrom(implementType))<br>            &#123;<br>                <span class="hljs-keyword">if</span> (interfaceType != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    services.AddTransient(interfaceType, implementType);<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    services.AddTransient(implementType);<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> services;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>（3）为实现类标记注入方式的接口</p><ul><li>a.给 PermissionManager 实现类加上继承 ITransientDependency 接口</li><li>b.给 MyAuthorizationHandler 实现类加上继承 IScopeDependency 接口</li><li>c.给 MyViewAuthorizationHandler 实现类也加上继承 IScopeDependency 接口</li></ul><p>（4）在Program中调用AddDependencyService方法，然后可以注释掉原来的相关的注入语句</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//builder.Services.AddScoped&lt;IAuthorizationHandler, MyViewAuthorizationHandler&gt;();//引入视图授权校验</span><br><span class="hljs-comment">//builder.Services.AddScoped&lt;IAuthorizationHandler, MyAuthorizationHandler&gt;();//有连接数据库相关方法注入改用AddScoped，不能用AddSingleton</span><br><span class="hljs-comment">//builder.Services.AddTransient(typeof(PermissionManager));//引入权限管理类</span><br>builder.Services.AddDependencyService();<br></code></pre></td></tr></table></figure><p>以上便实现了批量自动注入，以后要是需要注入时，直接继承三个类型的其中一个接口，实现类需要按哪种依赖生命周期就继承哪个接口即可。（后续可以给 PermissionManager 再加个接口类 IPermissionManager ，然后把原来的 ITransientDependency 给 IPermissionManager 继承， PermissionManager 再继承 IPermissionManager，这样更符号按接口方式实现的标准）</p><div class="note note-secondary">            <p>关于AddTransient、AddSingleton、AddScoped的区别<br>AddTransient： 每次service请求都是获得不同的实例，暂时性模式：暂时性对象始终不同，无论是不是同一个请求（同一个请求里的不同服务）同一个客户端，每次都是创建新的实例；<br>AddScoped： 对于同一个请求返回同一个实例，不同的请求返回不同的实例，作用域模式：作用域对象在一个客户端请求中是相同的，但在多个客户端请求中是不同的；<br>AddSingleton： 每次都是获得同一个实例， 单一实例模式：单一实例对象对每个对象和每个请求都是相同的，可以说是不同客户端不同请求都是相同的；</p><p>AddTransient的生命周期：请求获取-（GC回收-主动释放），每一次获取的对象都不是同一个<br>AddScoped的生命周期：请求开始-请求结束，在这次请求中获取的对象都是同一个<br>AddSingleton的生命周期：项目启动-项目关闭，相当于静态类，只会有一个<br>–参考 <a href="https://www.cnblogs.com/AnAng/p/9370913.html">https://www.cnblogs.com/AnAng/p/9370913.html</a></p>          </div><h2 id="2-7-实现前端js的权限控制"><a href="#2-7-实现前端js的权限控制" class="headerlink" title="2.7.实现前端js的权限控制"></a>2.7.实现前端js的权限控制</h2><h3 id="2-7-1-搭建后端接口"><a href="#2-7-1-搭建后端接口" class="headerlink" title="2.7.1.搭建后端接口"></a>2.7.1.搭建后端接口</h3><p>在控制器文件夹下，新建一个控制器JavaScriptsController类，代码如下：</p><details><summary>Show Code</summary><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">JavaScriptsController</span> : <span class="hljs-title">Controller</span><br>&#123;<br>    ILogger&lt;JavaScriptsController&gt; _logger;<br>    PermissionManager _permissionManager;<br>    UserManager&lt;ApplicationUser&gt; _userManager;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">JavaScriptsController</span>(<span class="hljs-params"></span></span><br><span class="hljs-params"><span class="hljs-function">        ILogger&lt;JavaScriptsController&gt; logger,</span></span><br><span class="hljs-params"><span class="hljs-function">        PermissionManager permissionManager,</span></span><br><span class="hljs-params"><span class="hljs-function">        UserManager&lt;ApplicationUser&gt; userManager</span>)</span><br>    &#123;<br>        _logger = logger;<br>        _permissionManager = permissionManager;<br>        _userManager = userManager;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;ActionResult&gt; <span class="hljs-title">GetAllScripts</span>(<span class="hljs-params"><span class="hljs-built_in">bool</span> minify = <span class="hljs-literal">false</span></span>)</span><br>    &#123;<br>        ApplicationUser? user = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span> (User != <span class="hljs-literal">null</span>)<br>        &#123;<br>            user = <span class="hljs-keyword">await</span> _userManager.GetUserAsync(User);<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> sb = <span class="hljs-keyword">new</span> StringBuilder();<br><br>        sb.AppendLine(<span class="hljs-keyword">await</span> GetPermissionScripts(user));<span class="hljs-comment">//获取用户所有权限</span><br>        sb.AppendLine();<br>        sb.AppendLine(GetConstantOperationNameScripts());<span class="hljs-comment">//获取常量字符串</span><br>        sb.AppendLine();<br>        sb.AppendLine(GetUserInfoAsync(user));<span class="hljs-comment">//获取用户信息</span><br>        sb.AppendLine();<br><br>        <span class="hljs-keyword">return</span> Content(minify ? Minify(sb.ToString()) : sb.ToString(), <span class="hljs-string">&quot;application/x-javascript&quot;</span>, Encoding.UTF8);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">GetPermissionScripts</span>(<span class="hljs-params">ApplicationUser? user</span>)</span><br>    &#123;<br>        IList&lt;<span class="hljs-built_in">string</span>&gt; allPermissionNames;<br>        <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)<br>        &#123;<br>            allPermissionNames = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<span class="hljs-comment">//用户没有登录需要登录</span><br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            allPermissionNames = <span class="hljs-keyword">await</span> _permissionManager.GetAllPermissionByUserIdAsync(user);<br>        &#125;<br>        <br>        <span class="hljs-keyword">var</span> script = <span class="hljs-keyword">new</span> StringBuilder();<br>        script.AppendLine(<span class="hljs-string">&quot;(function()&#123;&quot;</span>);<br>        script.AppendLine(<span class="hljs-string">&quot;  webmvc1.permission = webmvc1.permission || &#123;&#125;;&quot;</span>);<span class="hljs-comment">//给全局webmvc1参数绑定permission对象</span><br>        script.AppendLine(<span class="hljs-string">&quot;    webmvc1.permission.values = &#123;&quot;</span>);<span class="hljs-comment">//给webmvc1.permission对象绑定values对象</span><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> permissionName <span class="hljs-keyword">in</span> allPermissionNames)<br>        &#123;<br>            script.AppendLine(<span class="hljs-string">$&quot;      &#x27;<span class="hljs-subst">&#123;permissionName&#125;</span>&#x27;: true,&quot;</span>);<br>        &#125;<br>        script.AppendLine(<span class="hljs-string">&quot;    &#125;;&quot;</span>);<br>        script.AppendLine(<span class="hljs-string">&quot;    webmvc1.permission.isGranted = function (permissionName) &#123; return webmvc1.permission.values[permissionName] != undefined; &#125;;&quot;</span>);<br>        script.Append(<span class="hljs-string">&quot;&#125;)();&quot;</span>);<br><br>        <span class="hljs-keyword">return</span> script.ToString();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">virtual</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetConstantOperationNameScripts</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> script = <span class="hljs-keyword">new</span> StringBuilder();<br>        script.AppendLine(<span class="hljs-string">&quot;(function()&#123;&quot;</span>);<br>        script.AppendLine(<span class="hljs-string">&quot;  webmvc1.constant = webmvc1.constant || &#123;&#125;;&quot;</span>);<span class="hljs-comment">//给全局webmvc1参数绑定constant对象</span><br>        script.AppendLine(<span class="hljs-string">&quot;  webmvc1.constant.operationName = webmvc1.constant.operationName || &#123;&#125;;&quot;</span>);<span class="hljs-comment">//给webmvc1.constant对象绑定operationName对象</span><br>        <span class="hljs-keyword">var</span> type = <span class="hljs-keyword">typeof</span>(Constants.OperationName);<br>        <span class="hljs-keyword">var</span> fields = type.GetFields();<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> field <span class="hljs-keyword">in</span> fields)<br>        &#123;<br>            script.AppendLine(<span class="hljs-string">$&quot;    webmvc1.constant.operationName.<span class="hljs-subst">&#123;field.Name.ToLower()&#125;</span> = &#x27;<span class="hljs-subst">&#123;field.GetRawConstantValue()&#125;</span>&#x27;;&quot;</span>);<br>        &#125;<br>        script.Append(<span class="hljs-string">&quot;&#125;)();&quot;</span>);<br><br>        <span class="hljs-keyword">return</span> script.ToString();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">virtual</span> <span class="hljs-built_in">string</span> <span class="hljs-title">GetUserInfoAsync</span>(<span class="hljs-params">ApplicationUser? user</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (user == <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> script = <span class="hljs-keyword">new</span> StringBuilder();<br>        script.AppendLine(<span class="hljs-string">&quot;(function()&#123;&quot;</span>);<br>        script.AppendLine(<span class="hljs-string">&quot;  webmvc1.userInfo = webmvc1.userInfo || &#123;&#125;;&quot;</span>);<span class="hljs-comment">//给全局webmvc1参数绑定userInfo对象</span><br>        script.AppendLine(<span class="hljs-string">$&quot;  webmvc1.userInfo.id = &#x27;<span class="hljs-subst">&#123;user.Id&#125;</span>&#x27;;&quot;</span>);<br>        script.AppendLine(<span class="hljs-string">$&quot;  webmvc1.userInfo.userName = &#x27;<span class="hljs-subst">&#123;user.UserName&#125;</span>&#x27;;&quot;</span>);<br>        script.AppendLine(<span class="hljs-string">$&quot;  webmvc1.userInfo.name = &#x27;<span class="hljs-subst">&#123;user.Name&#125;</span>&#x27;;&quot;</span>);<br>        script.AppendLine(<span class="hljs-string">$&quot;  webmvc1.userInfo.customTag = &#x27;<span class="hljs-subst">&#123;user.CustomTag&#125;</span>&#x27;;&quot;</span>);<br>        script.Append(<span class="hljs-string">&quot;&#125;)();&quot;</span>);<br><br>        <span class="hljs-keyword">return</span> script.ToString();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Minify</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> javaScriptCode</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrWhiteSpace(javaScriptCode))<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> result = Uglify.Js(javaScriptCode);<br>        <span class="hljs-keyword">if</span> (!result.HasErrors)<br>        &#123;<br>            <span class="hljs-keyword">return</span> result.Code;<br>        &#125;<br><br>        _logger.LogWarning(<span class="hljs-string">$&quot;Minify has encountered an error in handling javascript.&quot;</span>);<br>        result.Errors.ForEach(error =&gt; _logger.LogWarning(error.ToString()));<br><br>        <span class="hljs-keyword">return</span> javaScriptCode;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><br><p>以上代码需要额外安装一个NuGet包：NUglify，支持js压缩</p><h3 id="2-7-2-前端引入"><a href="#2-7-2-前端引入" class="headerlink" title="2.7.2.前端引入"></a>2.7.2.前端引入</h3><p>（1）_Layout.cshtml文件引入js，在视图的底部引入，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#">@* 引入后端生成的权限校验方法 minify=<span class="hljs-literal">true</span>表示生成压缩版本的js*@<br>&lt;script src=<span class="hljs-string">&quot;~/JavaScripts/GetAllScripts?minify=true&amp;v=@(DateTime.Now.Ticks)&quot;</span> type=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>（2）在site.js（wwwroot&#x2F;js&#x2F;site.js）中声明一个全局公共参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> webmvc1 = webmvc1 || &#123;&#125;;<span class="hljs-comment">//声明一个全局参数</span><br></code></pre></td></tr></table></figure><p>（3）在js文件夹下，建立一个Home文件夹，在Home文件夹下再建立一个privacy.js文件，同时在Privacy.cshtml视图引入privacy.js文件，在Privacy.cshtml视图底部补充以下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs C#">@section scripts &#123;<br>    &lt;script src=<span class="hljs-string">&quot;~/js/Home/privacy.js&quot;</span> asp-append-version=<span class="hljs-string">&quot;true&quot;</span>&gt;&lt;/script&gt;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-7-3-测试结果"><a href="#2-7-3-测试结果" class="headerlink" title="2.7.3.测试结果"></a>2.7.3.测试结果</h3><p>以上完成了js判断权限的功能搭建，可以启动项目，并在上一步增加的privacy.js文件中，补充下列测试代码：</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js">(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">//测试</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;UserName&quot;</span>, webmvc1.<span class="hljs-property">userInfo</span>.<span class="hljs-property">userName</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">create</span>, webmvc1.<span class="hljs-property">permission</span>.<span class="hljs-title function_">isGranted</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">create</span>));<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">update</span>, webmvc1.<span class="hljs-property">permission</span>.<span class="hljs-title function_">isGranted</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">update</span>));<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">delete</span>, webmvc1.<span class="hljs-property">permission</span>.<span class="hljs-title function_">isGranted</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">delete</span>));<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">approve</span>, webmvc1.<span class="hljs-property">permission</span>.<span class="hljs-title function_">isGranted</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">approve</span>));<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">reject</span>, webmvc1.<span class="hljs-property">permission</span>.<span class="hljs-title function_">isGranted</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">reject</span>));<br><br>    <span class="hljs-keyword">if</span> (webmvc1.<span class="hljs-property">permission</span>.<span class="hljs-title function_">isGranted</span>(webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">create</span>)) &#123;<br>        <span class="hljs-comment">//TODO...</span><br>    &#125;<br>&#125;)();<br></code></pre></td></tr></table></figure></details><br><p>启动后，登录用户并访问Privacy视图，打开浏览器控制台（一般浏览器使用快捷键F12即可打开），可以看到输出的对应用户的权限，如下图所示：<br><img src="/../img/StudyAspNetIdentity/img2_7_3(1).jpg" alt="js权限控制" title="js权限控制"></p><p>本质上就是后端构造一个js文件，里面生成好权限、常量、用户信息相关的数据和方法，代码如下所示：</p><details><summary>Show Code</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js">(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  webmvc1.<span class="hljs-property">permission</span> = webmvc1.<span class="hljs-property">permission</span> || &#123;&#125;;<br>    webmvc1.<span class="hljs-property">permission</span>.<span class="hljs-property">values</span> = &#123;<br>      <span class="hljs-string">&#x27;Approve&#x27;</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-string">&#x27;Reject&#x27;</span>: <span class="hljs-literal">true</span>,<br>    &#125;;<br>    webmvc1.<span class="hljs-property">permission</span>.<span class="hljs-property">isGranted</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">permissionName</span>) &#123; <span class="hljs-keyword">return</span> webmvc1.<span class="hljs-property">permission</span>.<span class="hljs-property">values</span>[permissionName] != <span class="hljs-literal">undefined</span>; &#125;;<br>&#125;)();<br><br>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  webmvc1.<span class="hljs-property">constant</span> = webmvc1.<span class="hljs-property">constant</span> || &#123;&#125;;<br>  webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span> = webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span> || &#123;&#125;;<br>    webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">create</span> = <span class="hljs-string">&#x27;Create&#x27;</span>;<br>    webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">update</span> = <span class="hljs-string">&#x27;Update&#x27;</span>;<br>    webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">delete</span> = <span class="hljs-string">&#x27;Delete&#x27;</span>;<br>    webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">approve</span> = <span class="hljs-string">&#x27;Approve&#x27;</span>;<br>    webmvc1.<span class="hljs-property">constant</span>.<span class="hljs-property">operationName</span>.<span class="hljs-property">reject</span> = <span class="hljs-string">&#x27;Reject&#x27;</span>;<br>&#125;)();<br><br>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  webmvc1.<span class="hljs-property">userInfo</span> = webmvc1.<span class="hljs-property">userInfo</span> || &#123;&#125;;<br>  webmvc1.<span class="hljs-property">userInfo</span>.<span class="hljs-property">id</span> = <span class="hljs-string">&#x27;8b53f7e4-26b5-4171-8414-37053005d2fa&#x27;</span>;<br>  webmvc1.<span class="hljs-property">userInfo</span>.<span class="hljs-property">userName</span> = <span class="hljs-string">&#x27;222@222.qq&#x27;</span>;<br>  webmvc1.<span class="hljs-property">userInfo</span>.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;Test2&#x27;</span>;<br>  webmvc1.<span class="hljs-property">userInfo</span>.<span class="hljs-property">customTag</span> = <span class="hljs-string">&#x27;测试2&#x27;</span>;<br>&#125;)();<br></code></pre></td></tr></table></figure></details><br><p>最终项目整体结构如下图所示:<br><img src="/../img/StudyAspNetIdentity/img2_7_3(2).jpg" alt="项目结构" title="项目结构"></p><br><h1 id="demo链接"><a href="#demo链接" class="headerlink" title="demo链接"></a>demo链接</h1><p>Github代码-MyUserManagerProject <a href="https://github.com/YuMan-LJP/demo">https://github.com/YuMan-LJP/demo</a></p><br><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>微软学习文档-验证 <a href="https://learn.microsoft.com/zh-cn/aspnet/core/security/authentication">https://learn.microsoft.com/zh-cn/aspnet/core/security/authentication</a><br>微软学习文档-授权 <a href="https://learn.microsoft.com/zh-cn/aspnet/core/security/authorization">https://learn.microsoft.com/zh-cn/aspnet/core/security/authorization</a><br>AddTransient、AddSingleton、AddScoped的区别 <a href="https://www.cnblogs.com/AnAng/p/9370913.html">https://www.cnblogs.com/AnAng/p/9370913.html</a></p>]]></content>
    
    
    <categories>
      
      <category>ASP.NET相关技术学习总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ASP.NET Identity</tag>
      
      <tag>认证</tag>
      
      <tag>授权</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用脚本命令汇总</title>
    <link href="/2023/12/23/Common-Script-Commands/"/>
    <url>/2023/12/23/Common-Script-Commands/</url>
    
    <content type="html"><![CDATA[<h1 id="常用脚本命令汇总"><a href="#常用脚本命令汇总" class="headerlink" title="常用脚本命令汇总"></a>常用脚本命令汇总</h1><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init   <span class="hljs-comment"># 初始化</span><br>git add README.md  <span class="hljs-comment"># 添加一个README文件进版本控制，先要在本地建这样一个文件</span><br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span>  <span class="hljs-comment"># 提交到本地仓库</span><br>git branch -M main <span class="hljs-comment">#  创建一个main的分支</span><br>git remote add origin &lt;源码仓库地址&gt; <span class="hljs-comment"># 添加一个新的远程仓库。指定一个远程仓库的名称和 URL，将其添加到当前仓库中。</span><br>git push -u origin main <span class="hljs-comment">#将本地的分支版本上传到远程并合并</span><br></code></pre></td></tr></table></figure><h3 id="Github上传出错解决方案"><a href="#Github上传出错解决方案" class="headerlink" title="Github上传出错解决方案"></a>Github上传出错解决方案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global http.proxy http://127.0.0.1:7890<br>git config --global https.proxy http://127.0.0.1:7890<br>git config --global --edit<br><br>git config --global http.sslVerify <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># 或者关闭代理</span><br>git config --global --<span class="hljs-built_in">unset</span> http.proxy<br>git config --global --<span class="hljs-built_in">unset</span> https.proxy<br></code></pre></td></tr></table></figure><p>\</p><hr><p>&#x2F;</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;My First Project&quot;</span><br>hexo clean <span class="hljs-comment"># 清理缓存</span><br>hexo g <span class="hljs-comment"># 生成</span><br>hexo s <span class="hljs-comment"># 调试 localhost:4000</span><br>hexo d <span class="hljs-comment"># 上传</span><br></code></pre></td></tr></table></figure><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><p>引用图片方法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![<span class="hljs-string">图片</span>](<span class="hljs-link">../图片路径 &quot;图片标题&quot;</span>)<br></code></pre></td></tr></table></figure><p>博客内跳转：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">创建锚点：<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;section1&quot;</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br>创建链接：[<span class="hljs-string">显示文本</span>](<span class="hljs-link">#section1</span>)<br></code></pre></td></tr></table></figure><p>代码折叠：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">details</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">summary</span>&gt;</span></span>Show Code<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">summary</span>&gt;</span></span><br><br>...展示代码<br><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">details</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>\</p><hr><p>&#x2F;</p><h2 id="EF"><a href="#EF" class="headerlink" title="EF"></a>EF</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Add</span>-Migration xxxxxx<br><span class="hljs-keyword">Update</span>-<span class="hljs-keyword">Database</span><br>Script-Migration -<span class="hljs-keyword">From</span> xxxx -<span class="hljs-keyword">To</span> xxxx<br></code></pre></td></tr></table></figure><p>\</p><hr><p>&#x2F;</p><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> IDENTITY_INSERT products <span class="hljs-keyword">on</span> <span class="hljs-operator">/</span><span class="hljs-operator">/</span>设置为允许手动插入值<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> users (id,username) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;yuman&#x27;</span>) <span class="hljs-operator">/</span><span class="hljs-operator">/</span> OK<br><span class="hljs-keyword">set</span> IDENTITY_INSERT products off <span class="hljs-operator">/</span><span class="hljs-operator">/</span>设置为禁止手动插入值<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>汇总</category>
      
    </categories>
    
    
    <tags>
      
      <tag>脚本</tag>
      
      <tag>命令</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【1】记录搭建博客流程</title>
    <link href="/2023/12/20/First-Blog/"/>
    <url>/2023/12/20/First-Blog/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>记录从零开始搭建博客，学习使用Hexo + Github Pages搭建自己的博客网站</p>          </div><h2 id="1-前提准备"><a href="#1-前提准备" class="headerlink" title="1.前提准备"></a>1.前提准备</h2><h3 id="1-1-安装好以下环境"><a href="#1-1-安装好以下环境" class="headerlink" title="1.1.安装好以下环境"></a>1.1.安装好以下环境</h3><ol><li>git  </li><li>npm  </li><li>Node.js</li></ol><p>到官网下载相应安装包按提示安装即可，尽量都安装最新的版本，避免版本冲突，安装好git后鼠标右键会出现“Open Git Bash here”，在此验证一下，可以查看到当前版本号即表示安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br>npm -v<br>git --version<br></code></pre></td></tr></table></figure><h3 id="1-2-注册Github账户"><a href="#1-2-注册Github账户" class="headerlink" title="1.2.注册Github账户"></a>1.2.注册Github账户</h3><p>1.2.1.访问Github官网（ <a href="https://github.com/">https://github.com/</a> ）按提示注册一个Github账户（国内访问可能需要加速器）</p><p>1.2.2.创建一个仓库，仓库名称就以用户名来命名，例如：用户名.github.com，以用户名来命名仓库时，Github会自动作为Guthub Pages仓库（ <em><strong>Github Pages必须要以用户名来命名，如果命名为其他名称，可在仓库的[Settings] - [General] 进行重命名</strong></em> ）</p><p>1.2.3.再创建一个仓库用来存放源代码，建立时设为Private（私密的，不开放权限外人不可见）， <em><strong>如果你不希望源代码存放到Github上则不需要进行此步骤！</strong></em> </p><p>目前建立了两个仓库，一个仓库是作为博客网站，即Github Pages仓库，另一个仓库是博客的源代码仓库，到时候源代码仓库会编译网站文件上传到Github Pages仓库提供部署，Github Pages仓库从建立起都不需要管理线上仓库的文件，统一由源码仓库编译后上传。</p><p> <em><strong>注意：如果你不希望上传源码到Github，后续源码与Github相关的联动操作都可以省略！下文要省略的步骤会提示！</strong></em> </p><h2 id="2-配置相关环境"><a href="#2-配置相关环境" class="headerlink" title="2.配置相关环境"></a>2.配置相关环境</h2><h3 id="2-1-配置Git环境"><a href="#2-1-配置Git环境" class="headerlink" title="2.1.配置Git环境"></a>2.1.配置Git环境</h3><p>配置用户名和邮箱 <strong>&lt;用户名&gt;</strong> 和 <strong>&lt;邮箱&gt;</strong> 改为自己的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;GitHub &lt;用户名&gt;&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;GitHub &lt;邮箱&gt;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="2-2-配置Hexo"><a href="#2-2-配置Hexo" class="headerlink" title="2.2.配置Hexo"></a>2.2.配置Hexo</h3><p>选定一个本地路径，建立本地源码仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br>hexo -v        <span class="hljs-comment">#查看是否安装成功</span><br>hexo init      <span class="hljs-comment">#初始化，选择一个路径作为代码存放，到时候会上传到Github仓库，注意这个文件夹必须是空的，没有任何文件</span><br>npm install    <span class="hljs-comment">#自动安装相关组件</span><br>hexo g         <span class="hljs-comment">#生成页面</span><br>hexo s         <span class="hljs-comment">#启动预览，默认是localhost:4000</span><br></code></pre></td></tr></table></figure><p>如果异常可能是Node.js和git版本不兼容，尽量升级到最新，又或者是网络问题，可以采用cnpm或npx，尝试先安装cnpm（又或者开加速器），cnpm代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g cnpm -registry=https://registry.npm.taobao.org<br>cnpm -v                     <span class="hljs-comment">#查看是否安装成功</span><br>cnpm install -g hexo-cli    <span class="hljs-comment">#安装hexo</span><br>hexo -v                     <span class="hljs-comment">#查看是否安装成功</span><br></code></pre></td></tr></table></figure><h3 id="2-3-配置git版本控制，推送远程仓库"><a href="#2-3-配置git版本控制，推送远程仓库" class="headerlink" title="2.3.配置git版本控制，推送远程仓库"></a>2.3.配置git版本控制，推送远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init   <span class="hljs-comment"># 初始化</span><br>git add README.md  <span class="hljs-comment"># 添加一个README文件进版本控制，先要在本地建这样一个文件</span><br>git add &lt;文件名&gt; <span class="hljs-comment"># 将其他一些必要文件也加入git，使用TortoiseGit操作更方便</span><br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span>  <span class="hljs-comment"># 提交到本地仓库</span><br>git branch -M main <span class="hljs-comment">#  创建一个main的分支</span><br>git remote add origin &lt;源码仓库地址&gt; <span class="hljs-comment"># 添加一个新的远程仓库。指定一个远程仓库的名称和 URL，将其添加到当前仓库中。</span><br>git push -u origin main <span class="hljs-comment">#将本地的分支版本上传到远程并合并</span><br></code></pre></td></tr></table></figure><p> <em><strong>注意：如果步骤1.2.3你没建立源码仓库，你不希望源码上传到Github，上述代码的最后两句不需要执行！</strong></em></p><p>可以下载一个TortoiseGit软件辅助操作，加入版本控制，鼠标托选文件后右键 <strong>[TortoiseGit] - [Add]</strong> 即可添加成功，就不需要一行一行代码敲了</p><p>加入版本后的效果如下图所示：<br><img src="/../img/First-Blog/img1.jpg" alt="加入版本控制" title="加入版本控制"></p><p>推送到Github上成功的效果如下图所示（ <em><strong>没建立源码仓库不需要管</strong></em> ）：<br><img src="/../img/First-Blog/img2.jpg" alt="推送成功" title="推送成功"></p><h2 id="3-手动编译Hexo并部署到Github-Pages"><a href="#3-手动编译Hexo并部署到Github-Pages" class="headerlink" title="3.手动编译Hexo并部署到Github Pages"></a>3.手动编译Hexo并部署到Github Pages</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save（先安装）<br></code></pre></td></tr></table></figure><p>以下有两种方式上传，一种是配置ssh公钥，一种是token，更推荐token操作更方便</p><h3 id="3-1-配置公钥的方式上传部署"><a href="#3-1-配置公钥的方式上传部署" class="headerlink" title="3.1.配置公钥的方式上传部署"></a>3.1.配置公钥的方式上传部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;GitHub &lt;邮箱&gt;&quot;</span>  <span class="hljs-comment">#一直回车直到结束会生成密钥</span><br></code></pre></td></tr></table></figure><p><img src="/../img/First-Blog/img3.jpg" alt="配置公钥" title="配置公钥"><br>密钥在C:\Users\用户名.ssh路径下，有两个文件（id_rsa是私钥，id_rsa.pub是公钥），先配置公钥，到 <strong>Github用户头像的 - [Settings] - [SSH and GPG keys] - [New SSH key]</strong> ，将公钥配置进来，配置完之后，cmd执行<code>ssh -T git@github.com</code>提示语看到successfully表示配置成功</p><p>修改_config.yml最底下代码，改为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:&lt;用户名&gt;/&lt;用户名&gt;.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>注意上述代码中的repository指定的地址从博客仓库中获取，如下图所示：<br><img src="/../img/First-Blog/img7.jpg" alt="获取git地址" title="获取git地址"></p><h3 id="3-2-配置token的方式上传部署（更推荐）"><a href="#3-2-配置token的方式上传部署（更推荐）" class="headerlink" title="3.2.配置token的方式上传部署（更推荐）"></a>3.2.配置token的方式上传部署（更推荐）</h3><p><img src="/../img/First-Blog/img4.jpg" alt="生成token" title="生成token"><br>到Github上生成token，<strong>Github用户头像 - [Settings] - [Developer settings] - [Personal access tokens] - [Tokens] &#x3D; [Generate a personal access token]</strong> （ <em><strong>一定要记下填写的Note和生成的token，只能此刻见到这一次后续就不能再查到了！</strong></em> ）<br> <em><strong>注意配置token权限时一定要勾上“repo”，“workflow”，其余随意</strong></em> </p><p>修改_config.yml最底下代码，改为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">https://&lt;你的token&gt;@github.com/&lt;用户名&gt;/&lt;用户名&gt;.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>注意上述代码中的repository指定的地址从博客仓库中获取，如下图所示，并在 https:&#x2F;&#x2F; 之后加上你的token和@符号：<br><img src="/../img/First-Blog/img8.jpg" alt="获取https地址" title="获取https地址"></p><p>完成以上3.1或3.2后，可以执行<code>hexo d</code>上传，如果之前没有执行生成先执行<code>hexo g</code>，上传后稍等一会，Github会自动部署到“用户名.github.com”，然后直接访问“https:&#x2F;&#x2F;用户名.github.com”即可看到效果</p><h2 id="4-实现自动编译部署"><a href="#4-实现自动编译部署" class="headerlink" title="4.实现自动编译部署"></a>4.实现自动编译部署</h2><p>特别注意，第4步的前提条件是第3步能够成功上传部署，第3步使用哪种方式上传部署，这里第4步就必须延用之前的方式，如第3步是用密钥的方式，第4步做自动部署就也必须用密钥的方式，如果第4步想改为token的方式，那就必须按第3步再配置一遍token才能继续配第4步！（ <em><strong>没建立源码仓库的自动部署就不能实现！</strong></em> ）</p><h3 id="4-1-使用密钥的方式自动部署"><a href="#4-1-使用密钥的方式自动部署" class="headerlink" title="4.1.使用密钥的方式自动部署"></a>4.1.使用密钥的方式自动部署</h3><h4 id="4-1-1-配置私钥"><a href="#4-1-1-配置私钥" class="headerlink" title="4.1.1.配置私钥"></a>4.1.1.配置私钥</h4><p><img src="/../img/First-Blog/img5.jpg" alt="配置私钥" title="配置私钥"><br> <strong>源码仓库 - [Settings] - [Secrets and variables] - [Actions] - [New repository secret]</strong> ，填写私钥名称和Git生成的私钥，名称一定要记下来，后续用到</p><h4 id="4-1-2-配置自动部署脚本"><a href="#4-1-2-配置自动部署脚本" class="headerlink" title="4.1.2.配置自动部署脚本"></a>4.1.2.配置自动部署脚本</h4><p>本地源码仓库根目录建立路径.github&#x2F;workflows&#x2F;，一定要在这个路径下，这个路径下再建一个.yml后缀的文件，命名随意<br>文件内容如下：</p><details><summary>Show Code</summary><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br><br><span class="hljs-attr">on:</span> [<span class="hljs-string">push</span>]<br><br><span class="hljs-attr">permissions:</span><br>  <span class="hljs-attr">contents:</span> <span class="hljs-string">write</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v2</span><br>      <span class="hljs-attr">with:</span> <br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&#x27;16&#x27;</span> <span class="hljs-comment"># 注意版本不能太低</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Init</span> <span class="hljs-string">ssh</span><br>      <span class="hljs-attr">env:</span><br>        <span class="hljs-attr">ACTION_DEPLOY_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GIT_PRIVATE_KEY</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-comment"># 你刚刚填写的私钥名称</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        mkdir -p ~/.ssh/</span><br><span class="hljs-string">        echo &quot;$ACTION_DEPLOY_KEY&quot; &gt; ~/.ssh/id_rsa</span><br><span class="hljs-string">        chmod 700 ~/.ssh</span><br><span class="hljs-string">        chmod 600 ~/.ssh/id_rsa</span><br><span class="hljs-string">        ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string">        git config --global user.name &quot;&lt;用户名&gt;&quot;</span><br><span class="hljs-string">        git config --global user.email &quot;&lt;邮箱&gt;&quot;</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Npm</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install</span><br><span class="hljs-string">        npm -v # 判断是否安装成功，并且查看版本对应是否正确</span><br><span class="hljs-string">        node -v # 判断是否安装成功，并且查看版本对应是否正确</span><br><span class="hljs-string">        echo &quot;install npm successful&quot; </span><br><span class="hljs-string"></span>      <span class="hljs-comment">#working-directory: ./&lt;文件夹名称&gt; #如果直接执行npm install报错“Process completed with exit code 254.”的话就是指找不到package.json文件，先看看hexo的路径和当前根目录是不是一个路径，特别是套了一层文件夹的话肯定会报错，这里working-directory是跳转进指定的文件夹路径再执行run，如果你的项目不需要跳转路径或路径不一样则更改成你的</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Hexo</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install -g hexo-cli --save</span><br><span class="hljs-string">        hexo -v # 判断是否安装成功</span><br><span class="hljs-string">        echo &quot;install hexo successful&quot;</span><br><span class="hljs-string"></span>      <span class="hljs-comment">#working-directory: ./&lt;文件夹名称&gt; #这里working-directory跳转进指定的文件夹路径再执行run，如果你的项目不需要跳转路径或路径不一样则更改成你的</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">Blog</span><br>      <span class="hljs-attr">run:</span>  <span class="hljs-string">|</span><br><span class="hljs-string">        hexo clean</span><br><span class="hljs-string">        hexo g</span><br><span class="hljs-string">        echo &quot;build blog successful&quot;</span><br><span class="hljs-string"></span>       <span class="hljs-comment">#working-directory: ./&lt;文件夹名称&gt; #这里working-directory跳转进指定的文件夹路径再执行run，如果你的项目不需要跳转路径或路径不一样则更改成你的</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        hexo deploy</span><br><span class="hljs-string"></span>      <span class="hljs-comment">#working-directory: ./&lt;文件夹名称&gt; #这里working-directory跳转进指定的文件夹路径再执行run，如果你的项目不需要跳转路径或路径不一样则更改成你的</span><br></code></pre></td></tr></table></figure></details><br><h3 id="4-2-使用token的方式自动部署"><a href="#4-2-使用token的方式自动部署" class="headerlink" title="4.2.使用token的方式自动部署"></a>4.2.使用token的方式自动部署</h3><p>本地源码仓库根目录建立路径.github&#x2F;workflows&#x2F;，一定要在这个路径下，这个路径下再建一个.yml后缀的文件，命名随意<br>文件内容如下：</p><details><summary>Show Code</summary><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br><br><span class="hljs-attr">on:</span> [<span class="hljs-string">push</span>]<br><br><span class="hljs-attr">permissions:</span><br>  <span class="hljs-attr">contents:</span> <span class="hljs-string">write</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v2</span><br>      <span class="hljs-attr">with:</span> <br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&#x27;16&#x27;</span> <span class="hljs-comment"># 注意版本不能太低</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Npm</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install</span><br><span class="hljs-string">        npm -v # 判断是否安装成功，并且查看版本对应是否正确</span><br><span class="hljs-string">        node -v # 判断是否安装成功，并且查看版本对应是否正确</span><br><span class="hljs-string">        echo &quot;install npm successful&quot; </span><br><span class="hljs-string"></span>      <span class="hljs-comment">#working-directory: ./&lt;文件夹名称&gt; #如果直接执行npm install报错“Process completed with exit code 254.”的话就是指找不到package.json文件，先看看hexo的路径和当前根目录是不是一个路径，特别是套了一层文件夹的话肯定会报错，这里working-directory是跳转进指定的文件夹路径再执行run，如果你的项目不需要跳转路径或路径不一样则更改成你的</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Hexo</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install -g hexo-cli --save</span><br><span class="hljs-string">        hexo -v # 判断是否安装成功</span><br><span class="hljs-string">        echo &quot;install hexo successful&quot;</span><br><span class="hljs-string"></span>      <span class="hljs-comment">#working-directory: ./&lt;文件夹名称&gt; #这里working-directory跳转进指定的文件夹路径再执行run，如果你的项目不需要跳转路径或路径不一样则更改成你的</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">Blog</span><br>      <span class="hljs-attr">run:</span>  <span class="hljs-string">|</span><br><span class="hljs-string">        hexo clean</span><br><span class="hljs-string">        hexo g</span><br><span class="hljs-string">        echo &quot;build blog successful&quot;</span><br><span class="hljs-string"></span>       <span class="hljs-comment">#working-directory: ./&lt;文件夹名称&gt; #这里working-directory跳转进指定的文件夹路径再执行run，如果你的项目不需要跳转路径或路径不一样则更改成你的</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        git config --global user.name &quot;&lt;用户名&gt;&quot;</span><br><span class="hljs-string">        git config --global user.email &quot;&lt;邮箱&gt;&quot;</span><br><span class="hljs-string">        hexo deploy</span><br><span class="hljs-string"></span>      <span class="hljs-comment">#working-directory: ./&lt;文件夹名称&gt; #这里working-directory跳转进指定的文件夹路径再执行run，如果你的项目不需要跳转路径或路径不一样则更改成你的</span><br></code></pre></td></tr></table></figure></details><br><p>以上都完成了，添加进版本管理，提交，push。自动部署的原理就是在GitHub上按指定步骤搭建一套编译环境，然后再执行编译，和本地执行编译的原理是一样的，如果自动部署脚本执行出现问题，直接在Github-Action查看输出的错误信息排查，可以类比自己在本地编译时是否也会出现此类型错误，本地怎么解决那自动部署也怎么解决即可</p><h2 id="5-后续日常写博客流程"><a href="#5-后续日常写博客流程" class="headerlink" title="5.后续日常写博客流程"></a>5.后续日常写博客流程</h2><h3 id="5-1-创建新文章"><a href="#5-1-创建新文章" class="headerlink" title="5.1.创建新文章"></a>5.1.创建新文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;My First Project&quot;</span><br></code></pre></td></tr></table></figure><p>新建一篇文章，然后到生成的路径下找到该md文件，打开编写即可，按markdown语法编写，写完执行hexo clean ，hexo g，hexo s，访问4000端口看看效果，然后再执行hexo d发布上传。如果配置了自动部署，看完效果直接加入版本管理，提交，push即可。</p><h3 id="5-2-后续拓展功能"><a href="#5-2-后续拓展功能" class="headerlink" title="5.2.后续拓展功能"></a>5.2.后续拓展功能</h3><p>1.为你的博客设置主题<br>2.为博客增加标签Tags和分类Categories功能</p><h2 id="6-搭建过程中遇到的问题解答"><a href="#6-搭建过程中遇到的问题解答" class="headerlink" title="6.搭建过程中遇到的问题解答"></a>6.搭建过程中遇到的问题解答</h2><h3 id="6-1-路径问题"><a href="#6-1-路径问题" class="headerlink" title="6.1.路径问题"></a>6.1.路径问题</h3><p>最开始不熟悉使用git和hexo的情况下，如果先在本地建了一个文件夹作为仓库，然后在这个文件夹路径下使用 <code>git init</code> 然后再使用 <code>hexo init</code>，此时可能会报错，错误提示为：XXXXXXX not empty, please run <code>hexo init</code> on an empty folder and then copy your files into it，意思就是这个路径下存在文件（隐藏文件也算）如果这个时候在执行 <code>hexo init 指定当前路径</code>，就会出现hexo的目录嵌套在了原来的目录下，如下图所示：<br><img src="/../img/First-Blog/img6.png" alt="问题1" title="问题1"><br>后续做自动部署时，npm install等语句执行就会一直报错，hexo g等语句执行不成功</p><p>主要原因：hexo init初始化时，该路径文件夹下必须是空的，如果指定路径会多嵌套一层文件夹</p><p>解决方法：先初始化hexo环境，在生成好相关文件之后再初始化git，再加入版本控制  </p><h3 id="6-2-版本问题"><a href="#6-2-版本问题" class="headerlink" title="6.2.版本问题"></a>6.2.版本问题</h3><p>git、npm、Node.js这三个版本要对应，其中一个版本太低会导致脚本语句无法执行成功，或安装不到位的情况；在自动部署那部分也是，声明的node的版本不能太低，否则会报错，会提示不能低于多少版本</p><h2 id="7-参考链接"><a href="#7-参考链接" class="headerlink" title="7.参考链接"></a>7.参考链接</h2><p>Hexo官方文档 <a href="https://hexo.io/zh-cn/docs/github-pages">https://hexo.io/zh-cn/docs/github-pages</a><br>Git菜鸟教程 <a href="https://www.runoob.com/git/git-create-repository.html">https://www.runoob.com/git/git-create-repository.html</a><br>Github Pages官方文档 <a href="https://docs.github.com/zh/pages/getting-started-with-github-pages/creating-a-github-pages-site">https://docs.github.com/zh/pages/getting-started-with-github-pages/creating-a-github-pages-site</a><br>Markdown官方教程 <a href="https://markdown.com.cn/basic-syntax/">https://markdown.com.cn/basic-syntax/</a></p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>github pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
